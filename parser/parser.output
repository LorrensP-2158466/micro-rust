Terminals unused in grammar

    OR


State 81 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item_list error item
    4          | item
    5          | error

    6 item: function_decl

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr

    8 func_ret_type: ARROW type
    9              | ε

   10 func_decl_args: LPAREN func_arg_list RPAREN
   11               | LPAREN RPAREN
   12               | error

   13 func_arg_list: func_arg_list COMMA func_arg
   14              | func_arg

   15 func_arg: opt_mut IDENTIFIER COLON type
   16         | opt_mut IDENTIFIER error

   17 stmt: SEMICOLON
   18     | let
   19     | expr_stmt
   20     | print_ln SEMICOLON
   21     | item
   22     | error SEMICOLON

   23 stmt_list: stmt_list stmt
   24          | stmt

   25 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   26 type_decl: COLON type
   27          | ε

   28 opt_mut: MUT
   29        | ε

   30 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   31    | LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   32    | LET opt_mut IDENTIFIER COLON type SEMICOLON
   33    | LET UNDERSCORE COLON type EQ expr SEMICOLON

   34 if_expr: IF expr block_expr
   35        | IF expr block_expr ELSE if_expr
   36        | IF expr block_expr ELSE block_expr

   37 ref_add: AMPERSAND
   38        | AMPERSAND_MUT
   39        | ε

   40 type: ref_add I8
   41     | ref_add I16
   42     | ref_add I32
   43     | ref_add I64
   44     | ref_add ISIZE
   45     | ref_add U8
   46     | ref_add U16
   47     | ref_add U32
   48     | ref_add U64
   49     | ref_add USIZE
   50     | ref_add BOOL
   51     | ref_add LPAREN RPAREN
   52     | ref_add IDENTIFIER

   53 block_expr: LBRACE stmt_list RBRACE
   54           | LBRACE stmt_list expr RBRACE
   55           | LBRACE expr RBRACE
   56           | LBRACE RBRACE

   57 assignment: IDENTIFIER EQ expr
   58           | IDENTIFIER PLUS_EQ expr
   59           | IDENTIFIER MIN_EQ expr
   60           | IDENTIFIER DIV_EQ expr
   61           | IDENTIFIER MUL_EQ expr

   62 unary_op_expr: MINUS expr
   63              | STAR expr
   64              | BANG expr
   65              | AMPERSAND expr
   66              | AMPERSAND_MUT expr

   67 bin_op_expr: expr PLUS expr
   68            | expr MINUS expr
   69            | expr STAR expr
   70            | expr SLASH expr
   71            | expr L_AND expr
   72            | expr L_OR expr
   73            | expr EQEQ expr
   74            | expr NE expr
   75            | expr LT expr
   76            | expr GT expr
   77            | expr GE expr
   78            | expr LE expr

   79 literal: DEC_LITERAL
   80        | STR_LITERAL
   81        | FLOAT_LITERAL
   82        | TRUE
   83        | FALSE

   84 call_expr_args: call_expr_args COMMA expr
   85               | expr

   86 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN
   87          | IDENTIFIER LPAREN RPAREN

   88 while_expr: WHILE expr block_expr

   89 expr: expr_w_block
   90     | expr_wo_block

   91 expr_stmt: expr_w_block
   92          | expr_wo_block SEMICOLON

   93 expr_w_block: while_expr
   94             | if_expr
   95             | block_expr

   96 expr_wo_block: assignment
   97              | bin_op_expr
   98              | IDENTIFIER
   99              | unary_op_expr
  100              | LPAREN expr RPAREN
  101              | LPAREN RPAREN
  102              | call_expr
  103              | literal


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3 5 12 16 22 31
    DEC_LITERAL <Token> (258) 79
    FLOAT_LITERAL <Token> (259) 81
    STR_LITERAL <Token> (260) 25 80
    TRUE <Token> (261) 82
    FALSE <Token> (262) 83
    IDENTIFIER <Token> (263) 7 15 16 30 31 32 52 57 58 59 60 61 86 87 98
    UNDERSCORE <Token> (264) 33
    I8 <Token> (265) 40
    I16 <Token> (266) 41
    I32 <Token> (267) 42
    I64 <Token> (268) 43
    ISIZE <Token> (269) 44
    U8 <Token> (270) 45
    U16 <Token> (271) 46
    U32 <Token> (272) 47
    U64 <Token> (273) 48
    USIZE <Token> (274) 49
    LET <Token> (275) 30 31 32 33
    MUT <Token> (276) 28
    BOOL <Token> (277) 50
    FN <Token> (278) 7
    WHILE <Token> (279) 88
    PRINT_LN <Token> (280) 25
    EQ <Token> (281) 30 31 33 57
    EQEQ <Token> (282) 73
    NE <Token> (283) 74
    BANG <Token> (284) 64
    LT <Token> (285) 75
    LE <Token> (286) 78
    GT <Token> (287) 76
    GE <Token> (288) 77
    PLUS <Token> (289) 67
    MINUS <Token> (290) 62 68
    STAR <Token> (291) 63 69
    SLASH <Token> (292) 70
    COMMA <Token> (293) 13 84
    ARROW <Token> (294) 8
    IF <Token> (295) 34 35 36
    ELSE <Token> (296) 35 36
    L_AND <Token> (297) 71
    L_OR <Token> (298) 72
    PLUS_EQ <Token> (299) 58
    MIN_EQ <Token> (300) 59
    MUL_EQ <Token> (301) 61
    DIV_EQ <Token> (302) 60
    LBRACE <Token> (303) 53 54 55 56
    RBRACE <Token> (304) 53 54 55 56
    LPAREN <Token> (305) 10 11 25 51 86 87 100 101
    RPAREN <Token> (306) 10 11 25 51 86 87 100 101
    SEMICOLON <Token> (307) 17 20 22 30 31 32 33 92
    COLON <Token> (308) 15 26 32 33
    AMPERSAND <Token> (309) 37 65
    OR <Token> (310)
    AMPERSAND_MUT <Token> (311) 38 66
    REF (312)
    REF_MUT (313)
    DEREF (314)
    UMINUS (315)
    NOT (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program <Unique<Ast>> (63)
        on left: 1
        on right: 0
    item_list <std::vector<Unique<Item>>> (64)
        on left: 2 3 4 5
        on right: 1 2 3
    item <Unique<Item>> (65)
        on left: 6
        on right: 2 3 4 21
    function_decl <Unique<FunDecl>> (66)
        on left: 7
        on right: 6
    func_ret_type <Type> (67)
        on left: 8 9
        on right: 7
    func_decl_args <std::vector<FunArg>> (68)
        on left: 10 11 12
        on right: 7
    func_arg_list <std::vector<FunArg>> (69)
        on left: 13 14
        on right: 10 13
    func_arg <FunArg> (70)
        on left: 15 16
        on right: 13 14
    stmt <Unique<Stmt>> (71)
        on left: 17 18 19 20 21 22
        on right: 23 24
    stmt_list <std::vector<Unique<Stmt>>> (72)
        on left: 23 24
        on right: 23 53 54
    print_ln <Unique<PrintLn>> (73)
        on left: 25
        on right: 20
    type_decl <std::optional<Type>> (74)
        on left: 26 27
        on right: 30 31
    opt_mut <bool> (75)
        on left: 28 29
        on right: 15 16 30 31 32
    let <Unique<LetStmt>> (76)
        on left: 30 31 32 33
        on right: 18
    if_expr <Unique<IfElse>> (77)
        on left: 34 35 36
        on right: 35 94
    ref_add <uint8_t> (78)
        on left: 37 38 39
        on right: 40 41 42 43 44 45 46 47 48 49 50 51 52
    type <Type> (79)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 8 15 26 32 33
    block_expr <Unique<BlockExpr>> (80)
        on left: 53 54 55 56
        on right: 7 34 35 36 88 95
    assignment <Unique<AssignExpr>> (81)
        on left: 57 58 59 60 61
        on right: 96
    unary_op_expr <Unique<UnaryOpExpr>> (82)
        on left: 62 63 64 65 66
        on right: 99
    bin_op_expr <Unique<BinOpExpr>> (83)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 97
    literal <Unique<Literal>> (84)
        on left: 79 80 81 82 83
        on right: 103
    call_expr_args <std::vector<Unique<Expr>>> (85)
        on left: 84 85
        on right: 84 86
    call_expr <Unique<CallExpr>> (86)
        on left: 86 87
        on right: 102
    while_expr <Unique<WhileLoop>> (87)
        on left: 88
        on right: 93
    expr <Unique<Expr>> (88)
        on left: 89 90
        on right: 30 33 34 35 36 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 84 85 88 100
    expr_stmt <Unique<Expr>> (89)
        on left: 91 92
        on right: 19
    expr_w_block <Unique<Expr>> (90)
        on left: 93 94 95
        on right: 89 91
    expr_wo_block <Unique<Expr>> (91)
        on left: 96 97 98 99 100 101 102 103
        on right: 90 92


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    FN     shift, and go to state 2

    program        go to state 3
    item_list      go to state 4
    item           go to state 5
    function_decl  go to state 6


State 1

    5 item_list: error •

    $default  reduce using rule 5 (item_list)


State 2

    7 function_decl: FN • IDENTIFIER func_decl_args func_ret_type block_expr

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: item_list •
    2 item_list: item_list • item
    3          | item_list • error item

    error  shift, and go to state 9
    FN     shift, and go to state 2

    $end  reduce using rule 1 (program)

    item           go to state 10
    function_decl  go to state 6


State 5

    4 item_list: item •

    $default  reduce using rule 4 (item_list)


State 6

    6 item: function_decl •

    $default  reduce using rule 6 (item)


State 7

    7 function_decl: FN IDENTIFIER • func_decl_args func_ret_type block_expr

    error   shift, and go to state 11
    LPAREN  shift, and go to state 12

    func_decl_args  go to state 13


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 item_list: item_list error • item

    FN  shift, and go to state 2

    item           go to state 14
    function_decl  go to state 6


State 10

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 11

   12 func_decl_args: error •

    $default  reduce using rule 12 (func_decl_args)


State 12

   10 func_decl_args: LPAREN • func_arg_list RPAREN
   11               | LPAREN • RPAREN

    MUT     shift, and go to state 15
    RPAREN  shift, and go to state 16

    $default  reduce using rule 29 (opt_mut)

    func_arg_list  go to state 17
    func_arg       go to state 18
    opt_mut        go to state 19


State 13

    7 function_decl: FN IDENTIFIER func_decl_args • func_ret_type block_expr

    ARROW  shift, and go to state 20

    $default  reduce using rule 9 (func_ret_type)

    func_ret_type  go to state 21


State 14

    3 item_list: item_list error item •

    $default  reduce using rule 3 (item_list)


State 15

   28 opt_mut: MUT •

    $default  reduce using rule 28 (opt_mut)


State 16

   11 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 11 (func_decl_args)


State 17

   10 func_decl_args: LPAREN func_arg_list • RPAREN
   13 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 22
    RPAREN  shift, and go to state 23


State 18

   14 func_arg_list: func_arg •

    $default  reduce using rule 14 (func_arg_list)


State 19

   15 func_arg: opt_mut • IDENTIFIER COLON type
   16         | opt_mut • IDENTIFIER error

    IDENTIFIER  shift, and go to state 24


State 20

    8 func_ret_type: ARROW • type

    AMPERSAND      shift, and go to state 25
    AMPERSAND_MUT  shift, and go to state 26

    $default  reduce using rule 39 (ref_add)

    ref_add  go to state 27
    type     go to state 28


State 21

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type • block_expr

    LBRACE  shift, and go to state 29

    block_expr  go to state 30


State 22

   13 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 15

    $default  reduce using rule 29 (opt_mut)

    func_arg  go to state 31
    opt_mut   go to state 19


State 23

   10 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 10 (func_decl_args)


State 24

   15 func_arg: opt_mut IDENTIFIER • COLON type
   16         | opt_mut IDENTIFIER • error

    error  shift, and go to state 32
    COLON  shift, and go to state 33


State 25

   37 ref_add: AMPERSAND •

    $default  reduce using rule 37 (ref_add)


State 26

   38 ref_add: AMPERSAND_MUT •

    $default  reduce using rule 38 (ref_add)


State 27

   40 type: ref_add • I8
   41     | ref_add • I16
   42     | ref_add • I32
   43     | ref_add • I64
   44     | ref_add • ISIZE
   45     | ref_add • U8
   46     | ref_add • U16
   47     | ref_add • U32
   48     | ref_add • U64
   49     | ref_add • USIZE
   50     | ref_add • BOOL
   51     | ref_add • LPAREN RPAREN
   52     | ref_add • IDENTIFIER

    IDENTIFIER  shift, and go to state 34
    I8          shift, and go to state 35
    I16         shift, and go to state 36
    I32         shift, and go to state 37
    I64         shift, and go to state 38
    ISIZE       shift, and go to state 39
    U8          shift, and go to state 40
    U16         shift, and go to state 41
    U32         shift, and go to state 42
    U64         shift, and go to state 43
    USIZE       shift, and go to state 44
    BOOL        shift, and go to state 45
    LPAREN      shift, and go to state 46


State 28

    8 func_ret_type: ARROW type •

    $default  reduce using rule 8 (func_ret_type)


State 29

   53 block_expr: LBRACE • stmt_list RBRACE
   54           | LBRACE • stmt_list expr RBRACE
   55           | LBRACE • expr RBRACE
   56           | LBRACE • RBRACE

    error          shift, and go to state 47
    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    LET            shift, and go to state 54
    FN             shift, and go to state 2
    WHILE          shift, and go to state 55
    PRINT_LN       shift, and go to state 56
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    RBRACE         shift, and go to state 61
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 63
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    item           go to state 66
    function_decl  go to state 6
    stmt           go to state 67
    stmt_list      go to state 68
    print_ln       go to state 69
    let            go to state 70
    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 79
    expr_stmt      go to state 80
    expr_w_block   go to state 81
    expr_wo_block  go to state 82


State 30

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr •

    $default  reduce using rule 7 (function_decl)


State 31

   13 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 13 (func_arg_list)


State 32

   16 func_arg: opt_mut IDENTIFIER error •

    $default  reduce using rule 16 (func_arg)


State 33

   15 func_arg: opt_mut IDENTIFIER COLON • type

    AMPERSAND      shift, and go to state 25
    AMPERSAND_MUT  shift, and go to state 26

    $default  reduce using rule 39 (ref_add)

    ref_add  go to state 27
    type     go to state 83


State 34

   52 type: ref_add IDENTIFIER •

    $default  reduce using rule 52 (type)


State 35

   40 type: ref_add I8 •

    $default  reduce using rule 40 (type)


State 36

   41 type: ref_add I16 •

    $default  reduce using rule 41 (type)


State 37

   42 type: ref_add I32 •

    $default  reduce using rule 42 (type)


State 38

   43 type: ref_add I64 •

    $default  reduce using rule 43 (type)


State 39

   44 type: ref_add ISIZE •

    $default  reduce using rule 44 (type)


State 40

   45 type: ref_add U8 •

    $default  reduce using rule 45 (type)


State 41

   46 type: ref_add U16 •

    $default  reduce using rule 46 (type)


State 42

   47 type: ref_add U32 •

    $default  reduce using rule 47 (type)


State 43

   48 type: ref_add U64 •

    $default  reduce using rule 48 (type)


State 44

   49 type: ref_add USIZE •

    $default  reduce using rule 49 (type)


State 45

   50 type: ref_add BOOL •

    $default  reduce using rule 50 (type)


State 46

   51 type: ref_add LPAREN • RPAREN

    RPAREN  shift, and go to state 84


State 47

   22 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 48

   79 literal: DEC_LITERAL •

    $default  reduce using rule 79 (literal)


State 49

   81 literal: FLOAT_LITERAL •

    $default  reduce using rule 81 (literal)


State 50

   80 literal: STR_LITERAL •

    $default  reduce using rule 80 (literal)


State 51

   82 literal: TRUE •

    $default  reduce using rule 82 (literal)


State 52

   83 literal: FALSE •

    $default  reduce using rule 83 (literal)


State 53

   57 assignment: IDENTIFIER • EQ expr
   58           | IDENTIFIER • PLUS_EQ expr
   59           | IDENTIFIER • MIN_EQ expr
   60           | IDENTIFIER • DIV_EQ expr
   61           | IDENTIFIER • MUL_EQ expr
   86 call_expr: IDENTIFIER • LPAREN call_expr_args RPAREN
   87          | IDENTIFIER • LPAREN RPAREN
   98 expr_wo_block: IDENTIFIER •

    EQ       shift, and go to state 86
    PLUS_EQ  shift, and go to state 87
    MIN_EQ   shift, and go to state 88
    MUL_EQ   shift, and go to state 89
    DIV_EQ   shift, and go to state 90
    LPAREN   shift, and go to state 91

    $default  reduce using rule 98 (expr_wo_block)


State 54

   30 let: LET • opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   31    | LET • opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   32    | LET • opt_mut IDENTIFIER COLON type SEMICOLON
   33    | LET • UNDERSCORE COLON type EQ expr SEMICOLON

    UNDERSCORE  shift, and go to state 92
    MUT         shift, and go to state 15

    $default  reduce using rule 29 (opt_mut)

    opt_mut  go to state 93


State 55

   88 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 94
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 56

   25 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 97


State 57

   64 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 98
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 58

   62 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 99
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 59

   63 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 100
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 60

   34 if_expr: IF • expr block_expr
   35        | IF • expr block_expr ELSE if_expr
   36        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 101
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 61

   56 block_expr: LBRACE RBRACE •

    $default  reduce using rule 56 (block_expr)


State 62

  100 expr_wo_block: LPAREN • expr RPAREN
  101              | LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    RPAREN         shift, and go to state 102
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 103
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 63

   17 stmt: SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 64

   65 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 104
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 65

   66 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 105
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 66

   21 stmt: item •

    $default  reduce using rule 21 (stmt)


State 67

   24 stmt_list: stmt •

    $default  reduce using rule 24 (stmt_list)


State 68

   23 stmt_list: stmt_list • stmt
   53 block_expr: LBRACE stmt_list • RBRACE
   54           | LBRACE stmt_list • expr RBRACE

    error          shift, and go to state 47
    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    LET            shift, and go to state 54
    FN             shift, and go to state 2
    WHILE          shift, and go to state 55
    PRINT_LN       shift, and go to state 56
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    RBRACE         shift, and go to state 106
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 63
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    item           go to state 66
    function_decl  go to state 6
    stmt           go to state 107
    print_ln       go to state 69
    let            go to state 70
    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 108
    expr_stmt      go to state 80
    expr_w_block   go to state 81
    expr_wo_block  go to state 82


State 69

   20 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 70

   18 stmt: let •

    $default  reduce using rule 18 (stmt)


State 71

   94 expr_w_block: if_expr •

    $default  reduce using rule 94 (expr_w_block)


State 72

   95 expr_w_block: block_expr •

    $default  reduce using rule 95 (expr_w_block)


State 73

   96 expr_wo_block: assignment •

    $default  reduce using rule 96 (expr_wo_block)


State 74

   99 expr_wo_block: unary_op_expr •

    $default  reduce using rule 99 (expr_wo_block)


State 75

   97 expr_wo_block: bin_op_expr •

    $default  reduce using rule 97 (expr_wo_block)


State 76

  103 expr_wo_block: literal •

    $default  reduce using rule 103 (expr_wo_block)


State 77

  102 expr_wo_block: call_expr •

    $default  reduce using rule 102 (expr_wo_block)


State 78

   93 expr_w_block: while_expr •

    $default  reduce using rule 93 (expr_w_block)


State 79

   55 block_expr: LBRACE expr • RBRACE
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ    shift, and go to state 110
    NE      shift, and go to state 111
    LT      shift, and go to state 112
    LE      shift, and go to state 113
    GT      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    STAR    shift, and go to state 118
    SLASH   shift, and go to state 119
    L_AND   shift, and go to state 120
    L_OR    shift, and go to state 121
    RBRACE  shift, and go to state 122


State 80

   19 stmt: expr_stmt •

    $default  reduce using rule 19 (stmt)


State 81

   89 expr: expr_w_block •
   91 expr_stmt: expr_w_block •

    EQEQ      reduce using rule 89 (expr)
    NE        reduce using rule 89 (expr)
    LT        reduce using rule 89 (expr)
    LE        reduce using rule 89 (expr)
    GT        reduce using rule 89 (expr)
    GE        reduce using rule 89 (expr)
    PLUS      reduce using rule 89 (expr)
    MINUS     reduce using rule 89 (expr)
    MINUS     [reduce using rule 91 (expr_stmt)]
    STAR      reduce using rule 89 (expr)
    STAR      [reduce using rule 91 (expr_stmt)]
    SLASH     reduce using rule 89 (expr)
    L_AND     reduce using rule 89 (expr)
    L_OR      reduce using rule 89 (expr)
    RBRACE    reduce using rule 89 (expr)
    RBRACE    [reduce using rule 91 (expr_stmt)]
    $default  reduce using rule 91 (expr_stmt)


State 82

   90 expr: expr_wo_block •
   92 expr_stmt: expr_wo_block • SEMICOLON

    SEMICOLON  shift, and go to state 123

    $default  reduce using rule 90 (expr)


State 83

   15 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 15 (func_arg)


State 84

   51 type: ref_add LPAREN RPAREN •

    $default  reduce using rule 51 (type)


State 85

   22 stmt: error SEMICOLON •

    $default  reduce using rule 22 (stmt)


State 86

   57 assignment: IDENTIFIER EQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 124
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 87

   58 assignment: IDENTIFIER PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 125
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 88

   59 assignment: IDENTIFIER MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 126
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 89

   61 assignment: IDENTIFIER MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 127
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 90

   60 assignment: IDENTIFIER DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 128
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 91

   86 call_expr: IDENTIFIER LPAREN • call_expr_args RPAREN
   87          | IDENTIFIER LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    RPAREN         shift, and go to state 129
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr         go to state 71
    block_expr      go to state 72
    assignment      go to state 73
    unary_op_expr   go to state 74
    bin_op_expr     go to state 75
    literal         go to state 76
    call_expr_args  go to state 130
    call_expr       go to state 77
    while_expr      go to state 78
    expr            go to state 131
    expr_w_block    go to state 95
    expr_wo_block   go to state 96


State 92

   33 let: LET UNDERSCORE • COLON type EQ expr SEMICOLON

    COLON  shift, and go to state 132


State 93

   30 let: LET opt_mut • IDENTIFIER type_decl EQ expr SEMICOLON
   31    | LET opt_mut • IDENTIFIER type_decl error EQ SEMICOLON
   32    | LET opt_mut • IDENTIFIER COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 133


State 94

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr
   88 while_expr: WHILE expr • block_expr

    EQEQ    shift, and go to state 110
    NE      shift, and go to state 111
    LT      shift, and go to state 112
    LE      shift, and go to state 113
    GT      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    STAR    shift, and go to state 118
    SLASH   shift, and go to state 119
    L_AND   shift, and go to state 120
    L_OR    shift, and go to state 121
    LBRACE  shift, and go to state 29

    block_expr  go to state 134


State 95

   89 expr: expr_w_block •

    $default  reduce using rule 89 (expr)


State 96

   90 expr: expr_wo_block •

    $default  reduce using rule 90 (expr)


State 97

   25 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 135


State 98

   64 unary_op_expr: BANG expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 64 (unary_op_expr)


State 99

   62 unary_op_expr: MINUS expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 62 (unary_op_expr)


State 100

   63 unary_op_expr: STAR expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 63 (unary_op_expr)


State 101

   34 if_expr: IF expr • block_expr
   35        | IF expr • block_expr ELSE if_expr
   36        | IF expr • block_expr ELSE block_expr
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ    shift, and go to state 110
    NE      shift, and go to state 111
    LT      shift, and go to state 112
    LE      shift, and go to state 113
    GT      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    STAR    shift, and go to state 118
    SLASH   shift, and go to state 119
    L_AND   shift, and go to state 120
    L_OR    shift, and go to state 121
    LBRACE  shift, and go to state 29

    block_expr  go to state 136


State 102

  101 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 101 (expr_wo_block)


State 103

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr
  100 expr_wo_block: LPAREN expr • RPAREN

    EQEQ    shift, and go to state 110
    NE      shift, and go to state 111
    LT      shift, and go to state 112
    LE      shift, and go to state 113
    GT      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    STAR    shift, and go to state 118
    SLASH   shift, and go to state 119
    L_AND   shift, and go to state 120
    L_OR    shift, and go to state 121
    RPAREN  shift, and go to state 137


State 104

   65 unary_op_expr: AMPERSAND expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 65 (unary_op_expr)


State 105

   66 unary_op_expr: AMPERSAND_MUT expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 66 (unary_op_expr)


State 106

   53 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 53 (block_expr)


State 107

   23 stmt_list: stmt_list stmt •

    $default  reduce using rule 23 (stmt_list)


State 108

   54 block_expr: LBRACE stmt_list expr • RBRACE
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ    shift, and go to state 110
    NE      shift, and go to state 111
    LT      shift, and go to state 112
    LE      shift, and go to state 113
    GT      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    STAR    shift, and go to state 118
    SLASH   shift, and go to state 119
    L_AND   shift, and go to state 120
    L_OR    shift, and go to state 121
    RBRACE  shift, and go to state 138


State 109

   20 stmt: print_ln SEMICOLON •

    $default  reduce using rule 20 (stmt)


State 110

   73 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 139
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 111

   74 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 140
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 112

   75 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 141
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 113

   78 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 142
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 114

   76 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 143
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 115

   77 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 144
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 116

   67 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 145
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 117

   68 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 146
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 118

   69 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 147
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 119

   70 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 148
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 120

   71 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 149
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 121

   72 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 150
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 122

   55 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 55 (block_expr)


State 123

   92 expr_stmt: expr_wo_block SEMICOLON •

    $default  reduce using rule 92 (expr_stmt)


State 124

   57 assignment: IDENTIFIER EQ expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 57 (assignment)


State 125

   58 assignment: IDENTIFIER PLUS_EQ expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 58 (assignment)


State 126

   59 assignment: IDENTIFIER MIN_EQ expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 59 (assignment)


State 127

   61 assignment: IDENTIFIER MUL_EQ expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 61 (assignment)


State 128

   60 assignment: IDENTIFIER DIV_EQ expr •
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 60 (assignment)


State 129

   87 call_expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 87 (call_expr)


State 130

   84 call_expr_args: call_expr_args • COMMA expr
   86 call_expr: IDENTIFIER LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 151
    RPAREN  shift, and go to state 152


State 131

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr
   85 call_expr_args: expr •

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 85 (call_expr_args)


State 132

   33 let: LET UNDERSCORE COLON • type EQ expr SEMICOLON

    AMPERSAND      shift, and go to state 25
    AMPERSAND_MUT  shift, and go to state 26

    $default  reduce using rule 39 (ref_add)

    ref_add  go to state 27
    type     go to state 153


State 133

   30 let: LET opt_mut IDENTIFIER • type_decl EQ expr SEMICOLON
   31    | LET opt_mut IDENTIFIER • type_decl error EQ SEMICOLON
   32    | LET opt_mut IDENTIFIER • COLON type SEMICOLON

    COLON  shift, and go to state 154

    $default  reduce using rule 27 (type_decl)

    type_decl  go to state 155


State 134

   88 while_expr: WHILE expr block_expr •

    $default  reduce using rule 88 (while_expr)


State 135

   25 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 156


State 136

   34 if_expr: IF expr block_expr •
   35        | IF expr block_expr • ELSE if_expr
   36        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 157

    $default  reduce using rule 34 (if_expr)


State 137

  100 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 100 (expr_wo_block)


State 138

   54 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 54 (block_expr)


State 139

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   73            | expr EQEQ expr •
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 73 (bin_op_expr)


State 140

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   74            | expr NE expr •
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 74 (bin_op_expr)


State 141

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   75            | expr LT expr •
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 75 (bin_op_expr)


State 142

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr
   78            | expr LE expr •

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 78 (bin_op_expr)


State 143

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   76            | expr GT expr •
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 76 (bin_op_expr)


State 144

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   77            | expr GE expr •
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    EQEQ  error (nonassociative)
    NE    error (nonassociative)
    LT    error (nonassociative)
    LE    error (nonassociative)
    GT    error (nonassociative)
    GE    error (nonassociative)

    $default  reduce using rule 77 (bin_op_expr)


State 145

   67 bin_op_expr: expr • PLUS expr
   67            | expr PLUS expr •
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119

    $default  reduce using rule 67 (bin_op_expr)


State 146

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   68            | expr MINUS expr •
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119

    $default  reduce using rule 68 (bin_op_expr)


State 147

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   69            | expr STAR expr •
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 69 (bin_op_expr)


State 148

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   70            | expr SLASH expr •
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    $default  reduce using rule 70 (bin_op_expr)


State 149

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   71            | expr L_AND expr •
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119

    $default  reduce using rule 71 (bin_op_expr)


State 150

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   72            | expr L_OR expr •
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120

    $default  reduce using rule 72 (bin_op_expr)


State 151

   84 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 158
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 152

   86 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN •

    $default  reduce using rule 86 (call_expr)


State 153

   33 let: LET UNDERSCORE COLON type • EQ expr SEMICOLON

    EQ  shift, and go to state 159


State 154

   26 type_decl: COLON • type
   32 let: LET opt_mut IDENTIFIER COLON • type SEMICOLON

    AMPERSAND      shift, and go to state 25
    AMPERSAND_MUT  shift, and go to state 26

    $default  reduce using rule 39 (ref_add)

    ref_add  go to state 27
    type     go to state 160


State 155

   30 let: LET opt_mut IDENTIFIER type_decl • EQ expr SEMICOLON
   31    | LET opt_mut IDENTIFIER type_decl • error EQ SEMICOLON

    error  shift, and go to state 161
    EQ     shift, and go to state 162


State 156

   25 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 25 (print_ln)


State 157

   35 if_expr: IF expr block_expr ELSE • if_expr
   36        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 60
    LBRACE  shift, and go to state 29

    if_expr     go to state 163
    block_expr  go to state 164


State 158

   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr
   84 call_expr_args: call_expr_args COMMA expr •

    EQEQ   shift, and go to state 110
    NE     shift, and go to state 111
    LT     shift, and go to state 112
    LE     shift, and go to state 113
    GT     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    STAR   shift, and go to state 118
    SLASH  shift, and go to state 119
    L_AND  shift, and go to state 120
    L_OR   shift, and go to state 121

    $default  reduce using rule 84 (call_expr_args)


State 159

   33 let: LET UNDERSCORE COLON type EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 165
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 160

   26 type_decl: COLON type •
   32 let: LET opt_mut IDENTIFIER COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 166

    $default  reduce using rule 26 (type_decl)


State 161

   31 let: LET opt_mut IDENTIFIER type_decl error • EQ SEMICOLON

    EQ  shift, and go to state 167


State 162

   30 let: LET opt_mut IDENTIFIER type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 48
    FLOAT_LITERAL  shift, and go to state 49
    STR_LITERAL    shift, and go to state 50
    TRUE           shift, and go to state 51
    FALSE          shift, and go to state 52
    IDENTIFIER     shift, and go to state 53
    WHILE          shift, and go to state 55
    BANG           shift, and go to state 57
    MINUS          shift, and go to state 58
    STAR           shift, and go to state 59
    IF             shift, and go to state 60
    LBRACE         shift, and go to state 29
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 168
    expr_w_block   go to state 95
    expr_wo_block  go to state 96


State 163

   35 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 35 (if_expr)


State 164

   36 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 36 (if_expr)


State 165

   33 let: LET UNDERSCORE COLON type EQ expr • SEMICOLON
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ       shift, and go to state 110
    NE         shift, and go to state 111
    LT         shift, and go to state 112
    LE         shift, and go to state 113
    GT         shift, and go to state 114
    GE         shift, and go to state 115
    PLUS       shift, and go to state 116
    MINUS      shift, and go to state 117
    STAR       shift, and go to state 118
    SLASH      shift, and go to state 119
    L_AND      shift, and go to state 120
    L_OR       shift, and go to state 121
    SEMICOLON  shift, and go to state 169


State 166

   32 let: LET opt_mut IDENTIFIER COLON type SEMICOLON •

    $default  reduce using rule 32 (let)


State 167

   31 let: LET opt_mut IDENTIFIER type_decl error EQ • SEMICOLON

    SEMICOLON  shift, and go to state 170


State 168

   30 let: LET opt_mut IDENTIFIER type_decl EQ expr • SEMICOLON
   67 bin_op_expr: expr • PLUS expr
   68            | expr • MINUS expr
   69            | expr • STAR expr
   70            | expr • SLASH expr
   71            | expr • L_AND expr
   72            | expr • L_OR expr
   73            | expr • EQEQ expr
   74            | expr • NE expr
   75            | expr • LT expr
   76            | expr • GT expr
   77            | expr • GE expr
   78            | expr • LE expr

    EQEQ       shift, and go to state 110
    NE         shift, and go to state 111
    LT         shift, and go to state 112
    LE         shift, and go to state 113
    GT         shift, and go to state 114
    GE         shift, and go to state 115
    PLUS       shift, and go to state 116
    MINUS      shift, and go to state 117
    STAR       shift, and go to state 118
    SLASH      shift, and go to state 119
    L_AND      shift, and go to state 120
    L_OR       shift, and go to state 121
    SEMICOLON  shift, and go to state 171


State 169

   33 let: LET UNDERSCORE COLON type EQ expr SEMICOLON •

    $default  reduce using rule 33 (let)


State 170

   31 let: LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON •

    $default  reduce using rule 31 (let)


State 171

   30 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON •

    $default  reduce using rule 30 (let)
