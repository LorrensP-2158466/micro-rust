Terminals unused in grammar

    OR
    MOD_EQ
    BIT_AND_EQ
    BIT_OR_EQ
    BIT_XOR_EQ
    SHL_EQ
    SHR_EQ
    MOD
    METHOD_CALL
    FUNC_CALL


State 53 conflicts: 1 shift/reduce
State 91 conflicts: 2 shift/reduce
State 92 conflicts: 2 shift/reduce
State 93 conflicts: 2 shift/reduce
State 96 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 101 conflicts: 1 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce
State 147 conflicts: 2 shift/reduce
State 148 conflicts: 2 shift/reduce
State 149 conflicts: 2 shift/reduce
State 150 conflicts: 2 shift/reduce
State 151 conflicts: 2 shift/reduce
State 152 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce
State 154 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 157 conflicts: 2 shift/reduce
State 158 conflicts: 2 shift/reduce
State 159 conflicts: 2 shift/reduce
State 160 conflicts: 2 shift/reduce
State 161 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item

    4 item: function_decl

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type block_expr
    6              | FN IDENTIFIER func_decl_args block_expr

    7 func_decl_args: LPAREN func_arg_list RPAREN
    8               | LPAREN RPAREN
    9               | error

   10 func_arg_list: func_arg_list COMMA func_arg
   11              | func_arg

   12 func_arg: opt_mut IDENTIFIER COLON type

   13 stmt: SEMICOLON
   14     | let
   15     | RETURN SEMICOLON
   16     | BREAK SEMICOLON
   17     | CONTINUE SEMICOLON
   18     | expr_stmt SEMICOLON
   19     | print_ln SEMICOLON
   20     | item

   21 stmt_list: stmt_list stmt
   22          | stmt_list error
   23          | stmt

   24 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   25 type_decl: COLON type
   26          | COLON error
   27          | ε

   28 opt_mut: MUT
   29        | ε

   30 ident: IDENTIFIER

   31 let: LET opt_mut ident type_decl EQ expr SEMICOLON
   32    | LET opt_mut ident type_decl SEMICOLON

   33 if_expr: IF expr block_expr
   34        | IF expr block_expr ELSE if_expr
   35        | IF expr block_expr ELSE block_expr

   36 type_list: type_list COMMA type
   37          | type

   38 type: I8
   39     | I16
   40     | I32
   41     | I64
   42     | ISIZE
   43     | U8
   44     | U16
   45     | U32
   46     | U64
   47     | USIZE
   48     | BOOL
   49     | UNDERSCORE
   50     | LPAREN type_list RPAREN
   51     | LPAREN RPAREN
   52     | FN LPAREN type_list RPAREN ARROW type
   53     | FN LPAREN type_list RPAREN
   54     | FN LPAREN RPAREN ARROW type
   55     | FN LPAREN RPAREN

   56 block_expr: LBRACE stmt_list RBRACE
   57           | LBRACE stmt_list expr RBRACE
   58           | LBRACE expr RBRACE
   59           | LBRACE RBRACE

   60 unary_op_expr: MINUS expr
   61              | STAR expr
   62              | BANG expr
   63              | AMPERSAND expr
   64              | AMPERSAND_MUT expr

   65 bin_op_expr: expr PLUS expr
   66            | expr MINUS expr
   67            | expr STAR expr
   68            | expr SLASH expr
   69            | expr L_AND expr
   70            | expr L_OR expr
   71            | expr EQEQ expr
   72            | expr NE expr
   73            | expr LT expr
   74            | expr GT expr
   75            | expr GE expr
   76            | expr LE expr
   77            | expr EQ expr
   78            | expr PLUS_EQ expr
   79            | expr MIN_EQ expr
   80            | expr DIV_EQ expr
   81            | expr MUL_EQ expr

   82 literal: DEC_LITERAL
   83        | STR_LITERAL
   84        | FLOAT_LITERAL
   85        | TRUE
   86        | FALSE

   87 call_expr_args: call_expr_args COMMA expr
   88               | expr

   89 call_expr: expr LPAREN call_expr_args RPAREN
   90          | expr LPAREN RPAREN

   91 while_expr: WHILE expr block_expr

   92 tuple_index_expr: expr DOT DEC_LITERAL

   93 expr: expr_w_block
   94     | expr_wo_block

   95 expr_list: expr_list COMMA expr
   96          | expr

   97 expr_stmt: expr_w_block
   98          | expr_wo_block

   99 expr_w_block: while_expr
  100             | if_expr
  101             | block_expr

  102 expr_wo_block: LPAREN expr RPAREN
  103              | bin_op_expr
  104              | tuple_index_expr
  105              | IDENTIFIER
  106              | unary_op_expr
  107              | LPAREN RPAREN
  108              | call_expr
  109              | RETURN expr
  110              | BREAK expr
  111              | CONTINUE
  112              | LPAREN expr_list opt_comma RPAREN
  113              | literal

  114 opt_comma: COMMA
  115          | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 9 22 26
    DEC_LITERAL <Token> (258) 82 92
    FLOAT_LITERAL <Token> (259) 84
    STR_LITERAL <Token> (260) 24 83
    TRUE <Token> (261) 85
    FALSE <Token> (262) 86
    IDENTIFIER <Token> (263) 5 6 12 30 105
    UNDERSCORE <Token> (264) 49
    I8 <Token> (265) 38
    I16 <Token> (266) 39
    I32 <Token> (267) 40
    I64 <Token> (268) 41
    ISIZE <Token> (269) 42
    U8 <Token> (270) 43
    U16 <Token> (271) 44
    U32 <Token> (272) 45
    U64 <Token> (273) 46
    USIZE <Token> (274) 47
    LET <Token> (275) 31 32
    MUT <Token> (276) 28
    BOOL <Token> (277) 48
    FN <Token> (278) 5 6 52 53 54 55
    WHILE <Token> (279) 91
    PRINT_LN <Token> (280) 24
    EQ <Token> (281) 31 77
    EQEQ <Token> (282) 71
    NE <Token> (283) 72
    BANG <Token> (284) 62
    LT <Token> (285) 73
    LE <Token> (286) 76
    GT <Token> (287) 74
    GE <Token> (288) 75
    PLUS <Token> (289) 65
    MINUS <Token> (290) 60 66
    STAR <Token> (291) 61 67
    SLASH <Token> (292) 68
    COMMA <Token> (293) 10 36 87 95 114
    ARROW <Token> (294) 5 52 54
    IF <Token> (295) 33 34 35
    ELSE <Token> (296) 34 35
    RETURN <Token> (297) 15 109
    BREAK <Token> (298) 16 110
    CONTINUE <Token> (299) 17 111
    L_AND <Token> (300) 69
    L_OR <Token> (301) 70
    PLUS_EQ <Token> (302) 78
    MIN_EQ <Token> (303) 79
    MUL_EQ <Token> (304) 81
    DIV_EQ <Token> (305) 80
    LBRACE <Token> (306) 56 57 58 59
    RBRACE <Token> (307) 56 57 58 59
    LPAREN <Token> (308) 7 8 24 50 51 52 53 54 55 89 90 102 107 112
    RPAREN <Token> (309) 7 8 24 50 51 52 53 54 55 89 90 102 107 112
    SEMICOLON <Token> (310) 13 15 16 17 18 19 31 32
    COLON <Token> (311) 12 25 26
    AMPERSAND <Token> (312) 63
    OR <Token> (313)
    AMPERSAND_MUT <Token> (314) 64
    DOT <Token> (315) 92
    CONTROL_FLOW (316)
    MOD_EQ (317)
    BIT_AND_EQ (318)
    BIT_OR_EQ (319)
    BIT_XOR_EQ (320)
    SHL_EQ (321)
    SHR_EQ (322)
    MOD (323)
    BIN_OP (324)
    UMINUS (325)
    DEREF (326)
    NOT (327)
    REF (328)
    REF_MUT (329)
    UNARY (330)
    METHOD_CALL (331)
    FIELD_ACCESS (332)
    FUNC_CALL (333)
    CALL_INDEX (334)
    PATH (335)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    program <U<Ast>> (82)
        on left: 1
        on right: 0
    item_list <std::vector<U<Item>>> (83)
        on left: 2 3
        on right: 1 2
    item <U<Item>> (84)
        on left: 4
        on right: 2 3 20
    function_decl <U<FunDecl>> (85)
        on left: 5 6
        on right: 4
    func_decl_args <std::vector<FunArg>> (86)
        on left: 7 8 9
        on right: 5 6
    func_arg_list <std::vector<FunArg>> (87)
        on left: 10 11
        on right: 7 10
    func_arg <FunArg> (88)
        on left: 12
        on right: 10 11
    stmt <U<Stmt>> (89)
        on left: 13 14 15 16 17 18 19 20
        on right: 21 23
    stmt_list <std::vector<U<Stmt>>> (90)
        on left: 21 22 23
        on right: 21 22 56 57
    print_ln <U<PrintLn>> (91)
        on left: 24
        on right: 19
    type_decl <std::optional<Type>> (92)
        on left: 25 26 27
        on right: 31 32
    opt_mut <Mut> (93)
        on left: 28 29
        on right: 12 31 32
    ident <Identifier> (94)
        on left: 30
        on right: 31 32
    let <U<LetStmt>> (95)
        on left: 31 32
        on right: 14
    if_expr <U<IfElse>> (96)
        on left: 33 34 35
        on right: 34 100
    type_list <std::vector<Type>> (97)
        on left: 36 37
        on right: 36 50 52 53
    type <Type> (98)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 5 12 25 36 37 52 54
    block_expr <U<BlockExpr>> (99)
        on left: 56 57 58 59
        on right: 5 6 33 34 35 91 101
    unary_op_expr <U<UnaryOpExpr>> (100)
        on left: 60 61 62 63 64
        on right: 106
    bin_op_expr <U<Expr>> (101)
        on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 103
    literal <U<Literal>> (102)
        on left: 82 83 84 85 86
        on right: 113
    call_expr_args <std::vector<U<Expr>>> (103)
        on left: 87 88
        on right: 87 89
    call_expr <U<CallExpr>> (104)
        on left: 89 90
        on right: 108
    while_expr <U<WhileLoop>> (105)
        on left: 91
        on right: 99
    tuple_index_expr <U<TupleIndexExpr>> (106)
        on left: 92
        on right: 104
    expr <U<Expr>> (107)
        on left: 93 94
        on right: 31 33 34 35 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 87 88 89 90 91 92 95 96 102 109 110
    expr_list <std::vector<U<Expr>>> (108)
        on left: 95 96
        on right: 95 112
    expr_stmt <U<Expr>> (109)
        on left: 97 98
        on right: 18
    expr_w_block <U<Expr>> (110)
        on left: 99 100 101
        on right: 93 97
    expr_wo_block <U<Expr>> (111)
        on left: 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 94 98
    opt_comma (112)
        on left: 114 115
        on right: 112


State 0

    0 $accept: • program $end

    FN  shift, and go to state 1

    program        go to state 2
    item_list      go to state 3
    item           go to state 4
    function_decl  go to state 5


State 1

    5 function_decl: FN • IDENTIFIER func_decl_args ARROW type block_expr
    6              | FN • IDENTIFIER func_decl_args block_expr

    IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    1 program: item_list •
    2 item_list: item_list • item

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    item           go to state 8
    function_decl  go to state 5


State 4

    3 item_list: item •

    $default  reduce using rule 3 (item_list)


State 5

    4 item: function_decl •

    $default  reduce using rule 4 (item)


State 6

    5 function_decl: FN IDENTIFIER • func_decl_args ARROW type block_expr
    6              | FN IDENTIFIER • func_decl_args block_expr

    error   shift, and go to state 9
    LPAREN  shift, and go to state 10

    func_decl_args  go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 9

    9 func_decl_args: error •

    $default  reduce using rule 9 (func_decl_args)


State 10

    7 func_decl_args: LPAREN • func_arg_list RPAREN
    8               | LPAREN • RPAREN

    MUT     shift, and go to state 12
    RPAREN  shift, and go to state 13

    $default  reduce using rule 29 (opt_mut)

    func_arg_list  go to state 14
    func_arg       go to state 15
    opt_mut        go to state 16


State 11

    5 function_decl: FN IDENTIFIER func_decl_args • ARROW type block_expr
    6              | FN IDENTIFIER func_decl_args • block_expr

    ARROW   shift, and go to state 17
    LBRACE  shift, and go to state 18

    block_expr  go to state 19


State 12

   28 opt_mut: MUT •

    $default  reduce using rule 28 (opt_mut)


State 13

    8 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 8 (func_decl_args)


State 14

    7 func_decl_args: LPAREN func_arg_list • RPAREN
   10 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 20
    RPAREN  shift, and go to state 21


State 15

   11 func_arg_list: func_arg •

    $default  reduce using rule 11 (func_arg_list)


State 16

   12 func_arg: opt_mut • IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 22


State 17

    5 function_decl: FN IDENTIFIER func_decl_args ARROW • type block_expr

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 37


State 18

   56 block_expr: LBRACE • stmt_list RBRACE
   57           | LBRACE • stmt_list expr RBRACE
   58           | LBRACE • expr RBRACE
   59           | LBRACE • RBRACE

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    LET            shift, and go to state 44
    FN             shift, and go to state 1
    WHILE          shift, and go to state 45
    PRINT_LN       shift, and go to state 46
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 51
    BREAK          shift, and go to state 52
    CONTINUE       shift, and go to state 53
    LBRACE         shift, and go to state 18
    RBRACE         shift, and go to state 54
    LPAREN         shift, and go to state 55
    SEMICOLON      shift, and go to state 56
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    item              go to state 59
    function_decl     go to state 5
    stmt              go to state 60
    stmt_list         go to state 61
    print_ln          go to state 62
    let               go to state 63
    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 72
    expr_stmt         go to state 73
    expr_w_block      go to state 74
    expr_wo_block     go to state 75


State 19

    6 function_decl: FN IDENTIFIER func_decl_args block_expr •

    $default  reduce using rule 6 (function_decl)


State 20

   10 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 12

    $default  reduce using rule 29 (opt_mut)

    func_arg  go to state 76
    opt_mut   go to state 16


State 21

    7 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 7 (func_decl_args)


State 22

   12 func_arg: opt_mut IDENTIFIER • COLON type

    COLON  shift, and go to state 77


State 23

   49 type: UNDERSCORE •

    $default  reduce using rule 49 (type)


State 24

   38 type: I8 •

    $default  reduce using rule 38 (type)


State 25

   39 type: I16 •

    $default  reduce using rule 39 (type)


State 26

   40 type: I32 •

    $default  reduce using rule 40 (type)


State 27

   41 type: I64 •

    $default  reduce using rule 41 (type)


State 28

   42 type: ISIZE •

    $default  reduce using rule 42 (type)


State 29

   43 type: U8 •

    $default  reduce using rule 43 (type)


State 30

   44 type: U16 •

    $default  reduce using rule 44 (type)


State 31

   45 type: U32 •

    $default  reduce using rule 45 (type)


State 32

   46 type: U64 •

    $default  reduce using rule 46 (type)


State 33

   47 type: USIZE •

    $default  reduce using rule 47 (type)


State 34

   48 type: BOOL •

    $default  reduce using rule 48 (type)


State 35

   52 type: FN • LPAREN type_list RPAREN ARROW type
   53     | FN • LPAREN type_list RPAREN
   54     | FN • LPAREN RPAREN ARROW type
   55     | FN • LPAREN RPAREN

    LPAREN  shift, and go to state 78


State 36

   50 type: LPAREN • type_list RPAREN
   51     | LPAREN • RPAREN

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36
    RPAREN      shift, and go to state 79

    type_list  go to state 80
    type       go to state 81


State 37

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type • block_expr

    LBRACE  shift, and go to state 18

    block_expr  go to state 82


State 38

   82 literal: DEC_LITERAL •

    $default  reduce using rule 82 (literal)


State 39

   84 literal: FLOAT_LITERAL •

    $default  reduce using rule 84 (literal)


State 40

   83 literal: STR_LITERAL •

    $default  reduce using rule 83 (literal)


State 41

   85 literal: TRUE •

    $default  reduce using rule 85 (literal)


State 42

   86 literal: FALSE •

    $default  reduce using rule 86 (literal)


State 43

  105 expr_wo_block: IDENTIFIER •

    $default  reduce using rule 105 (expr_wo_block)


State 44

   31 let: LET • opt_mut ident type_decl EQ expr SEMICOLON
   32    | LET • opt_mut ident type_decl SEMICOLON

    MUT  shift, and go to state 12

    $default  reduce using rule 29 (opt_mut)

    opt_mut  go to state 83


State 45

   91 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 87
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 46

   24 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 90


State 47

   62 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 91
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 48

   60 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 92
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 49

   61 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 93
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 50

   33 if_expr: IF • expr block_expr
   34        | IF • expr block_expr ELSE if_expr
   35        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 94
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 51

   15 stmt: RETURN • SEMICOLON
  109 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    SEMICOLON      shift, and go to state 95
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 96
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 52

   16 stmt: BREAK • SEMICOLON
  110 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    SEMICOLON      shift, and go to state 97
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 98
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 53

   17 stmt: CONTINUE • SEMICOLON
  111 expr_wo_block: CONTINUE •

    SEMICOLON  shift, and go to state 99

    SEMICOLON  [reduce using rule 111 (expr_wo_block)]
    $default   reduce using rule 111 (expr_wo_block)


State 54

   59 block_expr: LBRACE RBRACE •

    $default  reduce using rule 59 (block_expr)


State 55

  102 expr_wo_block: LPAREN • expr RPAREN
  107              | LPAREN • RPAREN
  112              | LPAREN • expr_list opt_comma RPAREN

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    RPAREN         shift, and go to state 100
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 101
    expr_list         go to state 102
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 56

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 57

   63 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 103
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 58

   64 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 104
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 59

   20 stmt: item •

    $default  reduce using rule 20 (stmt)


State 60

   23 stmt_list: stmt •

    $default  reduce using rule 23 (stmt_list)


State 61

   21 stmt_list: stmt_list • stmt
   22          | stmt_list • error
   56 block_expr: LBRACE stmt_list • RBRACE
   57           | LBRACE stmt_list • expr RBRACE

    error          shift, and go to state 105
    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    LET            shift, and go to state 44
    FN             shift, and go to state 1
    WHILE          shift, and go to state 45
    PRINT_LN       shift, and go to state 46
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 51
    BREAK          shift, and go to state 52
    CONTINUE       shift, and go to state 53
    LBRACE         shift, and go to state 18
    RBRACE         shift, and go to state 106
    LPAREN         shift, and go to state 55
    SEMICOLON      shift, and go to state 56
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    item              go to state 59
    function_decl     go to state 5
    stmt              go to state 107
    print_ln          go to state 62
    let               go to state 63
    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 108
    expr_stmt         go to state 73
    expr_w_block      go to state 74
    expr_wo_block     go to state 75


State 62

   19 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 63

   14 stmt: let •

    $default  reduce using rule 14 (stmt)


State 64

  100 expr_w_block: if_expr •

    $default  reduce using rule 100 (expr_w_block)


State 65

  101 expr_w_block: block_expr •

    $default  reduce using rule 101 (expr_w_block)


State 66

  106 expr_wo_block: unary_op_expr •

    $default  reduce using rule 106 (expr_wo_block)


State 67

  103 expr_wo_block: bin_op_expr •

    $default  reduce using rule 103 (expr_wo_block)


State 68

  113 expr_wo_block: literal •

    $default  reduce using rule 113 (expr_wo_block)


State 69

  108 expr_wo_block: call_expr •

    $default  reduce using rule 108 (expr_wo_block)


State 70

   99 expr_w_block: while_expr •

    $default  reduce using rule 99 (expr_w_block)


State 71

  104 expr_wo_block: tuple_index_expr •

    $default  reduce using rule 104 (expr_wo_block)


State 72

   58 block_expr: LBRACE expr • RBRACE
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    RBRACE   shift, and go to state 127
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129


State 73

   18 stmt: expr_stmt • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 74

   93 expr: expr_w_block •
   97 expr_stmt: expr_w_block •

    SEMICOLON  reduce using rule 97 (expr_stmt)
    $default   reduce using rule 93 (expr)


State 75

   94 expr: expr_wo_block •
   98 expr_stmt: expr_wo_block •

    SEMICOLON  reduce using rule 98 (expr_stmt)
    $default   reduce using rule 94 (expr)


State 76

   10 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 10 (func_arg_list)


State 77

   12 func_arg: opt_mut IDENTIFIER COLON • type

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 131


State 78

   52 type: FN LPAREN • type_list RPAREN ARROW type
   53     | FN LPAREN • type_list RPAREN
   54     | FN LPAREN • RPAREN ARROW type
   55     | FN LPAREN • RPAREN

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36
    RPAREN      shift, and go to state 132

    type_list  go to state 133
    type       go to state 81


State 79

   51 type: LPAREN RPAREN •

    $default  reduce using rule 51 (type)


State 80

   36 type_list: type_list • COMMA type
   50 type: LPAREN type_list • RPAREN

    COMMA   shift, and go to state 134
    RPAREN  shift, and go to state 135


State 81

   37 type_list: type •

    $default  reduce using rule 37 (type_list)


State 82

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type block_expr •

    $default  reduce using rule 5 (function_decl)


State 83

   31 let: LET opt_mut • ident type_decl EQ expr SEMICOLON
   32    | LET opt_mut • ident type_decl SEMICOLON

    IDENTIFIER  shift, and go to state 136

    ident  go to state 137


State 84

  109 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 96
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 85

  110 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 98
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 86

  111 expr_wo_block: CONTINUE •

    $default  reduce using rule 111 (expr_wo_block)


State 87

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   91 while_expr: WHILE expr • block_expr
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LBRACE   shift, and go to state 18
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    block_expr  go to state 138


State 88

   93 expr: expr_w_block •

    $default  reduce using rule 93 (expr)


State 89

   94 expr: expr_wo_block •

    $default  reduce using rule 94 (expr)


State 90

   24 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 139


State 91

   62 unary_op_expr: BANG expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 62 (unary_op_expr)]
    DOT       [reduce using rule 62 (unary_op_expr)]
    $default  reduce using rule 62 (unary_op_expr)


State 92

   60 unary_op_expr: MINUS expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 60 (unary_op_expr)]
    DOT       [reduce using rule 60 (unary_op_expr)]
    $default  reduce using rule 60 (unary_op_expr)


State 93

   61 unary_op_expr: STAR expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 61 (unary_op_expr)]
    DOT       [reduce using rule 61 (unary_op_expr)]
    $default  reduce using rule 61 (unary_op_expr)


State 94

   33 if_expr: IF expr • block_expr
   34        | IF expr • block_expr ELSE if_expr
   35        | IF expr • block_expr ELSE block_expr
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LBRACE   shift, and go to state 18
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    block_expr  go to state 140


State 95

   15 stmt: RETURN SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 96

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL
  109 expr_wo_block: RETURN expr •

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 109 (expr_wo_block)]
    DOT       [reduce using rule 109 (expr_wo_block)]
    $default  reduce using rule 109 (expr_wo_block)


State 97

   16 stmt: BREAK SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 98

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL
  110 expr_wo_block: BREAK expr •

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 110 (expr_wo_block)]
    DOT       [reduce using rule 110 (expr_wo_block)]
    $default  reduce using rule 110 (expr_wo_block)


State 99

   17 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 100

  107 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 107 (expr_wo_block)


State 101

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL
   96 expr_list: expr •
  102 expr_wo_block: LPAREN expr • RPAREN

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    RPAREN   shift, and go to state 141
    DOT      shift, and go to state 129

    RPAREN    [reduce using rule 96 (expr_list)]
    $default  reduce using rule 96 (expr_list)


State 102

   95 expr_list: expr_list • COMMA expr
  112 expr_wo_block: LPAREN expr_list • opt_comma RPAREN

    COMMA  shift, and go to state 142

    $default  reduce using rule 115 (opt_comma)

    opt_comma  go to state 143


State 103

   63 unary_op_expr: AMPERSAND expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 63 (unary_op_expr)]
    DOT       [reduce using rule 63 (unary_op_expr)]
    $default  reduce using rule 63 (unary_op_expr)


State 104

   64 unary_op_expr: AMPERSAND_MUT expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 64 (unary_op_expr)]
    DOT       [reduce using rule 64 (unary_op_expr)]
    $default  reduce using rule 64 (unary_op_expr)


State 105

   22 stmt_list: stmt_list error •

    $default  reduce using rule 22 (stmt_list)


State 106

   56 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 56 (block_expr)


State 107

   21 stmt_list: stmt_list stmt •

    $default  reduce using rule 21 (stmt_list)


State 108

   57 block_expr: LBRACE stmt_list expr • RBRACE
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    RBRACE   shift, and go to state 144
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129


State 109

   19 stmt: print_ln SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 110

   77 bin_op_expr: expr EQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 145
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 111

   71 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 146
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 112

   72 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 147
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 113

   73 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 148
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 114

   76 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 149
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 115

   74 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 150
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 116

   75 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 151
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 117

   65 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 152
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 118

   66 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 153
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 119

   67 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 154
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 120

   68 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 155
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 121

   69 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 156
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 122

   70 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 157
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 123

   78 bin_op_expr: expr PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 158
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 124

   79 bin_op_expr: expr MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 159
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 125

   81 bin_op_expr: expr MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 160
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 126

   80 bin_op_expr: expr DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 161
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 127

   58 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 58 (block_expr)


State 128

   89 call_expr: expr LPAREN • call_expr_args RPAREN
   90          | expr LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    RPAREN         shift, and go to state 162
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr_args    go to state 163
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 164
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 129

   92 tuple_index_expr: expr DOT • DEC_LITERAL

    DEC_LITERAL  shift, and go to state 165


State 130

   18 stmt: expr_stmt SEMICOLON •

    $default  reduce using rule 18 (stmt)


State 131

   12 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 12 (func_arg)


State 132

   54 type: FN LPAREN RPAREN • ARROW type
   55     | FN LPAREN RPAREN •

    ARROW  shift, and go to state 166

    $default  reduce using rule 55 (type)


State 133

   36 type_list: type_list • COMMA type
   52 type: FN LPAREN type_list • RPAREN ARROW type
   53     | FN LPAREN type_list • RPAREN

    COMMA   shift, and go to state 134
    RPAREN  shift, and go to state 167


State 134

   36 type_list: type_list COMMA • type

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 168


State 135

   50 type: LPAREN type_list RPAREN •

    $default  reduce using rule 50 (type)


State 136

   30 ident: IDENTIFIER •

    $default  reduce using rule 30 (ident)


State 137

   31 let: LET opt_mut ident • type_decl EQ expr SEMICOLON
   32    | LET opt_mut ident • type_decl SEMICOLON

    COLON  shift, and go to state 169

    $default  reduce using rule 27 (type_decl)

    type_decl  go to state 170


State 138

   91 while_expr: WHILE expr block_expr •

    $default  reduce using rule 91 (while_expr)


State 139

   24 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 171


State 140

   33 if_expr: IF expr block_expr •
   34        | IF expr block_expr • ELSE if_expr
   35        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 172

    $default  reduce using rule 33 (if_expr)


State 141

  102 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 102 (expr_wo_block)


State 142

   95 expr_list: expr_list COMMA • expr
  114 opt_comma: COMMA •

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    $default  reduce using rule 114 (opt_comma)

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 173
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 143

  112 expr_wo_block: LPAREN expr_list opt_comma • RPAREN

    RPAREN  shift, and go to state 174


State 144

   57 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 57 (block_expr)


State 145

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   77            | expr EQ expr •
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 77 (bin_op_expr)]
    DOT       [reduce using rule 77 (bin_op_expr)]
    $default  reduce using rule 77 (bin_op_expr)


State 146

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   71            | expr EQEQ expr •
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 71 (bin_op_expr)]
    DOT       [reduce using rule 71 (bin_op_expr)]
    $default  reduce using rule 71 (bin_op_expr)


State 147

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   72            | expr NE expr •
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 72 (bin_op_expr)]
    DOT       [reduce using rule 72 (bin_op_expr)]
    $default  reduce using rule 72 (bin_op_expr)


State 148

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   73            | expr LT expr •
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 73 (bin_op_expr)]
    DOT       [reduce using rule 73 (bin_op_expr)]
    $default  reduce using rule 73 (bin_op_expr)


State 149

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   76            | expr LE expr •
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 76 (bin_op_expr)]
    DOT       [reduce using rule 76 (bin_op_expr)]
    $default  reduce using rule 76 (bin_op_expr)


State 150

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   74            | expr GT expr •
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 74 (bin_op_expr)]
    DOT       [reduce using rule 74 (bin_op_expr)]
    $default  reduce using rule 74 (bin_op_expr)


State 151

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   75            | expr GE expr •
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 75 (bin_op_expr)]
    DOT       [reduce using rule 75 (bin_op_expr)]
    $default  reduce using rule 75 (bin_op_expr)


State 152

   65 bin_op_expr: expr • PLUS expr
   65            | expr PLUS expr •
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 65 (bin_op_expr)]
    DOT       [reduce using rule 65 (bin_op_expr)]
    $default  reduce using rule 65 (bin_op_expr)


State 153

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   66            | expr MINUS expr •
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 66 (bin_op_expr)]
    DOT       [reduce using rule 66 (bin_op_expr)]
    $default  reduce using rule 66 (bin_op_expr)


State 154

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   67            | expr STAR expr •
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 67 (bin_op_expr)]
    DOT       [reduce using rule 67 (bin_op_expr)]
    $default  reduce using rule 67 (bin_op_expr)


State 155

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   68            | expr SLASH expr •
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 68 (bin_op_expr)]
    DOT       [reduce using rule 68 (bin_op_expr)]
    $default  reduce using rule 68 (bin_op_expr)


State 156

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   69            | expr L_AND expr •
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ    shift, and go to state 111
    NE      shift, and go to state 112
    LT      shift, and go to state 113
    LE      shift, and go to state 114
    GT      shift, and go to state 115
    GE      shift, and go to state 116
    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 69 (bin_op_expr)]
    DOT       [reduce using rule 69 (bin_op_expr)]
    $default  reduce using rule 69 (bin_op_expr)


State 157

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   70            | expr L_OR expr •
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ    shift, and go to state 111
    NE      shift, and go to state 112
    LT      shift, and go to state 113
    LE      shift, and go to state 114
    GT      shift, and go to state 115
    GE      shift, and go to state 116
    PLUS    shift, and go to state 117
    MINUS   shift, and go to state 118
    STAR    shift, and go to state 119
    SLASH   shift, and go to state 120
    L_AND   shift, and go to state 121
    LPAREN  shift, and go to state 128
    DOT     shift, and go to state 129

    LPAREN    [reduce using rule 70 (bin_op_expr)]
    DOT       [reduce using rule 70 (bin_op_expr)]
    $default  reduce using rule 70 (bin_op_expr)


State 158

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   78            | expr PLUS_EQ expr •
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 78 (bin_op_expr)]
    DOT       [reduce using rule 78 (bin_op_expr)]
    $default  reduce using rule 78 (bin_op_expr)


State 159

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   79            | expr MIN_EQ expr •
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 79 (bin_op_expr)]
    DOT       [reduce using rule 79 (bin_op_expr)]
    $default  reduce using rule 79 (bin_op_expr)


State 160

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   81            | expr MUL_EQ expr •
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 81 (bin_op_expr)]
    DOT       [reduce using rule 81 (bin_op_expr)]
    $default  reduce using rule 81 (bin_op_expr)


State 161

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   80            | expr DIV_EQ expr •
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    LPAREN    [reduce using rule 80 (bin_op_expr)]
    DOT       [reduce using rule 80 (bin_op_expr)]
    $default  reduce using rule 80 (bin_op_expr)


State 162

   90 call_expr: expr LPAREN RPAREN •

    $default  reduce using rule 90 (call_expr)


State 163

   87 call_expr_args: call_expr_args • COMMA expr
   89 call_expr: expr LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 175
    RPAREN  shift, and go to state 176


State 164

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   88 call_expr_args: expr •
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    $default  reduce using rule 88 (call_expr_args)


State 165

   92 tuple_index_expr: expr DOT DEC_LITERAL •

    $default  reduce using rule 92 (tuple_index_expr)


State 166

   54 type: FN LPAREN RPAREN ARROW • type

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 177


State 167

   52 type: FN LPAREN type_list RPAREN • ARROW type
   53     | FN LPAREN type_list RPAREN •

    ARROW  shift, and go to state 178

    $default  reduce using rule 53 (type)


State 168

   36 type_list: type_list COMMA type •

    $default  reduce using rule 36 (type_list)


State 169

   25 type_decl: COLON • type
   26          | COLON • error

    error       shift, and go to state 179
    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 180


State 170

   31 let: LET opt_mut ident type_decl • EQ expr SEMICOLON
   32    | LET opt_mut ident type_decl • SEMICOLON

    EQ         shift, and go to state 181
    SEMICOLON  shift, and go to state 182


State 171

   24 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 24 (print_ln)


State 172

   34 if_expr: IF expr block_expr ELSE • if_expr
   35        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 50
    LBRACE  shift, and go to state 18

    if_expr     go to state 183
    block_expr  go to state 184


State 173

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL
   95 expr_list: expr_list COMMA expr •

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    $default  reduce using rule 95 (expr_list)


State 174

  112 expr_wo_block: LPAREN expr_list opt_comma RPAREN •

    $default  reduce using rule 112 (expr_wo_block)


State 175

   87 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 185
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 176

   89 call_expr: expr LPAREN call_expr_args RPAREN •

    $default  reduce using rule 89 (call_expr)


State 177

   54 type: FN LPAREN RPAREN ARROW type •

    $default  reduce using rule 54 (type)


State 178

   52 type: FN LPAREN type_list RPAREN ARROW • type

    UNDERSCORE  shift, and go to state 23
    I8          shift, and go to state 24
    I16         shift, and go to state 25
    I32         shift, and go to state 26
    I64         shift, and go to state 27
    ISIZE       shift, and go to state 28
    U8          shift, and go to state 29
    U16         shift, and go to state 30
    U32         shift, and go to state 31
    U64         shift, and go to state 32
    USIZE       shift, and go to state 33
    BOOL        shift, and go to state 34
    FN          shift, and go to state 35
    LPAREN      shift, and go to state 36

    type  go to state 186


State 179

   26 type_decl: COLON error •

    $default  reduce using rule 26 (type_decl)


State 180

   25 type_decl: COLON type •

    $default  reduce using rule 25 (type_decl)


State 181

   31 let: LET opt_mut ident type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    STR_LITERAL    shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    WHILE          shift, and go to state 45
    BANG           shift, and go to state 47
    MINUS          shift, and go to state 48
    STAR           shift, and go to state 49
    IF             shift, and go to state 50
    RETURN         shift, and go to state 84
    BREAK          shift, and go to state 85
    CONTINUE       shift, and go to state 86
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 55
    AMPERSAND      shift, and go to state 57
    AMPERSAND_MUT  shift, and go to state 58

    if_expr           go to state 64
    block_expr        go to state 65
    unary_op_expr     go to state 66
    bin_op_expr       go to state 67
    literal           go to state 68
    call_expr         go to state 69
    while_expr        go to state 70
    tuple_index_expr  go to state 71
    expr              go to state 187
    expr_w_block      go to state 88
    expr_wo_block     go to state 89


State 182

   32 let: LET opt_mut ident type_decl SEMICOLON •

    $default  reduce using rule 32 (let)


State 183

   34 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 34 (if_expr)


State 184

   35 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 35 (if_expr)


State 185

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   87 call_expr_args: call_expr_args COMMA expr •
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 110
    EQEQ     shift, and go to state 111
    NE       shift, and go to state 112
    LT       shift, and go to state 113
    LE       shift, and go to state 114
    GT       shift, and go to state 115
    GE       shift, and go to state 116
    PLUS     shift, and go to state 117
    MINUS    shift, and go to state 118
    STAR     shift, and go to state 119
    SLASH    shift, and go to state 120
    L_AND    shift, and go to state 121
    L_OR     shift, and go to state 122
    PLUS_EQ  shift, and go to state 123
    MIN_EQ   shift, and go to state 124
    MUL_EQ   shift, and go to state 125
    DIV_EQ   shift, and go to state 126
    LPAREN   shift, and go to state 128
    DOT      shift, and go to state 129

    $default  reduce using rule 87 (call_expr_args)


State 186

   52 type: FN LPAREN type_list RPAREN ARROW type •

    $default  reduce using rule 52 (type)


State 187

   31 let: LET opt_mut ident type_decl EQ expr • SEMICOLON
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   77            | expr • EQ expr
   78            | expr • PLUS_EQ expr
   79            | expr • MIN_EQ expr
   80            | expr • DIV_EQ expr
   81            | expr • MUL_EQ expr
   89 call_expr: expr • LPAREN call_expr_args RPAREN
   90          | expr • LPAREN RPAREN
   92 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ         shift, and go to state 110
    EQEQ       shift, and go to state 111
    NE         shift, and go to state 112
    LT         shift, and go to state 113
    LE         shift, and go to state 114
    GT         shift, and go to state 115
    GE         shift, and go to state 116
    PLUS       shift, and go to state 117
    MINUS      shift, and go to state 118
    STAR       shift, and go to state 119
    SLASH      shift, and go to state 120
    L_AND      shift, and go to state 121
    L_OR       shift, and go to state 122
    PLUS_EQ    shift, and go to state 123
    MIN_EQ     shift, and go to state 124
    MUL_EQ     shift, and go to state 125
    DIV_EQ     shift, and go to state 126
    LPAREN     shift, and go to state 128
    SEMICOLON  shift, and go to state 188
    DOT        shift, and go to state 129


State 188

   31 let: LET opt_mut ident type_decl EQ expr SEMICOLON •

    $default  reduce using rule 31 (let)
