Nonterminals useless in grammar

    func_ret_type


Terminals unused in grammar

    UNDERSCORE
    OR
    MOD_EQ
    BIT_AND_EQ
    BIT_OR_EQ
    BIT_XOR_EQ
    SHL_EQ
    SHR_EQ
    MOD
    METHOD_CALL
    FUNC_CALL


State 51 conflicts: 1 shift/reduce
State 72 conflicts: 3 reduce/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item

    4 item: function_decl

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type block_expr
    6              | FN IDENTIFIER func_decl_args block_expr

    7 func_decl_args: LPAREN func_arg_list RPAREN
    8               | LPAREN RPAREN
    9               | error

   10 func_arg_list: func_arg_list COMMA func_arg
   11              | func_arg

   12 func_arg: opt_mut IDENTIFIER COLON type

   13 stmt: SEMICOLON
   14     | let
   15     | RETURN SEMICOLON
   16     | BREAK SEMICOLON
   17     | CONTINUE SEMICOLON
   18     | expr_stmt
   19     | print_ln SEMICOLON
   20     | item

   21 stmt_list: stmt_list stmt
   22          | stmt_list error
   23          | stmt

   24 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   25 type_decl: COLON type
   26          | COLON error
   27          | ε

   28 opt_mut: MUT
   29        | ε

   30 ident: IDENTIFIER

   31 let: LET opt_mut ident type_decl EQ expr SEMICOLON
   32    | LET opt_mut ident type_decl SEMICOLON

   33 if_expr: IF expr block_expr
   34        | IF expr block_expr ELSE if_expr
   35        | IF expr block_expr ELSE block_expr

   36 type_list: type_list COMMA type
   37          | type

   38 type: I8
   39     | I16
   40     | I32
   41     | I64
   42     | ISIZE
   43     | U8
   44     | U16
   45     | U32
   46     | U64
   47     | USIZE
   48     | BOOL
   49     | LPAREN type_list RPAREN
   50     | LPAREN RPAREN

   51 block_expr: LBRACE stmt_list RBRACE
   52           | LBRACE stmt_list expr RBRACE
   53           | LBRACE expr RBRACE
   54           | LBRACE RBRACE

   55 unary_op_expr: MINUS expr
   56              | STAR expr
   57              | BANG expr
   58              | AMPERSAND expr
   59              | AMPERSAND_MUT expr

   60 bin_op_expr: expr PLUS expr
   61            | expr MINUS expr
   62            | expr STAR expr
   63            | expr SLASH expr
   64            | expr L_AND expr
   65            | expr L_OR expr
   66            | expr EQEQ expr
   67            | expr NE expr
   68            | expr LT expr
   69            | expr GT expr
   70            | expr GE expr
   71            | expr LE expr
   72            | expr EQ expr
   73            | expr PLUS_EQ expr
   74            | expr MIN_EQ expr
   75            | expr DIV_EQ expr
   76            | expr MUL_EQ expr

   77 literal: DEC_LITERAL
   78        | STR_LITERAL
   79        | FLOAT_LITERAL
   80        | TRUE
   81        | FALSE

   82 call_expr_args: call_expr_args COMMA expr
   83               | expr

   84 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN
   85          | IDENTIFIER LPAREN RPAREN

   86 while_expr: WHILE expr block_expr

   87 tuple_index_expr: expr DOT DEC_LITERAL

   88 expr: expr_w_block
   89     | expr_wo_block

   90 expr_list: expr_list COMMA expr
   91          | expr

   92 expr_stmt: expr_w_block
   93          | expr_wo_block SEMICOLON

   94 expr_w_block: while_expr
   95             | if_expr
   96             | block_expr

   97 expr_wo_block: LPAREN expr RPAREN
   98              | bin_op_expr
   99              | tuple_index_expr
  100              | IDENTIFIER
  101              | unary_op_expr
  102              | LPAREN RPAREN
  103              | call_expr
  104              | RETURN expr
  105              | BREAK expr
  106              | CONTINUE
  107              | LPAREN expr_list opt_comma RPAREN
  108              | literal

  109 opt_comma: COMMA
  110          | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 9 22 26
    DEC_LITERAL <Token> (258) 77 87
    FLOAT_LITERAL <Token> (259) 79
    STR_LITERAL <Token> (260) 24 78
    TRUE <Token> (261) 80
    FALSE <Token> (262) 81
    IDENTIFIER <Token> (263) 5 6 12 30 84 85 100
    UNDERSCORE <Token> (264)
    I8 <Token> (265) 38
    I16 <Token> (266) 39
    I32 <Token> (267) 40
    I64 <Token> (268) 41
    ISIZE <Token> (269) 42
    U8 <Token> (270) 43
    U16 <Token> (271) 44
    U32 <Token> (272) 45
    U64 <Token> (273) 46
    USIZE <Token> (274) 47
    LET <Token> (275) 31 32
    MUT <Token> (276) 28
    BOOL <Token> (277) 48
    FN <Token> (278) 5 6
    WHILE <Token> (279) 86
    PRINT_LN <Token> (280) 24
    EQ <Token> (281) 31 72
    EQEQ <Token> (282) 66
    NE <Token> (283) 67
    BANG <Token> (284) 57
    LT <Token> (285) 68
    LE <Token> (286) 71
    GT <Token> (287) 69
    GE <Token> (288) 70
    PLUS <Token> (289) 60
    MINUS <Token> (290) 55 61
    STAR <Token> (291) 56 62
    SLASH <Token> (292) 63
    COMMA <Token> (293) 10 36 82 90 109
    ARROW <Token> (294) 5
    IF <Token> (295) 33 34 35
    ELSE <Token> (296) 34 35
    RETURN <Token> (297) 15 104
    BREAK <Token> (298) 16 105
    CONTINUE <Token> (299) 17 106
    L_AND <Token> (300) 64
    L_OR <Token> (301) 65
    PLUS_EQ <Token> (302) 73
    MIN_EQ <Token> (303) 74
    MUL_EQ <Token> (304) 76
    DIV_EQ <Token> (305) 75
    LBRACE <Token> (306) 51 52 53 54
    RBRACE <Token> (307) 51 52 53 54
    LPAREN <Token> (308) 7 8 24 49 50 84 85 97 102 107
    RPAREN <Token> (309) 7 8 24 49 50 84 85 97 102 107
    SEMICOLON <Token> (310) 13 15 16 17 19 31 32 93
    COLON <Token> (311) 12 25 26
    AMPERSAND <Token> (312) 58
    OR <Token> (313)
    AMPERSAND_MUT <Token> (314) 59
    DOT <Token> (315) 87
    MOD_EQ (316)
    BIT_AND_EQ (317)
    BIT_OR_EQ (318)
    BIT_XOR_EQ (319)
    SHL_EQ (320)
    SHR_EQ (321)
    MOD (322)
    UMINUS (323)
    DEREF (324)
    NOT (325)
    REF (326)
    REF_MUT (327)
    METHOD_CALL (328)
    FIELD_ACCESS (329)
    FUNC_CALL (330)
    PATH (331)
    CALL_INDEX (332)
    UNARY (333)
    BIN_OP (334)
    CONTROL_FLOW (335)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    program <U<Ast>> (82)
        on left: 1
        on right: 0
    item_list <std::vector<U<Item>>> (83)
        on left: 2 3
        on right: 1 2
    item <U<Item>> (84)
        on left: 4
        on right: 2 3 20
    function_decl <U<FunDecl>> (85)
        on left: 5 6
        on right: 4
    func_decl_args <std::vector<FunArg>> (86)
        on left: 7 8 9
        on right: 5 6
    func_arg_list <std::vector<FunArg>> (87)
        on left: 10 11
        on right: 7 10
    func_arg <FunArg> (88)
        on left: 12
        on right: 10 11
    stmt <U<Stmt>> (89)
        on left: 13 14 15 16 17 18 19 20
        on right: 21 23
    stmt_list <std::vector<U<Stmt>>> (90)
        on left: 21 22 23
        on right: 21 22 51 52
    print_ln <U<PrintLn>> (91)
        on left: 24
        on right: 19
    type_decl <std::optional<Type>> (92)
        on left: 25 26 27
        on right: 31 32
    opt_mut <Mut> (93)
        on left: 28 29
        on right: 12 31 32
    ident <Identifier> (94)
        on left: 30
        on right: 31 32
    let <U<LetStmt>> (95)
        on left: 31 32
        on right: 14
    if_expr <U<IfElse>> (96)
        on left: 33 34 35
        on right: 34 95
    type_list <std::vector<Type>> (97)
        on left: 36 37
        on right: 36 49
    type <Type> (98)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 5 12 25 36 37
    block_expr <U<BlockExpr>> (99)
        on left: 51 52 53 54
        on right: 5 6 33 34 35 86 96
    unary_op_expr <U<UnaryOpExpr>> (100)
        on left: 55 56 57 58 59
        on right: 101
    bin_op_expr <U<Expr>> (101)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 98
    literal <U<Literal>> (102)
        on left: 77 78 79 80 81
        on right: 108
    call_expr_args <std::vector<U<Expr>>> (103)
        on left: 82 83
        on right: 82 84
    call_expr <U<CallExpr>> (104)
        on left: 84 85
        on right: 103
    while_expr <U<WhileLoop>> (105)
        on left: 86
        on right: 94
    tuple_index_expr <U<TupleIndexExpr>> (106)
        on left: 87
        on right: 99
    expr <U<Expr>> (107)
        on left: 88 89
        on right: 31 33 34 35 52 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 82 83 86 87 90 91 97 104 105
    expr_list <std::vector<U<Expr>>> (108)
        on left: 90 91
        on right: 90 107
    expr_stmt <U<Expr>> (109)
        on left: 92 93
        on right: 18
    expr_w_block <U<Expr>> (110)
        on left: 94 95 96
        on right: 88 92
    expr_wo_block <U<Expr>> (111)
        on left: 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 89 93
    opt_comma (112)
        on left: 109 110
        on right: 107


State 0

    0 $accept: • program $end

    FN  shift, and go to state 1

    program        go to state 2
    item_list      go to state 3
    item           go to state 4
    function_decl  go to state 5


State 1

    5 function_decl: FN • IDENTIFIER func_decl_args ARROW type block_expr
    6              | FN • IDENTIFIER func_decl_args block_expr

    IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    1 program: item_list •
    2 item_list: item_list • item

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    item           go to state 8
    function_decl  go to state 5


State 4

    3 item_list: item •

    $default  reduce using rule 3 (item_list)


State 5

    4 item: function_decl •

    $default  reduce using rule 4 (item)


State 6

    5 function_decl: FN IDENTIFIER • func_decl_args ARROW type block_expr
    6              | FN IDENTIFIER • func_decl_args block_expr

    error   shift, and go to state 9
    LPAREN  shift, and go to state 10

    func_decl_args  go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 9

    9 func_decl_args: error •

    $default  reduce using rule 9 (func_decl_args)


State 10

    7 func_decl_args: LPAREN • func_arg_list RPAREN
    8               | LPAREN • RPAREN

    MUT     shift, and go to state 12
    RPAREN  shift, and go to state 13

    $default  reduce using rule 29 (opt_mut)

    func_arg_list  go to state 14
    func_arg       go to state 15
    opt_mut        go to state 16


State 11

    5 function_decl: FN IDENTIFIER func_decl_args • ARROW type block_expr
    6              | FN IDENTIFIER func_decl_args • block_expr

    ARROW   shift, and go to state 17
    LBRACE  shift, and go to state 18

    block_expr  go to state 19


State 12

   28 opt_mut: MUT •

    $default  reduce using rule 28 (opt_mut)


State 13

    8 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 8 (func_decl_args)


State 14

    7 func_decl_args: LPAREN func_arg_list • RPAREN
   10 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 20
    RPAREN  shift, and go to state 21


State 15

   11 func_arg_list: func_arg •

    $default  reduce using rule 11 (func_arg_list)


State 16

   12 func_arg: opt_mut • IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 22


State 17

    5 function_decl: FN IDENTIFIER func_decl_args ARROW • type block_expr

    I8      shift, and go to state 23
    I16     shift, and go to state 24
    I32     shift, and go to state 25
    I64     shift, and go to state 26
    ISIZE   shift, and go to state 27
    U8      shift, and go to state 28
    U16     shift, and go to state 29
    U32     shift, and go to state 30
    U64     shift, and go to state 31
    USIZE   shift, and go to state 32
    BOOL    shift, and go to state 33
    LPAREN  shift, and go to state 34

    type  go to state 35


State 18

   51 block_expr: LBRACE • stmt_list RBRACE
   52           | LBRACE • stmt_list expr RBRACE
   53           | LBRACE • expr RBRACE
   54           | LBRACE • RBRACE

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    LET            shift, and go to state 42
    FN             shift, and go to state 1
    WHILE          shift, and go to state 43
    PRINT_LN       shift, and go to state 44
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    LBRACE         shift, and go to state 18
    RBRACE         shift, and go to state 52
    LPAREN         shift, and go to state 53
    SEMICOLON      shift, and go to state 54
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    item              go to state 57
    function_decl     go to state 5
    stmt              go to state 58
    stmt_list         go to state 59
    print_ln          go to state 60
    let               go to state 61
    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 70
    expr_stmt         go to state 71
    expr_w_block      go to state 72
    expr_wo_block     go to state 73


State 19

    6 function_decl: FN IDENTIFIER func_decl_args block_expr •

    $default  reduce using rule 6 (function_decl)


State 20

   10 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 12

    $default  reduce using rule 29 (opt_mut)

    func_arg  go to state 74
    opt_mut   go to state 16


State 21

    7 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 7 (func_decl_args)


State 22

   12 func_arg: opt_mut IDENTIFIER • COLON type

    COLON  shift, and go to state 75


State 23

   38 type: I8 •

    $default  reduce using rule 38 (type)


State 24

   39 type: I16 •

    $default  reduce using rule 39 (type)


State 25

   40 type: I32 •

    $default  reduce using rule 40 (type)


State 26

   41 type: I64 •

    $default  reduce using rule 41 (type)


State 27

   42 type: ISIZE •

    $default  reduce using rule 42 (type)


State 28

   43 type: U8 •

    $default  reduce using rule 43 (type)


State 29

   44 type: U16 •

    $default  reduce using rule 44 (type)


State 30

   45 type: U32 •

    $default  reduce using rule 45 (type)


State 31

   46 type: U64 •

    $default  reduce using rule 46 (type)


State 32

   47 type: USIZE •

    $default  reduce using rule 47 (type)


State 33

   48 type: BOOL •

    $default  reduce using rule 48 (type)


State 34

   49 type: LPAREN • type_list RPAREN
   50     | LPAREN • RPAREN

    I8      shift, and go to state 23
    I16     shift, and go to state 24
    I32     shift, and go to state 25
    I64     shift, and go to state 26
    ISIZE   shift, and go to state 27
    U8      shift, and go to state 28
    U16     shift, and go to state 29
    U32     shift, and go to state 30
    U64     shift, and go to state 31
    USIZE   shift, and go to state 32
    BOOL    shift, and go to state 33
    LPAREN  shift, and go to state 34
    RPAREN  shift, and go to state 76

    type_list  go to state 77
    type       go to state 78


State 35

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type • block_expr

    LBRACE  shift, and go to state 18

    block_expr  go to state 79


State 36

   77 literal: DEC_LITERAL •

    $default  reduce using rule 77 (literal)


State 37

   79 literal: FLOAT_LITERAL •

    $default  reduce using rule 79 (literal)


State 38

   78 literal: STR_LITERAL •

    $default  reduce using rule 78 (literal)


State 39

   80 literal: TRUE •

    $default  reduce using rule 80 (literal)


State 40

   81 literal: FALSE •

    $default  reduce using rule 81 (literal)


State 41

   84 call_expr: IDENTIFIER • LPAREN call_expr_args RPAREN
   85          | IDENTIFIER • LPAREN RPAREN
  100 expr_wo_block: IDENTIFIER •

    LPAREN  shift, and go to state 80

    $default  reduce using rule 100 (expr_wo_block)


State 42

   31 let: LET • opt_mut ident type_decl EQ expr SEMICOLON
   32    | LET • opt_mut ident type_decl SEMICOLON

    MUT  shift, and go to state 12

    $default  reduce using rule 29 (opt_mut)

    opt_mut  go to state 81


State 43

   86 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 85
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 44

   24 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 88


State 45

   57 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 89
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 46

   55 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 90
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 47

   56 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 91
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 48

   33 if_expr: IF • expr block_expr
   34        | IF • expr block_expr ELSE if_expr
   35        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 92
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 49

   15 stmt: RETURN • SEMICOLON
  104 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    SEMICOLON      shift, and go to state 93
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 94
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 50

   16 stmt: BREAK • SEMICOLON
  105 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    SEMICOLON      shift, and go to state 95
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 96
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 51

   17 stmt: CONTINUE • SEMICOLON
  106 expr_wo_block: CONTINUE •

    SEMICOLON  shift, and go to state 97

    SEMICOLON  [reduce using rule 106 (expr_wo_block)]
    $default   reduce using rule 106 (expr_wo_block)


State 52

   54 block_expr: LBRACE RBRACE •

    $default  reduce using rule 54 (block_expr)


State 53

   97 expr_wo_block: LPAREN • expr RPAREN
  102              | LPAREN • RPAREN
  107              | LPAREN • expr_list opt_comma RPAREN

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    RPAREN         shift, and go to state 98
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 99
    expr_list         go to state 100
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 54

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 55

   58 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 101
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 56

   59 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 102
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 57

   20 stmt: item •

    $default  reduce using rule 20 (stmt)


State 58

   23 stmt_list: stmt •

    $default  reduce using rule 23 (stmt_list)


State 59

   21 stmt_list: stmt_list • stmt
   22          | stmt_list • error
   51 block_expr: LBRACE stmt_list • RBRACE
   52           | LBRACE stmt_list • expr RBRACE

    error          shift, and go to state 103
    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    LET            shift, and go to state 42
    FN             shift, and go to state 1
    WHILE          shift, and go to state 43
    PRINT_LN       shift, and go to state 44
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    LBRACE         shift, and go to state 18
    RBRACE         shift, and go to state 104
    LPAREN         shift, and go to state 53
    SEMICOLON      shift, and go to state 54
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    item              go to state 57
    function_decl     go to state 5
    stmt              go to state 105
    print_ln          go to state 60
    let               go to state 61
    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 106
    expr_stmt         go to state 71
    expr_w_block      go to state 72
    expr_wo_block     go to state 73


State 60

   19 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 61

   14 stmt: let •

    $default  reduce using rule 14 (stmt)


State 62

   95 expr_w_block: if_expr •

    $default  reduce using rule 95 (expr_w_block)


State 63

   96 expr_w_block: block_expr •

    $default  reduce using rule 96 (expr_w_block)


State 64

  101 expr_wo_block: unary_op_expr •

    $default  reduce using rule 101 (expr_wo_block)


State 65

   98 expr_wo_block: bin_op_expr •

    $default  reduce using rule 98 (expr_wo_block)


State 66

  108 expr_wo_block: literal •

    $default  reduce using rule 108 (expr_wo_block)


State 67

  103 expr_wo_block: call_expr •

    $default  reduce using rule 103 (expr_wo_block)


State 68

   94 expr_w_block: while_expr •

    $default  reduce using rule 94 (expr_w_block)


State 69

   99 expr_wo_block: tuple_index_expr •

    $default  reduce using rule 99 (expr_wo_block)


State 70

   53 block_expr: LBRACE expr • RBRACE
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    RBRACE   shift, and go to state 125
    DOT      shift, and go to state 126


State 71

   18 stmt: expr_stmt •

    $default  reduce using rule 18 (stmt)


State 72

   88 expr: expr_w_block •
   92 expr_stmt: expr_w_block •

    EQ        reduce using rule 88 (expr)
    EQEQ      reduce using rule 88 (expr)
    NE        reduce using rule 88 (expr)
    LT        reduce using rule 88 (expr)
    LE        reduce using rule 88 (expr)
    GT        reduce using rule 88 (expr)
    GE        reduce using rule 88 (expr)
    PLUS      reduce using rule 88 (expr)
    MINUS     reduce using rule 88 (expr)
    MINUS     [reduce using rule 92 (expr_stmt)]
    STAR      reduce using rule 88 (expr)
    STAR      [reduce using rule 92 (expr_stmt)]
    SLASH     reduce using rule 88 (expr)
    L_AND     reduce using rule 88 (expr)
    L_OR      reduce using rule 88 (expr)
    PLUS_EQ   reduce using rule 88 (expr)
    MIN_EQ    reduce using rule 88 (expr)
    MUL_EQ    reduce using rule 88 (expr)
    DIV_EQ    reduce using rule 88 (expr)
    RBRACE    reduce using rule 88 (expr)
    RBRACE    [reduce using rule 92 (expr_stmt)]
    DOT       reduce using rule 88 (expr)
    $default  reduce using rule 92 (expr_stmt)


State 73

   89 expr: expr_wo_block •
   93 expr_stmt: expr_wo_block • SEMICOLON

    SEMICOLON  shift, and go to state 127

    $default  reduce using rule 89 (expr)


State 74

   10 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 10 (func_arg_list)


State 75

   12 func_arg: opt_mut IDENTIFIER COLON • type

    I8      shift, and go to state 23
    I16     shift, and go to state 24
    I32     shift, and go to state 25
    I64     shift, and go to state 26
    ISIZE   shift, and go to state 27
    U8      shift, and go to state 28
    U16     shift, and go to state 29
    U32     shift, and go to state 30
    U64     shift, and go to state 31
    USIZE   shift, and go to state 32
    BOOL    shift, and go to state 33
    LPAREN  shift, and go to state 34

    type  go to state 128


State 76

   50 type: LPAREN RPAREN •

    $default  reduce using rule 50 (type)


State 77

   36 type_list: type_list • COMMA type
   49 type: LPAREN type_list • RPAREN

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 130


State 78

   37 type_list: type •

    $default  reduce using rule 37 (type_list)


State 79

    5 function_decl: FN IDENTIFIER func_decl_args ARROW type block_expr •

    $default  reduce using rule 5 (function_decl)


State 80

   84 call_expr: IDENTIFIER LPAREN • call_expr_args RPAREN
   85          | IDENTIFIER LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    RPAREN         shift, and go to state 131
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr_args    go to state 132
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 133
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 81

   31 let: LET opt_mut • ident type_decl EQ expr SEMICOLON
   32    | LET opt_mut • ident type_decl SEMICOLON

    IDENTIFIER  shift, and go to state 134

    ident  go to state 135


State 82

  104 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 94
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 83

  105 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 96
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 84

  106 expr_wo_block: CONTINUE •

    $default  reduce using rule 106 (expr_wo_block)


State 85

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   86 while_expr: WHILE expr • block_expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    LBRACE   shift, and go to state 18
    DOT      shift, and go to state 126

    block_expr  go to state 136


State 86

   88 expr: expr_w_block •

    $default  reduce using rule 88 (expr)


State 87

   89 expr: expr_wo_block •

    $default  reduce using rule 89 (expr)


State 88

   24 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 137


State 89

   57 unary_op_expr: BANG expr •
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 57 (unary_op_expr)]
    $default  reduce using rule 57 (unary_op_expr)


State 90

   55 unary_op_expr: MINUS expr •
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 55 (unary_op_expr)]
    $default  reduce using rule 55 (unary_op_expr)


State 91

   56 unary_op_expr: STAR expr •
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 56 (unary_op_expr)]
    $default  reduce using rule 56 (unary_op_expr)


State 92

   33 if_expr: IF expr • block_expr
   34        | IF expr • block_expr ELSE if_expr
   35        | IF expr • block_expr ELSE block_expr
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    LBRACE   shift, and go to state 18
    DOT      shift, and go to state 126

    block_expr  go to state 138


State 93

   15 stmt: RETURN SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 94

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL
  104 expr_wo_block: RETURN expr •

    DOT  shift, and go to state 126

    DOT       [reduce using rule 104 (expr_wo_block)]
    $default  reduce using rule 104 (expr_wo_block)


State 95

   16 stmt: BREAK SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 96

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL
  105 expr_wo_block: BREAK expr •

    DOT  shift, and go to state 126

    DOT       [reduce using rule 105 (expr_wo_block)]
    $default  reduce using rule 105 (expr_wo_block)


State 97

   17 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 98

  102 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 102 (expr_wo_block)


State 99

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL
   91 expr_list: expr •
   97 expr_wo_block: LPAREN expr • RPAREN

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    RPAREN   shift, and go to state 139
    DOT      shift, and go to state 126

    RPAREN    [reduce using rule 91 (expr_list)]
    $default  reduce using rule 91 (expr_list)


State 100

   90 expr_list: expr_list • COMMA expr
  107 expr_wo_block: LPAREN expr_list • opt_comma RPAREN

    COMMA  shift, and go to state 140

    $default  reduce using rule 110 (opt_comma)

    opt_comma  go to state 141


State 101

   58 unary_op_expr: AMPERSAND expr •
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 58 (unary_op_expr)]
    $default  reduce using rule 58 (unary_op_expr)


State 102

   59 unary_op_expr: AMPERSAND_MUT expr •
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 59 (unary_op_expr)]
    $default  reduce using rule 59 (unary_op_expr)


State 103

   22 stmt_list: stmt_list error •

    $default  reduce using rule 22 (stmt_list)


State 104

   51 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 51 (block_expr)


State 105

   21 stmt_list: stmt_list stmt •

    $default  reduce using rule 21 (stmt_list)


State 106

   52 block_expr: LBRACE stmt_list expr • RBRACE
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    RBRACE   shift, and go to state 142
    DOT      shift, and go to state 126


State 107

   19 stmt: print_ln SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 108

   72 bin_op_expr: expr EQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 143
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 109

   66 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 144
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 110

   67 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 145
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 111

   68 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 146
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 112

   71 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 147
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 113

   69 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 148
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 114

   70 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 149
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 115

   60 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 150
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 116

   61 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 151
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 117

   62 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 152
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 118

   63 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 153
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 119

   64 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 154
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 120

   65 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 155
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 121

   73 bin_op_expr: expr PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 156
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 122

   74 bin_op_expr: expr MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 157
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 123

   76 bin_op_expr: expr MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 158
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 124

   75 bin_op_expr: expr DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 159
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 125

   53 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 53 (block_expr)


State 126

   87 tuple_index_expr: expr DOT • DEC_LITERAL

    DEC_LITERAL  shift, and go to state 160


State 127

   93 expr_stmt: expr_wo_block SEMICOLON •

    $default  reduce using rule 93 (expr_stmt)


State 128

   12 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 12 (func_arg)


State 129

   36 type_list: type_list COMMA • type

    I8      shift, and go to state 23
    I16     shift, and go to state 24
    I32     shift, and go to state 25
    I64     shift, and go to state 26
    ISIZE   shift, and go to state 27
    U8      shift, and go to state 28
    U16     shift, and go to state 29
    U32     shift, and go to state 30
    U64     shift, and go to state 31
    USIZE   shift, and go to state 32
    BOOL    shift, and go to state 33
    LPAREN  shift, and go to state 34

    type  go to state 161


State 130

   49 type: LPAREN type_list RPAREN •

    $default  reduce using rule 49 (type)


State 131

   85 call_expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 85 (call_expr)


State 132

   82 call_expr_args: call_expr_args • COMMA expr
   84 call_expr: IDENTIFIER LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 162
    RPAREN  shift, and go to state 163


State 133

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   83 call_expr_args: expr •
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    $default  reduce using rule 83 (call_expr_args)


State 134

   30 ident: IDENTIFIER •

    $default  reduce using rule 30 (ident)


State 135

   31 let: LET opt_mut ident • type_decl EQ expr SEMICOLON
   32    | LET opt_mut ident • type_decl SEMICOLON

    COLON  shift, and go to state 164

    $default  reduce using rule 27 (type_decl)

    type_decl  go to state 165


State 136

   86 while_expr: WHILE expr block_expr •

    $default  reduce using rule 86 (while_expr)


State 137

   24 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 166


State 138

   33 if_expr: IF expr block_expr •
   34        | IF expr block_expr • ELSE if_expr
   35        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 167

    $default  reduce using rule 33 (if_expr)


State 139

   97 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 97 (expr_wo_block)


State 140

   90 expr_list: expr_list COMMA • expr
  109 opt_comma: COMMA •

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    $default  reduce using rule 109 (opt_comma)

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 168
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 141

  107 expr_wo_block: LPAREN expr_list opt_comma • RPAREN

    RPAREN  shift, and go to state 169


State 142

   52 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 52 (block_expr)


State 143

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   72            | expr EQ expr •
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    DOT       [reduce using rule 72 (bin_op_expr)]
    $default  reduce using rule 72 (bin_op_expr)


State 144

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   66            | expr EQEQ expr •
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 66 (bin_op_expr)]
    $default  reduce using rule 66 (bin_op_expr)


State 145

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   67            | expr NE expr •
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 67 (bin_op_expr)]
    $default  reduce using rule 67 (bin_op_expr)


State 146

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   68            | expr LT expr •
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 68 (bin_op_expr)]
    $default  reduce using rule 68 (bin_op_expr)


State 147

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   71            | expr LE expr •
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 71 (bin_op_expr)]
    $default  reduce using rule 71 (bin_op_expr)


State 148

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   69            | expr GT expr •
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 69 (bin_op_expr)]
    $default  reduce using rule 69 (bin_op_expr)


State 149

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   70            | expr GE expr •
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 70 (bin_op_expr)]
    $default  reduce using rule 70 (bin_op_expr)


State 150

   60 bin_op_expr: expr • PLUS expr
   60            | expr PLUS expr •
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 60 (bin_op_expr)]
    $default  reduce using rule 60 (bin_op_expr)


State 151

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   61            | expr MINUS expr •
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 61 (bin_op_expr)]
    $default  reduce using rule 61 (bin_op_expr)


State 152

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   62            | expr STAR expr •
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 62 (bin_op_expr)]
    $default  reduce using rule 62 (bin_op_expr)


State 153

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   63            | expr SLASH expr •
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 126

    DOT       [reduce using rule 63 (bin_op_expr)]
    $default  reduce using rule 63 (bin_op_expr)


State 154

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   64            | expr L_AND expr •
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ   shift, and go to state 109
    NE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    GT     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    DOT    shift, and go to state 126

    DOT       [reduce using rule 64 (bin_op_expr)]
    $default  reduce using rule 64 (bin_op_expr)


State 155

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   65            | expr L_OR expr •
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ   shift, and go to state 109
    NE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    GT     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    STAR   shift, and go to state 117
    SLASH  shift, and go to state 118
    L_AND  shift, and go to state 119
    DOT    shift, and go to state 126

    DOT       [reduce using rule 65 (bin_op_expr)]
    $default  reduce using rule 65 (bin_op_expr)


State 156

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   73            | expr PLUS_EQ expr •
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    DOT       [reduce using rule 73 (bin_op_expr)]
    $default  reduce using rule 73 (bin_op_expr)


State 157

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   74            | expr MIN_EQ expr •
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    DOT       [reduce using rule 74 (bin_op_expr)]
    $default  reduce using rule 74 (bin_op_expr)


State 158

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   76            | expr MUL_EQ expr •
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    DOT       [reduce using rule 76 (bin_op_expr)]
    $default  reduce using rule 76 (bin_op_expr)


State 159

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   75            | expr DIV_EQ expr •
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    DOT       [reduce using rule 75 (bin_op_expr)]
    $default  reduce using rule 75 (bin_op_expr)


State 160

   87 tuple_index_expr: expr DOT DEC_LITERAL •

    $default  reduce using rule 87 (tuple_index_expr)


State 161

   36 type_list: type_list COMMA type •

    $default  reduce using rule 36 (type_list)


State 162

   82 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 170
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 163

   84 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN •

    $default  reduce using rule 84 (call_expr)


State 164

   25 type_decl: COLON • type
   26          | COLON • error

    error   shift, and go to state 171
    I8      shift, and go to state 23
    I16     shift, and go to state 24
    I32     shift, and go to state 25
    I64     shift, and go to state 26
    ISIZE   shift, and go to state 27
    U8      shift, and go to state 28
    U16     shift, and go to state 29
    U32     shift, and go to state 30
    U64     shift, and go to state 31
    USIZE   shift, and go to state 32
    BOOL    shift, and go to state 33
    LPAREN  shift, and go to state 34

    type  go to state 172


State 165

   31 let: LET opt_mut ident type_decl • EQ expr SEMICOLON
   32    | LET opt_mut ident type_decl • SEMICOLON

    EQ         shift, and go to state 173
    SEMICOLON  shift, and go to state 174


State 166

   24 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 24 (print_ln)


State 167

   34 if_expr: IF expr block_expr ELSE • if_expr
   35        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 48
    LBRACE  shift, and go to state 18

    if_expr     go to state 175
    block_expr  go to state 176


State 168

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL
   90 expr_list: expr_list COMMA expr •

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    $default  reduce using rule 90 (expr_list)


State 169

  107 expr_wo_block: LPAREN expr_list opt_comma RPAREN •

    $default  reduce using rule 107 (expr_wo_block)


State 170

   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   82 call_expr_args: call_expr_args COMMA expr •
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 108
    EQEQ     shift, and go to state 109
    NE       shift, and go to state 110
    LT       shift, and go to state 111
    LE       shift, and go to state 112
    GT       shift, and go to state 113
    GE       shift, and go to state 114
    PLUS     shift, and go to state 115
    MINUS    shift, and go to state 116
    STAR     shift, and go to state 117
    SLASH    shift, and go to state 118
    L_AND    shift, and go to state 119
    L_OR     shift, and go to state 120
    PLUS_EQ  shift, and go to state 121
    MIN_EQ   shift, and go to state 122
    MUL_EQ   shift, and go to state 123
    DIV_EQ   shift, and go to state 124
    DOT      shift, and go to state 126

    $default  reduce using rule 82 (call_expr_args)


State 171

   26 type_decl: COLON error •

    $default  reduce using rule 26 (type_decl)


State 172

   25 type_decl: COLON type •

    $default  reduce using rule 25 (type_decl)


State 173

   31 let: LET opt_mut ident type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 36
    FLOAT_LITERAL  shift, and go to state 37
    STR_LITERAL    shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    WHILE          shift, and go to state 43
    BANG           shift, and go to state 45
    MINUS          shift, and go to state 46
    STAR           shift, and go to state 47
    IF             shift, and go to state 48
    RETURN         shift, and go to state 82
    BREAK          shift, and go to state 83
    CONTINUE       shift, and go to state 84
    LBRACE         shift, and go to state 18
    LPAREN         shift, and go to state 53
    AMPERSAND      shift, and go to state 55
    AMPERSAND_MUT  shift, and go to state 56

    if_expr           go to state 62
    block_expr        go to state 63
    unary_op_expr     go to state 64
    bin_op_expr       go to state 65
    literal           go to state 66
    call_expr         go to state 67
    while_expr        go to state 68
    tuple_index_expr  go to state 69
    expr              go to state 177
    expr_w_block      go to state 86
    expr_wo_block     go to state 87


State 174

   32 let: LET opt_mut ident type_decl SEMICOLON •

    $default  reduce using rule 32 (let)


State 175

   34 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 34 (if_expr)


State 176

   35 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 35 (if_expr)


State 177

   31 let: LET opt_mut ident type_decl EQ expr • SEMICOLON
   60 bin_op_expr: expr • PLUS expr
   61            | expr • MINUS expr
   62            | expr • STAR expr
   63            | expr • SLASH expr
   64            | expr • L_AND expr
   65            | expr • L_OR expr
   66            | expr • EQEQ expr
   67            | expr • NE expr
   68            | expr • LT expr
   69            | expr • GT expr
   70            | expr • GE expr
   71            | expr • LE expr
   72            | expr • EQ expr
   73            | expr • PLUS_EQ expr
   74            | expr • MIN_EQ expr
   75            | expr • DIV_EQ expr
   76            | expr • MUL_EQ expr
   87 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ         shift, and go to state 108
    EQEQ       shift, and go to state 109
    NE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    GT         shift, and go to state 113
    GE         shift, and go to state 114
    PLUS       shift, and go to state 115
    MINUS      shift, and go to state 116
    STAR       shift, and go to state 117
    SLASH      shift, and go to state 118
    L_AND      shift, and go to state 119
    L_OR       shift, and go to state 120
    PLUS_EQ    shift, and go to state 121
    MIN_EQ     shift, and go to state 122
    MUL_EQ     shift, and go to state 123
    DIV_EQ     shift, and go to state 124
    SEMICOLON  shift, and go to state 178
    DOT        shift, and go to state 126


State 178

   31 let: LET opt_mut ident type_decl EQ expr SEMICOLON •

    $default  reduce using rule 31 (let)
