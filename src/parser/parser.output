Nonterminals useless in grammar

    ref_add


Terminals unused in grammar

    UNDERSCORE
    OR
    MOD_EQ
    BIT_AND_EQ
    BIT_OR_EQ
    BIT_XOR_EQ
    SHL_EQ
    SHR_EQ
    MOD


State 61 conflicts: 1 shift/reduce
State 82 conflicts: 3 reduce/reduce
State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item_list error item
    4          | item
    5          | error

    6 item: function_decl

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr

    8 func_ret_type: ARROW type
    9              | ε

   10 func_decl_args: LPAREN func_arg_list RPAREN
   11               | LPAREN RPAREN
   12               | error

   13 func_arg_list: func_arg_list COMMA func_arg
   14              | func_arg

   15 func_arg: opt_mut IDENTIFIER COLON type
   16         | opt_mut IDENTIFIER error

   17 stmt: SEMICOLON
   18     | let
   19     | RETURN SEMICOLON
   20     | BREAK SEMICOLON
   21     | CONTINUE SEMICOLON
   22     | expr_stmt
   23     | print_ln SEMICOLON
   24     | item

   25 stmt_list: stmt_list stmt
   26          | stmt

   27 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   28 type_decl: COLON type
   29          | COLON error
   30          | ε

   31 opt_mut: MUT
   32        | ε

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER type_decl SEMICOLON

   36 if_expr: IF expr block_expr
   37        | IF expr block_expr ELSE if_expr
   38        | IF expr block_expr ELSE block_expr

   39 type_list: type_list COMMA type
   40          | type

   41 type: I8
   42     | I16
   43     | I32
   44     | I64
   45     | ISIZE
   46     | U8
   47     | U16
   48     | U32
   49     | U64
   50     | USIZE
   51     | BOOL
   52     | LPAREN type_list RPAREN
   53     | LPAREN RPAREN

   54 block_expr: LBRACE stmt_list RBRACE
   55           | LBRACE stmt_list expr RBRACE
   56           | LBRACE expr RBRACE
   57           | LBRACE RBRACE

   58 assignment: IDENTIFIER EQ expr
   59           | IDENTIFIER PLUS_EQ expr
   60           | IDENTIFIER MIN_EQ expr
   61           | IDENTIFIER DIV_EQ expr
   62           | IDENTIFIER MUL_EQ expr

   63 unary_op_expr: MINUS expr
   64              | STAR expr
   65              | BANG expr
   66              | AMPERSAND expr
   67              | AMPERSAND_MUT expr

   68 bin_op_expr: expr PLUS expr
   69            | expr MINUS expr
   70            | expr STAR expr
   71            | expr SLASH expr
   72            | expr L_AND expr
   73            | expr L_OR expr
   74            | expr EQEQ expr
   75            | expr NE expr
   76            | expr LT expr
   77            | expr GT expr
   78            | expr GE expr
   79            | expr LE expr

   80 literal: DEC_LITERAL
   81        | STR_LITERAL
   82        | FLOAT_LITERAL
   83        | TRUE
   84        | FALSE

   85 call_expr_args: call_expr_args COMMA expr
   86               | expr

   87 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN
   88          | IDENTIFIER LPAREN RPAREN

   89 while_expr: WHILE expr block_expr

   90 expr: expr_w_block
   91     | expr_wo_block

   92 expr_list: expr_list COMMA expr
   93          | expr

   94 expr_stmt: expr_w_block
   95          | expr_wo_block SEMICOLON

   96 expr_w_block: while_expr
   97             | if_expr
   98             | block_expr

   99 expr_wo_block: assignment
  100              | bin_op_expr
  101              | IDENTIFIER
  102              | unary_op_expr
  103              | LPAREN expr RPAREN
  104              | LPAREN RPAREN
  105              | call_expr
  106              | RETURN expr
  107              | BREAK expr
  108              | CONTINUE
  109              | LPAREN expr_list opt_comma RPAREN
  110              | literal

  111 opt_comma: COMMA
  112          | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3 5 12 16 29 34
    DEC_LITERAL <Token> (258) 80
    FLOAT_LITERAL <Token> (259) 82
    STR_LITERAL <Token> (260) 27 81
    TRUE <Token> (261) 83
    FALSE <Token> (262) 84
    IDENTIFIER <Token> (263) 7 15 16 33 34 35 58 59 60 61 62 87 88 101
    UNDERSCORE <Token> (264)
    I8 <Token> (265) 41
    I16 <Token> (266) 42
    I32 <Token> (267) 43
    I64 <Token> (268) 44
    ISIZE <Token> (269) 45
    U8 <Token> (270) 46
    U16 <Token> (271) 47
    U32 <Token> (272) 48
    U64 <Token> (273) 49
    USIZE <Token> (274) 50
    LET <Token> (275) 33 34 35
    MUT <Token> (276) 31
    BOOL <Token> (277) 51
    FN <Token> (278) 7
    WHILE <Token> (279) 89
    PRINT_LN <Token> (280) 27
    EQ <Token> (281) 33 34 58
    EQEQ <Token> (282) 74
    NE <Token> (283) 75
    BANG <Token> (284) 65
    LT <Token> (285) 76
    LE <Token> (286) 79
    GT <Token> (287) 77
    GE <Token> (288) 78
    PLUS <Token> (289) 68
    MINUS <Token> (290) 63 69
    STAR <Token> (291) 64 70
    SLASH <Token> (292) 71
    COMMA <Token> (293) 13 39 85 92 111
    ARROW <Token> (294) 8
    IF <Token> (295) 36 37 38
    ELSE <Token> (296) 37 38
    RETURN <Token> (297) 19 106
    BREAK <Token> (298) 20 107
    CONTINUE <Token> (299) 21 108
    L_AND <Token> (300) 72
    L_OR <Token> (301) 73
    PLUS_EQ <Token> (302) 59
    MIN_EQ <Token> (303) 60
    MUL_EQ <Token> (304) 62
    DIV_EQ <Token> (305) 61
    LBRACE <Token> (306) 54 55 56 57
    RBRACE <Token> (307) 54 55 56 57
    LPAREN <Token> (308) 10 11 27 52 53 87 88 103 104 109
    RPAREN <Token> (309) 10 11 27 52 53 87 88 103 104 109
    SEMICOLON <Token> (310) 17 19 20 21 23 33 34 35 95
    COLON <Token> (311) 15 28 29
    AMPERSAND <Token> (312) 66
    OR <Token> (313)
    AMPERSAND_MUT <Token> (314) 67
    MOD_EQ (315)
    BIT_AND_EQ (316)
    BIT_OR_EQ (317)
    BIT_XOR_EQ (318)
    SHL_EQ (319)
    SHR_EQ (320)
    MOD (321)
    UMINUS (322)
    DEREF (323)
    NOT (324)
    REF (325)
    REF_MUT (326)
    CALL_INDEX (327)
    UNARY (328)
    BIN_OP (329)
    CONTROL_FLOW (330)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    program <U<Ast>> (77)
        on left: 1
        on right: 0
    item_list <std::vector<U<Item>>> (78)
        on left: 2 3 4 5
        on right: 1 2 3
    item <U<Item>> (79)
        on left: 6
        on right: 2 3 4 24
    function_decl <U<FunDecl>> (80)
        on left: 7
        on right: 6
    func_ret_type <Type> (81)
        on left: 8 9
        on right: 7
    func_decl_args <std::vector<FunArg>> (82)
        on left: 10 11 12
        on right: 7
    func_arg_list <std::vector<FunArg>> (83)
        on left: 13 14
        on right: 10 13
    func_arg <FunArg> (84)
        on left: 15 16
        on right: 13 14
    stmt <U<Stmt>> (85)
        on left: 17 18 19 20 21 22 23 24
        on right: 25 26
    stmt_list <std::vector<U<Stmt>>> (86)
        on left: 25 26
        on right: 25 54 55
    print_ln <U<PrintLn>> (87)
        on left: 27
        on right: 23
    type_decl <std::optional<Type>> (88)
        on left: 28 29 30
        on right: 33 34 35
    opt_mut <bool> (89)
        on left: 31 32
        on right: 15 16 33 34 35
    let <U<LetStmt>> (90)
        on left: 33 34 35
        on right: 18
    if_expr <U<IfElse>> (91)
        on left: 36 37 38
        on right: 37 97
    type_list <std::vector<Type>> (92)
        on left: 39 40
        on right: 39 52
    type <Type> (93)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 8 15 28 39 40
    block_expr <U<BlockExpr>> (94)
        on left: 54 55 56 57
        on right: 7 36 37 38 89 98
    assignment <U<AssignExpr>> (95)
        on left: 58 59 60 61 62
        on right: 99
    unary_op_expr <U<UnaryOpExpr>> (96)
        on left: 63 64 65 66 67
        on right: 102
    bin_op_expr <U<BinOpExpr>> (97)
        on left: 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 100
    literal <U<Literal>> (98)
        on left: 80 81 82 83 84
        on right: 110
    call_expr_args <std::vector<U<Expr>>> (99)
        on left: 85 86
        on right: 85 87
    call_expr <U<CallExpr>> (100)
        on left: 87 88
        on right: 105
    while_expr <U<WhileLoop>> (101)
        on left: 89
        on right: 96
    expr <U<Expr>> (102)
        on left: 90 91
        on right: 33 36 37 38 55 56 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 85 86 89 92 93 103 106 107
    expr_list <std::vector<U<Expr>>> (103)
        on left: 92 93
        on right: 92 109
    expr_stmt <U<Expr>> (104)
        on left: 94 95
        on right: 22
    expr_w_block <U<Expr>> (105)
        on left: 96 97 98
        on right: 90 94
    expr_wo_block <U<Expr>> (106)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 91 95
    opt_comma (107)
        on left: 111 112
        on right: 109


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    FN     shift, and go to state 2

    program        go to state 3
    item_list      go to state 4
    item           go to state 5
    function_decl  go to state 6


State 1

    5 item_list: error •

    $default  reduce using rule 5 (item_list)


State 2

    7 function_decl: FN • IDENTIFIER func_decl_args func_ret_type block_expr

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: item_list •
    2 item_list: item_list • item
    3          | item_list • error item

    error  shift, and go to state 9
    FN     shift, and go to state 2

    $end  reduce using rule 1 (program)

    item           go to state 10
    function_decl  go to state 6


State 5

    4 item_list: item •

    $default  reduce using rule 4 (item_list)


State 6

    6 item: function_decl •

    $default  reduce using rule 6 (item)


State 7

    7 function_decl: FN IDENTIFIER • func_decl_args func_ret_type block_expr

    error   shift, and go to state 11
    LPAREN  shift, and go to state 12

    func_decl_args  go to state 13


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 item_list: item_list error • item

    FN  shift, and go to state 2

    item           go to state 14
    function_decl  go to state 6


State 10

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 11

   12 func_decl_args: error •

    $default  reduce using rule 12 (func_decl_args)


State 12

   10 func_decl_args: LPAREN • func_arg_list RPAREN
   11               | LPAREN • RPAREN

    MUT     shift, and go to state 15
    RPAREN  shift, and go to state 16

    $default  reduce using rule 32 (opt_mut)

    func_arg_list  go to state 17
    func_arg       go to state 18
    opt_mut        go to state 19


State 13

    7 function_decl: FN IDENTIFIER func_decl_args • func_ret_type block_expr

    ARROW  shift, and go to state 20

    $default  reduce using rule 9 (func_ret_type)

    func_ret_type  go to state 21


State 14

    3 item_list: item_list error item •

    $default  reduce using rule 3 (item_list)


State 15

   31 opt_mut: MUT •

    $default  reduce using rule 31 (opt_mut)


State 16

   11 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 11 (func_decl_args)


State 17

   10 func_decl_args: LPAREN func_arg_list • RPAREN
   13 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 22
    RPAREN  shift, and go to state 23


State 18

   14 func_arg_list: func_arg •

    $default  reduce using rule 14 (func_arg_list)


State 19

   15 func_arg: opt_mut • IDENTIFIER COLON type
   16         | opt_mut • IDENTIFIER error

    IDENTIFIER  shift, and go to state 24


State 20

    8 func_ret_type: ARROW • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 37


State 21

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type • block_expr

    LBRACE  shift, and go to state 38

    block_expr  go to state 39


State 22

   13 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 15

    $default  reduce using rule 32 (opt_mut)

    func_arg  go to state 40
    opt_mut   go to state 19


State 23

   10 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 10 (func_decl_args)


State 24

   15 func_arg: opt_mut IDENTIFIER • COLON type
   16         | opt_mut IDENTIFIER • error

    error  shift, and go to state 41
    COLON  shift, and go to state 42


State 25

   41 type: I8 •

    $default  reduce using rule 41 (type)


State 26

   42 type: I16 •

    $default  reduce using rule 42 (type)


State 27

   43 type: I32 •

    $default  reduce using rule 43 (type)


State 28

   44 type: I64 •

    $default  reduce using rule 44 (type)


State 29

   45 type: ISIZE •

    $default  reduce using rule 45 (type)


State 30

   46 type: U8 •

    $default  reduce using rule 46 (type)


State 31

   47 type: U16 •

    $default  reduce using rule 47 (type)


State 32

   48 type: U32 •

    $default  reduce using rule 48 (type)


State 33

   49 type: U64 •

    $default  reduce using rule 49 (type)


State 34

   50 type: USIZE •

    $default  reduce using rule 50 (type)


State 35

   51 type: BOOL •

    $default  reduce using rule 51 (type)


State 36

   52 type: LPAREN • type_list RPAREN
   53     | LPAREN • RPAREN

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36
    RPAREN  shift, and go to state 43

    type_list  go to state 44
    type       go to state 45


State 37

    8 func_ret_type: ARROW type •

    $default  reduce using rule 8 (func_ret_type)


State 38

   54 block_expr: LBRACE • stmt_list RBRACE
   55           | LBRACE • stmt_list expr RBRACE
   56           | LBRACE • expr RBRACE
   57           | LBRACE • RBRACE

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    LET            shift, and go to state 52
    FN             shift, and go to state 2
    WHILE          shift, and go to state 53
    PRINT_LN       shift, and go to state 54
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 59
    BREAK          shift, and go to state 60
    CONTINUE       shift, and go to state 61
    LBRACE         shift, and go to state 38
    RBRACE         shift, and go to state 62
    LPAREN         shift, and go to state 63
    SEMICOLON      shift, and go to state 64
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    item           go to state 67
    function_decl  go to state 6
    stmt           go to state 68
    stmt_list      go to state 69
    print_ln       go to state 70
    let            go to state 71
    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 80
    expr_stmt      go to state 81
    expr_w_block   go to state 82
    expr_wo_block  go to state 83


State 39

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr •

    $default  reduce using rule 7 (function_decl)


State 40

   13 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 13 (func_arg_list)


State 41

   16 func_arg: opt_mut IDENTIFIER error •

    $default  reduce using rule 16 (func_arg)


State 42

   15 func_arg: opt_mut IDENTIFIER COLON • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 84


State 43

   53 type: LPAREN RPAREN •

    $default  reduce using rule 53 (type)


State 44

   39 type_list: type_list • COMMA type
   52 type: LPAREN type_list • RPAREN

    COMMA   shift, and go to state 85
    RPAREN  shift, and go to state 86


State 45

   40 type_list: type •

    $default  reduce using rule 40 (type_list)


State 46

   80 literal: DEC_LITERAL •

    $default  reduce using rule 80 (literal)


State 47

   82 literal: FLOAT_LITERAL •

    $default  reduce using rule 82 (literal)


State 48

   81 literal: STR_LITERAL •

    $default  reduce using rule 81 (literal)


State 49

   83 literal: TRUE •

    $default  reduce using rule 83 (literal)


State 50

   84 literal: FALSE •

    $default  reduce using rule 84 (literal)


State 51

   58 assignment: IDENTIFIER • EQ expr
   59           | IDENTIFIER • PLUS_EQ expr
   60           | IDENTIFIER • MIN_EQ expr
   61           | IDENTIFIER • DIV_EQ expr
   62           | IDENTIFIER • MUL_EQ expr
   87 call_expr: IDENTIFIER • LPAREN call_expr_args RPAREN
   88          | IDENTIFIER • LPAREN RPAREN
  101 expr_wo_block: IDENTIFIER •

    EQ       shift, and go to state 87
    PLUS_EQ  shift, and go to state 88
    MIN_EQ   shift, and go to state 89
    MUL_EQ   shift, and go to state 90
    DIV_EQ   shift, and go to state 91
    LPAREN   shift, and go to state 92

    $default  reduce using rule 101 (expr_wo_block)


State 52

   33 let: LET • opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET • opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET • opt_mut IDENTIFIER type_decl SEMICOLON

    MUT  shift, and go to state 15

    $default  reduce using rule 32 (opt_mut)

    opt_mut  go to state 93


State 53

   89 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 97
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 54

   27 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 100


State 55

   65 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 101
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 56

   63 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 102
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 57

   64 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 103
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 58

   36 if_expr: IF • expr block_expr
   37        | IF • expr block_expr ELSE if_expr
   38        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 104
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 59

   19 stmt: RETURN • SEMICOLON
  106 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    SEMICOLON      shift, and go to state 105
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 106
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 60

   20 stmt: BREAK • SEMICOLON
  107 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    SEMICOLON      shift, and go to state 107
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 108
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 61

   21 stmt: CONTINUE • SEMICOLON
  108 expr_wo_block: CONTINUE •

    SEMICOLON  shift, and go to state 109

    SEMICOLON  [reduce using rule 108 (expr_wo_block)]
    $default   reduce using rule 108 (expr_wo_block)


State 62

   57 block_expr: LBRACE RBRACE •

    $default  reduce using rule 57 (block_expr)


State 63

  103 expr_wo_block: LPAREN • expr RPAREN
  104              | LPAREN • RPAREN
  109              | LPAREN • expr_list opt_comma RPAREN

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    RPAREN         shift, and go to state 110
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 111
    expr_list      go to state 112
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 64

   17 stmt: SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 65

   66 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 113
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 66

   67 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 114
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 67

   24 stmt: item •

    $default  reduce using rule 24 (stmt)


State 68

   26 stmt_list: stmt •

    $default  reduce using rule 26 (stmt_list)


State 69

   25 stmt_list: stmt_list • stmt
   54 block_expr: LBRACE stmt_list • RBRACE
   55           | LBRACE stmt_list • expr RBRACE

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    LET            shift, and go to state 52
    FN             shift, and go to state 2
    WHILE          shift, and go to state 53
    PRINT_LN       shift, and go to state 54
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 59
    BREAK          shift, and go to state 60
    CONTINUE       shift, and go to state 61
    LBRACE         shift, and go to state 38
    RBRACE         shift, and go to state 115
    LPAREN         shift, and go to state 63
    SEMICOLON      shift, and go to state 64
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    item           go to state 67
    function_decl  go to state 6
    stmt           go to state 116
    print_ln       go to state 70
    let            go to state 71
    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 117
    expr_stmt      go to state 81
    expr_w_block   go to state 82
    expr_wo_block  go to state 83


State 70

   23 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 118


State 71

   18 stmt: let •

    $default  reduce using rule 18 (stmt)


State 72

   97 expr_w_block: if_expr •

    $default  reduce using rule 97 (expr_w_block)


State 73

   98 expr_w_block: block_expr •

    $default  reduce using rule 98 (expr_w_block)


State 74

   99 expr_wo_block: assignment •

    $default  reduce using rule 99 (expr_wo_block)


State 75

  102 expr_wo_block: unary_op_expr •

    $default  reduce using rule 102 (expr_wo_block)


State 76

  100 expr_wo_block: bin_op_expr •

    $default  reduce using rule 100 (expr_wo_block)


State 77

  110 expr_wo_block: literal •

    $default  reduce using rule 110 (expr_wo_block)


State 78

  105 expr_wo_block: call_expr •

    $default  reduce using rule 105 (expr_wo_block)


State 79

   96 expr_w_block: while_expr •

    $default  reduce using rule 96 (expr_w_block)


State 80

   56 block_expr: LBRACE expr • RBRACE
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ    shift, and go to state 119
    NE      shift, and go to state 120
    LT      shift, and go to state 121
    LE      shift, and go to state 122
    GT      shift, and go to state 123
    GE      shift, and go to state 124
    PLUS    shift, and go to state 125
    MINUS   shift, and go to state 126
    STAR    shift, and go to state 127
    SLASH   shift, and go to state 128
    L_AND   shift, and go to state 129
    L_OR    shift, and go to state 130
    RBRACE  shift, and go to state 131


State 81

   22 stmt: expr_stmt •

    $default  reduce using rule 22 (stmt)


State 82

   90 expr: expr_w_block •
   94 expr_stmt: expr_w_block •

    EQEQ      reduce using rule 90 (expr)
    NE        reduce using rule 90 (expr)
    LT        reduce using rule 90 (expr)
    LE        reduce using rule 90 (expr)
    GT        reduce using rule 90 (expr)
    GE        reduce using rule 90 (expr)
    PLUS      reduce using rule 90 (expr)
    MINUS     reduce using rule 90 (expr)
    MINUS     [reduce using rule 94 (expr_stmt)]
    STAR      reduce using rule 90 (expr)
    STAR      [reduce using rule 94 (expr_stmt)]
    SLASH     reduce using rule 90 (expr)
    L_AND     reduce using rule 90 (expr)
    L_OR      reduce using rule 90 (expr)
    RBRACE    reduce using rule 90 (expr)
    RBRACE    [reduce using rule 94 (expr_stmt)]
    $default  reduce using rule 94 (expr_stmt)


State 83

   91 expr: expr_wo_block •
   95 expr_stmt: expr_wo_block • SEMICOLON

    SEMICOLON  shift, and go to state 132

    $default  reduce using rule 91 (expr)


State 84

   15 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 15 (func_arg)


State 85

   39 type_list: type_list COMMA • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 133


State 86

   52 type: LPAREN type_list RPAREN •

    $default  reduce using rule 52 (type)


State 87

   58 assignment: IDENTIFIER EQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 134
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 88

   59 assignment: IDENTIFIER PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 135
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 89

   60 assignment: IDENTIFIER MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 136
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 90

   62 assignment: IDENTIFIER MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 137
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 91

   61 assignment: IDENTIFIER DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 138
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 92

   87 call_expr: IDENTIFIER LPAREN • call_expr_args RPAREN
   88          | IDENTIFIER LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    RPAREN         shift, and go to state 139
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr         go to state 72
    block_expr      go to state 73
    assignment      go to state 74
    unary_op_expr   go to state 75
    bin_op_expr     go to state 76
    literal         go to state 77
    call_expr_args  go to state 140
    call_expr       go to state 78
    while_expr      go to state 79
    expr            go to state 141
    expr_w_block    go to state 98
    expr_wo_block   go to state 99


State 93

   33 let: LET opt_mut • IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET opt_mut • IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET opt_mut • IDENTIFIER type_decl SEMICOLON

    IDENTIFIER  shift, and go to state 142


State 94

  106 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 106
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 95

  107 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 108
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 96

  108 expr_wo_block: CONTINUE •

    $default  reduce using rule 108 (expr_wo_block)


State 97

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   89 while_expr: WHILE expr • block_expr

    EQEQ    shift, and go to state 119
    NE      shift, and go to state 120
    LT      shift, and go to state 121
    LE      shift, and go to state 122
    GT      shift, and go to state 123
    GE      shift, and go to state 124
    PLUS    shift, and go to state 125
    MINUS   shift, and go to state 126
    STAR    shift, and go to state 127
    SLASH   shift, and go to state 128
    L_AND   shift, and go to state 129
    L_OR    shift, and go to state 130
    LBRACE  shift, and go to state 38

    block_expr  go to state 143


State 98

   90 expr: expr_w_block •

    $default  reduce using rule 90 (expr)


State 99

   91 expr: expr_wo_block •

    $default  reduce using rule 91 (expr)


State 100

   27 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 144


State 101

   65 unary_op_expr: BANG expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 65 (unary_op_expr)


State 102

   63 unary_op_expr: MINUS expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 63 (unary_op_expr)


State 103

   64 unary_op_expr: STAR expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 64 (unary_op_expr)


State 104

   36 if_expr: IF expr • block_expr
   37        | IF expr • block_expr ELSE if_expr
   38        | IF expr • block_expr ELSE block_expr
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ    shift, and go to state 119
    NE      shift, and go to state 120
    LT      shift, and go to state 121
    LE      shift, and go to state 122
    GT      shift, and go to state 123
    GE      shift, and go to state 124
    PLUS    shift, and go to state 125
    MINUS   shift, and go to state 126
    STAR    shift, and go to state 127
    SLASH   shift, and go to state 128
    L_AND   shift, and go to state 129
    L_OR    shift, and go to state 130
    LBRACE  shift, and go to state 38

    block_expr  go to state 145


State 105

   19 stmt: RETURN SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 106

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
  106 expr_wo_block: RETURN expr •

    $default  reduce using rule 106 (expr_wo_block)


State 107

   20 stmt: BREAK SEMICOLON •

    $default  reduce using rule 20 (stmt)


State 108

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
  107 expr_wo_block: BREAK expr •

    $default  reduce using rule 107 (expr_wo_block)


State 109

   21 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 110

  104 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 104 (expr_wo_block)


State 111

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   93 expr_list: expr •
  103 expr_wo_block: LPAREN expr • RPAREN

    EQEQ    shift, and go to state 119
    NE      shift, and go to state 120
    LT      shift, and go to state 121
    LE      shift, and go to state 122
    GT      shift, and go to state 123
    GE      shift, and go to state 124
    PLUS    shift, and go to state 125
    MINUS   shift, and go to state 126
    STAR    shift, and go to state 127
    SLASH   shift, and go to state 128
    L_AND   shift, and go to state 129
    L_OR    shift, and go to state 130
    RPAREN  shift, and go to state 146

    RPAREN    [reduce using rule 93 (expr_list)]
    $default  reduce using rule 93 (expr_list)


State 112

   92 expr_list: expr_list • COMMA expr
  109 expr_wo_block: LPAREN expr_list • opt_comma RPAREN

    COMMA  shift, and go to state 147

    $default  reduce using rule 112 (opt_comma)

    opt_comma  go to state 148


State 113

   66 unary_op_expr: AMPERSAND expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 66 (unary_op_expr)


State 114

   67 unary_op_expr: AMPERSAND_MUT expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 67 (unary_op_expr)


State 115

   54 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 54 (block_expr)


State 116

   25 stmt_list: stmt_list stmt •

    $default  reduce using rule 25 (stmt_list)


State 117

   55 block_expr: LBRACE stmt_list expr • RBRACE
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ    shift, and go to state 119
    NE      shift, and go to state 120
    LT      shift, and go to state 121
    LE      shift, and go to state 122
    GT      shift, and go to state 123
    GE      shift, and go to state 124
    PLUS    shift, and go to state 125
    MINUS   shift, and go to state 126
    STAR    shift, and go to state 127
    SLASH   shift, and go to state 128
    L_AND   shift, and go to state 129
    L_OR    shift, and go to state 130
    RBRACE  shift, and go to state 149


State 118

   23 stmt: print_ln SEMICOLON •

    $default  reduce using rule 23 (stmt)


State 119

   74 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 150
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 120

   75 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 151
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 121

   76 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 152
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 122

   79 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 153
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 123

   77 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 154
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 124

   78 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 155
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 125

   68 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 156
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 126

   69 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 157
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 127

   70 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 158
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 128

   71 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 159
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 129

   72 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 160
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 130

   73 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 161
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 131

   56 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 56 (block_expr)


State 132

   95 expr_stmt: expr_wo_block SEMICOLON •

    $default  reduce using rule 95 (expr_stmt)


State 133

   39 type_list: type_list COMMA type •

    $default  reduce using rule 39 (type_list)


State 134

   58 assignment: IDENTIFIER EQ expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 58 (assignment)


State 135

   59 assignment: IDENTIFIER PLUS_EQ expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 59 (assignment)


State 136

   60 assignment: IDENTIFIER MIN_EQ expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 60 (assignment)


State 137

   62 assignment: IDENTIFIER MUL_EQ expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 62 (assignment)


State 138

   61 assignment: IDENTIFIER DIV_EQ expr •
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 61 (assignment)


State 139

   88 call_expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 88 (call_expr)


State 140

   85 call_expr_args: call_expr_args • COMMA expr
   87 call_expr: IDENTIFIER LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 162
    RPAREN  shift, and go to state 163


State 141

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   86 call_expr_args: expr •

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 86 (call_expr_args)


State 142

   33 let: LET opt_mut IDENTIFIER • type_decl EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER • type_decl error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER • type_decl SEMICOLON

    COLON  shift, and go to state 164

    $default  reduce using rule 30 (type_decl)

    type_decl  go to state 165


State 143

   89 while_expr: WHILE expr block_expr •

    $default  reduce using rule 89 (while_expr)


State 144

   27 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 166


State 145

   36 if_expr: IF expr block_expr •
   37        | IF expr block_expr • ELSE if_expr
   38        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 167

    $default  reduce using rule 36 (if_expr)


State 146

  103 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 103 (expr_wo_block)


State 147

   92 expr_list: expr_list COMMA • expr
  111 opt_comma: COMMA •

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    $default  reduce using rule 111 (opt_comma)

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 168
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 148

  109 expr_wo_block: LPAREN expr_list opt_comma • RPAREN

    RPAREN  shift, and go to state 169


State 149

   55 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 55 (block_expr)


State 150

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   74            | expr EQEQ expr •
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 74 (bin_op_expr)


State 151

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   75            | expr NE expr •
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 75 (bin_op_expr)


State 152

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   76            | expr LT expr •
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 76 (bin_op_expr)


State 153

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   79            | expr LE expr •

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 79 (bin_op_expr)


State 154

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   77            | expr GT expr •
   78            | expr • GE expr
   79            | expr • LE expr

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 77 (bin_op_expr)


State 155

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   78            | expr GE expr •
   79            | expr • LE expr

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 78 (bin_op_expr)


State 156

   68 bin_op_expr: expr • PLUS expr
   68            | expr PLUS expr •
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 68 (bin_op_expr)


State 157

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   69            | expr MINUS expr •
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 69 (bin_op_expr)


State 158

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   70            | expr STAR expr •
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 70 (bin_op_expr)


State 159

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   71            | expr SLASH expr •
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    $default  reduce using rule 71 (bin_op_expr)


State 160

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   72            | expr L_AND expr •
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128

    $default  reduce using rule 72 (bin_op_expr)


State 161

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   73            | expr L_OR expr •
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129

    $default  reduce using rule 73 (bin_op_expr)


State 162

   85 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 170
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 163

   87 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN •

    $default  reduce using rule 87 (call_expr)


State 164

   28 type_decl: COLON • type
   29          | COLON • error

    error   shift, and go to state 171
    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 172


State 165

   33 let: LET opt_mut IDENTIFIER type_decl • EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER type_decl • error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER type_decl • SEMICOLON

    error      shift, and go to state 173
    EQ         shift, and go to state 174
    SEMICOLON  shift, and go to state 175


State 166

   27 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 27 (print_ln)


State 167

   37 if_expr: IF expr block_expr ELSE • if_expr
   38        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 58
    LBRACE  shift, and go to state 38

    if_expr     go to state 176
    block_expr  go to state 177


State 168

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   92 expr_list: expr_list COMMA expr •

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 92 (expr_list)


State 169

  109 expr_wo_block: LPAREN expr_list opt_comma RPAREN •

    $default  reduce using rule 109 (expr_wo_block)


State 170

   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr
   85 call_expr_args: call_expr_args COMMA expr •

    EQEQ   shift, and go to state 119
    NE     shift, and go to state 120
    LT     shift, and go to state 121
    LE     shift, and go to state 122
    GT     shift, and go to state 123
    GE     shift, and go to state 124
    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126
    STAR   shift, and go to state 127
    SLASH  shift, and go to state 128
    L_AND  shift, and go to state 129
    L_OR   shift, and go to state 130

    $default  reduce using rule 85 (call_expr_args)


State 171

   29 type_decl: COLON error •

    $default  reduce using rule 29 (type_decl)


State 172

   28 type_decl: COLON type •

    $default  reduce using rule 28 (type_decl)


State 173

   34 let: LET opt_mut IDENTIFIER type_decl error • EQ SEMICOLON

    EQ  shift, and go to state 178


State 174

   33 let: LET opt_mut IDENTIFIER type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    STR_LITERAL    shift, and go to state 48
    TRUE           shift, and go to state 49
    FALSE          shift, and go to state 50
    IDENTIFIER     shift, and go to state 51
    WHILE          shift, and go to state 53
    BANG           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    IF             shift, and go to state 58
    RETURN         shift, and go to state 94
    BREAK          shift, and go to state 95
    CONTINUE       shift, and go to state 96
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 63
    AMPERSAND      shift, and go to state 65
    AMPERSAND_MUT  shift, and go to state 66

    if_expr        go to state 72
    block_expr     go to state 73
    assignment     go to state 74
    unary_op_expr  go to state 75
    bin_op_expr    go to state 76
    literal        go to state 77
    call_expr      go to state 78
    while_expr     go to state 79
    expr           go to state 179
    expr_w_block   go to state 98
    expr_wo_block  go to state 99


State 175

   35 let: LET opt_mut IDENTIFIER type_decl SEMICOLON •

    $default  reduce using rule 35 (let)


State 176

   37 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 37 (if_expr)


State 177

   38 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 38 (if_expr)


State 178

   34 let: LET opt_mut IDENTIFIER type_decl error EQ • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 179

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr • SEMICOLON
   68 bin_op_expr: expr • PLUS expr
   69            | expr • MINUS expr
   70            | expr • STAR expr
   71            | expr • SLASH expr
   72            | expr • L_AND expr
   73            | expr • L_OR expr
   74            | expr • EQEQ expr
   75            | expr • NE expr
   76            | expr • LT expr
   77            | expr • GT expr
   78            | expr • GE expr
   79            | expr • LE expr

    EQEQ       shift, and go to state 119
    NE         shift, and go to state 120
    LT         shift, and go to state 121
    LE         shift, and go to state 122
    GT         shift, and go to state 123
    GE         shift, and go to state 124
    PLUS       shift, and go to state 125
    MINUS      shift, and go to state 126
    STAR       shift, and go to state 127
    SLASH      shift, and go to state 128
    L_AND      shift, and go to state 129
    L_OR       shift, and go to state 130
    SEMICOLON  shift, and go to state 181


State 180

   34 let: LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON •

    $default  reduce using rule 34 (let)


State 181

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON •

    $default  reduce using rule 33 (let)
