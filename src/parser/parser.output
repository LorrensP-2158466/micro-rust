Terminals unused in grammar

    UNDERSCORE
    OR
    MOD_EQ
    BIT_AND_EQ
    BIT_OR_EQ
    BIT_XOR_EQ
    SHL_EQ
    SHR_EQ
    MOD
    METHOD_CALL
    FUNC_CALL


State 58 conflicts: 1 shift/reduce
State 79 conflicts: 3 reduce/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item

    4 item: function_decl

    5 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr

    6 func_ret_type: ARROW type
    7              | ε

    8 func_decl_args: LPAREN func_arg_list RPAREN
    9               | LPAREN RPAREN
   10               | error

   11 func_arg_list: func_arg_list COMMA func_arg
   12              | func_arg

   13 func_arg: opt_mut IDENTIFIER COLON type
   14         | opt_mut IDENTIFIER error

   15 stmt: SEMICOLON
   16     | let
   17     | RETURN SEMICOLON
   18     | BREAK SEMICOLON
   19     | CONTINUE SEMICOLON
   20     | expr_stmt
   21     | print_ln SEMICOLON
   22     | item

   23 stmt_list: stmt_list stmt
   24          | stmt_list error
   25          | stmt

   26 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   27 type_decl: COLON type
   28          | COLON error
   29          | ε

   30 opt_mut: MUT
   31        | ε

   32 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   33    | LET opt_mut IDENTIFIER type_decl SEMICOLON

   34 if_expr: IF expr block_expr
   35        | IF expr block_expr ELSE if_expr
   36        | IF expr block_expr ELSE block_expr

   37 type_list: type_list COMMA type
   38          | type

   39 type: I8
   40     | I16
   41     | I32
   42     | I64
   43     | ISIZE
   44     | U8
   45     | U16
   46     | U32
   47     | U64
   48     | USIZE
   49     | BOOL
   50     | LPAREN type_list RPAREN
   51     | LPAREN RPAREN

   52 block_expr: LBRACE stmt_list RBRACE
   53           | LBRACE stmt_list expr RBRACE
   54           | LBRACE expr RBRACE
   55           | LBRACE RBRACE

   56 unary_op_expr: MINUS expr
   57              | STAR expr
   58              | BANG expr
   59              | AMPERSAND expr
   60              | AMPERSAND_MUT expr

   61 bin_op_expr: expr PLUS expr
   62            | expr MINUS expr
   63            | expr STAR expr
   64            | expr SLASH expr
   65            | expr L_AND expr
   66            | expr L_OR expr
   67            | expr EQEQ expr
   68            | expr NE expr
   69            | expr LT expr
   70            | expr GT expr
   71            | expr GE expr
   72            | expr LE expr
   73            | expr EQ expr
   74            | expr PLUS_EQ expr
   75            | expr MIN_EQ expr
   76            | expr DIV_EQ expr
   77            | expr MUL_EQ expr

   78 literal: DEC_LITERAL
   79        | STR_LITERAL
   80        | FLOAT_LITERAL
   81        | TRUE
   82        | FALSE

   83 call_expr_args: call_expr_args COMMA expr
   84               | expr

   85 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN
   86          | IDENTIFIER LPAREN RPAREN

   87 while_expr: WHILE expr block_expr

   88 tuple_index_expr: expr DOT DEC_LITERAL

   89 expr: expr_w_block
   90     | expr_wo_block

   91 expr_list: expr_list COMMA expr
   92          | expr

   93 expr_stmt: expr_w_block
   94          | expr_wo_block SEMICOLON

   95 expr_w_block: while_expr
   96             | if_expr
   97             | block_expr

   98 expr_wo_block: LPAREN expr RPAREN
   99              | bin_op_expr
  100              | tuple_index_expr
  101              | IDENTIFIER
  102              | unary_op_expr
  103              | LPAREN RPAREN
  104              | call_expr
  105              | RETURN expr
  106              | BREAK expr
  107              | CONTINUE
  108              | LPAREN expr_list opt_comma RPAREN
  109              | literal

  110 opt_comma: COMMA
  111          | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 10 14 24 28
    DEC_LITERAL <Token> (258) 78 88
    FLOAT_LITERAL <Token> (259) 80
    STR_LITERAL <Token> (260) 26 79
    TRUE <Token> (261) 81
    FALSE <Token> (262) 82
    IDENTIFIER <Token> (263) 5 13 14 32 33 85 86 101
    UNDERSCORE <Token> (264)
    I8 <Token> (265) 39
    I16 <Token> (266) 40
    I32 <Token> (267) 41
    I64 <Token> (268) 42
    ISIZE <Token> (269) 43
    U8 <Token> (270) 44
    U16 <Token> (271) 45
    U32 <Token> (272) 46
    U64 <Token> (273) 47
    USIZE <Token> (274) 48
    LET <Token> (275) 32 33
    MUT <Token> (276) 30
    BOOL <Token> (277) 49
    FN <Token> (278) 5
    WHILE <Token> (279) 87
    PRINT_LN <Token> (280) 26
    EQ <Token> (281) 32 73
    EQEQ <Token> (282) 67
    NE <Token> (283) 68
    BANG <Token> (284) 58
    LT <Token> (285) 69
    LE <Token> (286) 72
    GT <Token> (287) 70
    GE <Token> (288) 71
    PLUS <Token> (289) 61
    MINUS <Token> (290) 56 62
    STAR <Token> (291) 57 63
    SLASH <Token> (292) 64
    COMMA <Token> (293) 11 37 83 91 110
    ARROW <Token> (294) 6
    IF <Token> (295) 34 35 36
    ELSE <Token> (296) 35 36
    RETURN <Token> (297) 17 105
    BREAK <Token> (298) 18 106
    CONTINUE <Token> (299) 19 107
    L_AND <Token> (300) 65
    L_OR <Token> (301) 66
    PLUS_EQ <Token> (302) 74
    MIN_EQ <Token> (303) 75
    MUL_EQ <Token> (304) 77
    DIV_EQ <Token> (305) 76
    LBRACE <Token> (306) 52 53 54 55
    RBRACE <Token> (307) 52 53 54 55
    LPAREN <Token> (308) 8 9 26 50 51 85 86 98 103 108
    RPAREN <Token> (309) 8 9 26 50 51 85 86 98 103 108
    SEMICOLON <Token> (310) 15 17 18 19 21 32 33 94
    COLON <Token> (311) 13 27 28
    AMPERSAND <Token> (312) 59
    OR <Token> (313)
    AMPERSAND_MUT <Token> (314) 60
    DOT <Token> (315) 88
    MOD_EQ (316)
    BIT_AND_EQ (317)
    BIT_OR_EQ (318)
    BIT_XOR_EQ (319)
    SHL_EQ (320)
    SHR_EQ (321)
    MOD (322)
    UMINUS (323)
    DEREF (324)
    NOT (325)
    REF (326)
    REF_MUT (327)
    METHOD_CALL (328)
    FIELD_ACCESS (329)
    FUNC_CALL (330)
    PATH (331)
    CALL_INDEX (332)
    UNARY (333)
    BIN_OP (334)
    CONTROL_FLOW (335)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    program <U<Ast>> (82)
        on left: 1
        on right: 0
    item_list <std::vector<U<Item>>> (83)
        on left: 2 3
        on right: 1 2
    item <U<Item>> (84)
        on left: 4
        on right: 2 3 22
    function_decl <U<FunDecl>> (85)
        on left: 5
        on right: 4
    func_ret_type <Type> (86)
        on left: 6 7
        on right: 5
    func_decl_args <std::vector<FunArg>> (87)
        on left: 8 9 10
        on right: 5
    func_arg_list <std::vector<FunArg>> (88)
        on left: 11 12
        on right: 8 11
    func_arg <FunArg> (89)
        on left: 13 14
        on right: 11 12
    stmt <U<Stmt>> (90)
        on left: 15 16 17 18 19 20 21 22
        on right: 23 25
    stmt_list <std::vector<U<Stmt>>> (91)
        on left: 23 24 25
        on right: 23 24 52 53
    print_ln <U<PrintLn>> (92)
        on left: 26
        on right: 21
    type_decl <std::optional<Type>> (93)
        on left: 27 28 29
        on right: 32 33
    opt_mut <bool> (94)
        on left: 30 31
        on right: 13 14 32 33
    let <U<LetStmt>> (95)
        on left: 32 33
        on right: 16
    if_expr <U<IfElse>> (96)
        on left: 34 35 36
        on right: 35 96
    type_list <std::vector<Type>> (97)
        on left: 37 38
        on right: 37 50
    type <Type> (98)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 6 13 27 37 38
    block_expr <U<BlockExpr>> (99)
        on left: 52 53 54 55
        on right: 5 34 35 36 87 97
    unary_op_expr <U<UnaryOpExpr>> (100)
        on left: 56 57 58 59 60
        on right: 102
    bin_op_expr <U<Expr>> (101)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 99
    literal <U<Literal>> (102)
        on left: 78 79 80 81 82
        on right: 109
    call_expr_args <std::vector<U<Expr>>> (103)
        on left: 83 84
        on right: 83 85
    call_expr <U<CallExpr>> (104)
        on left: 85 86
        on right: 104
    while_expr <U<WhileLoop>> (105)
        on left: 87
        on right: 95
    tuple_index_expr <U<TupleIndexExpr>> (106)
        on left: 88
        on right: 100
    expr <U<Expr>> (107)
        on left: 89 90
        on right: 32 34 35 36 53 54 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 83 84 87 88 91 92 98 105 106
    expr_list <std::vector<U<Expr>>> (108)
        on left: 91 92
        on right: 91 108
    expr_stmt <U<Expr>> (109)
        on left: 93 94
        on right: 20
    expr_w_block <U<Expr>> (110)
        on left: 95 96 97
        on right: 89 93
    expr_wo_block <U<Expr>> (111)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 90 94
    opt_comma (112)
        on left: 110 111
        on right: 108


State 0

    0 $accept: • program $end

    FN  shift, and go to state 1

    program        go to state 2
    item_list      go to state 3
    item           go to state 4
    function_decl  go to state 5


State 1

    5 function_decl: FN • IDENTIFIER func_decl_args func_ret_type block_expr

    IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    1 program: item_list •
    2 item_list: item_list • item

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    item           go to state 8
    function_decl  go to state 5


State 4

    3 item_list: item •

    $default  reduce using rule 3 (item_list)


State 5

    4 item: function_decl •

    $default  reduce using rule 4 (item)


State 6

    5 function_decl: FN IDENTIFIER • func_decl_args func_ret_type block_expr

    error   shift, and go to state 9
    LPAREN  shift, and go to state 10

    func_decl_args  go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 9

   10 func_decl_args: error •

    $default  reduce using rule 10 (func_decl_args)


State 10

    8 func_decl_args: LPAREN • func_arg_list RPAREN
    9               | LPAREN • RPAREN

    MUT     shift, and go to state 12
    RPAREN  shift, and go to state 13

    $default  reduce using rule 31 (opt_mut)

    func_arg_list  go to state 14
    func_arg       go to state 15
    opt_mut        go to state 16


State 11

    5 function_decl: FN IDENTIFIER func_decl_args • func_ret_type block_expr

    ARROW  shift, and go to state 17

    $default  reduce using rule 7 (func_ret_type)

    func_ret_type  go to state 18


State 12

   30 opt_mut: MUT •

    $default  reduce using rule 30 (opt_mut)


State 13

    9 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 9 (func_decl_args)


State 14

    8 func_decl_args: LPAREN func_arg_list • RPAREN
   11 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 19
    RPAREN  shift, and go to state 20


State 15

   12 func_arg_list: func_arg •

    $default  reduce using rule 12 (func_arg_list)


State 16

   13 func_arg: opt_mut • IDENTIFIER COLON type
   14         | opt_mut • IDENTIFIER error

    IDENTIFIER  shift, and go to state 21


State 17

    6 func_ret_type: ARROW • type

    I8      shift, and go to state 22
    I16     shift, and go to state 23
    I32     shift, and go to state 24
    I64     shift, and go to state 25
    ISIZE   shift, and go to state 26
    U8      shift, and go to state 27
    U16     shift, and go to state 28
    U32     shift, and go to state 29
    U64     shift, and go to state 30
    USIZE   shift, and go to state 31
    BOOL    shift, and go to state 32
    LPAREN  shift, and go to state 33

    type  go to state 34


State 18

    5 function_decl: FN IDENTIFIER func_decl_args func_ret_type • block_expr

    LBRACE  shift, and go to state 35

    block_expr  go to state 36


State 19

   11 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 12

    $default  reduce using rule 31 (opt_mut)

    func_arg  go to state 37
    opt_mut   go to state 16


State 20

    8 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 8 (func_decl_args)


State 21

   13 func_arg: opt_mut IDENTIFIER • COLON type
   14         | opt_mut IDENTIFIER • error

    error  shift, and go to state 38
    COLON  shift, and go to state 39


State 22

   39 type: I8 •

    $default  reduce using rule 39 (type)


State 23

   40 type: I16 •

    $default  reduce using rule 40 (type)


State 24

   41 type: I32 •

    $default  reduce using rule 41 (type)


State 25

   42 type: I64 •

    $default  reduce using rule 42 (type)


State 26

   43 type: ISIZE •

    $default  reduce using rule 43 (type)


State 27

   44 type: U8 •

    $default  reduce using rule 44 (type)


State 28

   45 type: U16 •

    $default  reduce using rule 45 (type)


State 29

   46 type: U32 •

    $default  reduce using rule 46 (type)


State 30

   47 type: U64 •

    $default  reduce using rule 47 (type)


State 31

   48 type: USIZE •

    $default  reduce using rule 48 (type)


State 32

   49 type: BOOL •

    $default  reduce using rule 49 (type)


State 33

   50 type: LPAREN • type_list RPAREN
   51     | LPAREN • RPAREN

    I8      shift, and go to state 22
    I16     shift, and go to state 23
    I32     shift, and go to state 24
    I64     shift, and go to state 25
    ISIZE   shift, and go to state 26
    U8      shift, and go to state 27
    U16     shift, and go to state 28
    U32     shift, and go to state 29
    U64     shift, and go to state 30
    USIZE   shift, and go to state 31
    BOOL    shift, and go to state 32
    LPAREN  shift, and go to state 33
    RPAREN  shift, and go to state 40

    type_list  go to state 41
    type       go to state 42


State 34

    6 func_ret_type: ARROW type •

    $default  reduce using rule 6 (func_ret_type)


State 35

   52 block_expr: LBRACE • stmt_list RBRACE
   53           | LBRACE • stmt_list expr RBRACE
   54           | LBRACE • expr RBRACE
   55           | LBRACE • RBRACE

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    LET            shift, and go to state 49
    FN             shift, and go to state 1
    WHILE          shift, and go to state 50
    PRINT_LN       shift, and go to state 51
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 56
    BREAK          shift, and go to state 57
    CONTINUE       shift, and go to state 58
    LBRACE         shift, and go to state 35
    RBRACE         shift, and go to state 59
    LPAREN         shift, and go to state 60
    SEMICOLON      shift, and go to state 61
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    item              go to state 64
    function_decl     go to state 5
    stmt              go to state 65
    stmt_list         go to state 66
    print_ln          go to state 67
    let               go to state 68
    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 77
    expr_stmt         go to state 78
    expr_w_block      go to state 79
    expr_wo_block     go to state 80


State 36

    5 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr •

    $default  reduce using rule 5 (function_decl)


State 37

   11 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 11 (func_arg_list)


State 38

   14 func_arg: opt_mut IDENTIFIER error •

    $default  reduce using rule 14 (func_arg)


State 39

   13 func_arg: opt_mut IDENTIFIER COLON • type

    I8      shift, and go to state 22
    I16     shift, and go to state 23
    I32     shift, and go to state 24
    I64     shift, and go to state 25
    ISIZE   shift, and go to state 26
    U8      shift, and go to state 27
    U16     shift, and go to state 28
    U32     shift, and go to state 29
    U64     shift, and go to state 30
    USIZE   shift, and go to state 31
    BOOL    shift, and go to state 32
    LPAREN  shift, and go to state 33

    type  go to state 81


State 40

   51 type: LPAREN RPAREN •

    $default  reduce using rule 51 (type)


State 41

   37 type_list: type_list • COMMA type
   50 type: LPAREN type_list • RPAREN

    COMMA   shift, and go to state 82
    RPAREN  shift, and go to state 83


State 42

   38 type_list: type •

    $default  reduce using rule 38 (type_list)


State 43

   78 literal: DEC_LITERAL •

    $default  reduce using rule 78 (literal)


State 44

   80 literal: FLOAT_LITERAL •

    $default  reduce using rule 80 (literal)


State 45

   79 literal: STR_LITERAL •

    $default  reduce using rule 79 (literal)


State 46

   81 literal: TRUE •

    $default  reduce using rule 81 (literal)


State 47

   82 literal: FALSE •

    $default  reduce using rule 82 (literal)


State 48

   85 call_expr: IDENTIFIER • LPAREN call_expr_args RPAREN
   86          | IDENTIFIER • LPAREN RPAREN
  101 expr_wo_block: IDENTIFIER •

    LPAREN  shift, and go to state 84

    $default  reduce using rule 101 (expr_wo_block)


State 49

   32 let: LET • opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   33    | LET • opt_mut IDENTIFIER type_decl SEMICOLON

    MUT  shift, and go to state 12

    $default  reduce using rule 31 (opt_mut)

    opt_mut  go to state 85


State 50

   87 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 89
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 51

   26 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 92


State 52

   58 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 93
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 53

   56 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 94
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 54

   57 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 95
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 55

   34 if_expr: IF • expr block_expr
   35        | IF • expr block_expr ELSE if_expr
   36        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 96
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 56

   17 stmt: RETURN • SEMICOLON
  105 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    SEMICOLON      shift, and go to state 97
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 98
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 57

   18 stmt: BREAK • SEMICOLON
  106 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    SEMICOLON      shift, and go to state 99
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 100
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 58

   19 stmt: CONTINUE • SEMICOLON
  107 expr_wo_block: CONTINUE •

    SEMICOLON  shift, and go to state 101

    SEMICOLON  [reduce using rule 107 (expr_wo_block)]
    $default   reduce using rule 107 (expr_wo_block)


State 59

   55 block_expr: LBRACE RBRACE •

    $default  reduce using rule 55 (block_expr)


State 60

   98 expr_wo_block: LPAREN • expr RPAREN
  103              | LPAREN • RPAREN
  108              | LPAREN • expr_list opt_comma RPAREN

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    RPAREN         shift, and go to state 102
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 103
    expr_list         go to state 104
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 61

   15 stmt: SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 62

   59 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 105
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 63

   60 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 106
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 64

   22 stmt: item •

    $default  reduce using rule 22 (stmt)


State 65

   25 stmt_list: stmt •

    $default  reduce using rule 25 (stmt_list)


State 66

   23 stmt_list: stmt_list • stmt
   24          | stmt_list • error
   52 block_expr: LBRACE stmt_list • RBRACE
   53           | LBRACE stmt_list • expr RBRACE

    error          shift, and go to state 107
    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    LET            shift, and go to state 49
    FN             shift, and go to state 1
    WHILE          shift, and go to state 50
    PRINT_LN       shift, and go to state 51
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 56
    BREAK          shift, and go to state 57
    CONTINUE       shift, and go to state 58
    LBRACE         shift, and go to state 35
    RBRACE         shift, and go to state 108
    LPAREN         shift, and go to state 60
    SEMICOLON      shift, and go to state 61
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    item              go to state 64
    function_decl     go to state 5
    stmt              go to state 109
    print_ln          go to state 67
    let               go to state 68
    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 110
    expr_stmt         go to state 78
    expr_w_block      go to state 79
    expr_wo_block     go to state 80


State 67

   21 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 111


State 68

   16 stmt: let •

    $default  reduce using rule 16 (stmt)


State 69

   96 expr_w_block: if_expr •

    $default  reduce using rule 96 (expr_w_block)


State 70

   97 expr_w_block: block_expr •

    $default  reduce using rule 97 (expr_w_block)


State 71

  102 expr_wo_block: unary_op_expr •

    $default  reduce using rule 102 (expr_wo_block)


State 72

   99 expr_wo_block: bin_op_expr •

    $default  reduce using rule 99 (expr_wo_block)


State 73

  109 expr_wo_block: literal •

    $default  reduce using rule 109 (expr_wo_block)


State 74

  104 expr_wo_block: call_expr •

    $default  reduce using rule 104 (expr_wo_block)


State 75

   95 expr_w_block: while_expr •

    $default  reduce using rule 95 (expr_w_block)


State 76

  100 expr_wo_block: tuple_index_expr •

    $default  reduce using rule 100 (expr_wo_block)


State 77

   54 block_expr: LBRACE expr • RBRACE
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    RBRACE   shift, and go to state 129
    DOT      shift, and go to state 130


State 78

   20 stmt: expr_stmt •

    $default  reduce using rule 20 (stmt)


State 79

   89 expr: expr_w_block •
   93 expr_stmt: expr_w_block •

    EQ        reduce using rule 89 (expr)
    EQEQ      reduce using rule 89 (expr)
    NE        reduce using rule 89 (expr)
    LT        reduce using rule 89 (expr)
    LE        reduce using rule 89 (expr)
    GT        reduce using rule 89 (expr)
    GE        reduce using rule 89 (expr)
    PLUS      reduce using rule 89 (expr)
    MINUS     reduce using rule 89 (expr)
    MINUS     [reduce using rule 93 (expr_stmt)]
    STAR      reduce using rule 89 (expr)
    STAR      [reduce using rule 93 (expr_stmt)]
    SLASH     reduce using rule 89 (expr)
    L_AND     reduce using rule 89 (expr)
    L_OR      reduce using rule 89 (expr)
    PLUS_EQ   reduce using rule 89 (expr)
    MIN_EQ    reduce using rule 89 (expr)
    MUL_EQ    reduce using rule 89 (expr)
    DIV_EQ    reduce using rule 89 (expr)
    RBRACE    reduce using rule 89 (expr)
    RBRACE    [reduce using rule 93 (expr_stmt)]
    DOT       reduce using rule 89 (expr)
    $default  reduce using rule 93 (expr_stmt)


State 80

   90 expr: expr_wo_block •
   94 expr_stmt: expr_wo_block • SEMICOLON

    SEMICOLON  shift, and go to state 131

    $default  reduce using rule 90 (expr)


State 81

   13 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 13 (func_arg)


State 82

   37 type_list: type_list COMMA • type

    I8      shift, and go to state 22
    I16     shift, and go to state 23
    I32     shift, and go to state 24
    I64     shift, and go to state 25
    ISIZE   shift, and go to state 26
    U8      shift, and go to state 27
    U16     shift, and go to state 28
    U32     shift, and go to state 29
    U64     shift, and go to state 30
    USIZE   shift, and go to state 31
    BOOL    shift, and go to state 32
    LPAREN  shift, and go to state 33

    type  go to state 132


State 83

   50 type: LPAREN type_list RPAREN •

    $default  reduce using rule 50 (type)


State 84

   85 call_expr: IDENTIFIER LPAREN • call_expr_args RPAREN
   86          | IDENTIFIER LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    RPAREN         shift, and go to state 133
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr_args    go to state 134
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 135
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 85

   32 let: LET opt_mut • IDENTIFIER type_decl EQ expr SEMICOLON
   33    | LET opt_mut • IDENTIFIER type_decl SEMICOLON

    IDENTIFIER  shift, and go to state 136


State 86

  105 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 98
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 87

  106 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 100
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 88

  107 expr_wo_block: CONTINUE •

    $default  reduce using rule 107 (expr_wo_block)


State 89

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   87 while_expr: WHILE expr • block_expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    LBRACE   shift, and go to state 35
    DOT      shift, and go to state 130

    block_expr  go to state 137


State 90

   89 expr: expr_w_block •

    $default  reduce using rule 89 (expr)


State 91

   90 expr: expr_wo_block •

    $default  reduce using rule 90 (expr)


State 92

   26 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 138


State 93

   58 unary_op_expr: BANG expr •
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 58 (unary_op_expr)]
    $default  reduce using rule 58 (unary_op_expr)


State 94

   56 unary_op_expr: MINUS expr •
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 56 (unary_op_expr)]
    $default  reduce using rule 56 (unary_op_expr)


State 95

   57 unary_op_expr: STAR expr •
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 57 (unary_op_expr)]
    $default  reduce using rule 57 (unary_op_expr)


State 96

   34 if_expr: IF expr • block_expr
   35        | IF expr • block_expr ELSE if_expr
   36        | IF expr • block_expr ELSE block_expr
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    LBRACE   shift, and go to state 35
    DOT      shift, and go to state 130

    block_expr  go to state 139


State 97

   17 stmt: RETURN SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 98

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL
  105 expr_wo_block: RETURN expr •

    DOT  shift, and go to state 130

    DOT       [reduce using rule 105 (expr_wo_block)]
    $default  reduce using rule 105 (expr_wo_block)


State 99

   18 stmt: BREAK SEMICOLON •

    $default  reduce using rule 18 (stmt)


State 100

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL
  106 expr_wo_block: BREAK expr •

    DOT  shift, and go to state 130

    DOT       [reduce using rule 106 (expr_wo_block)]
    $default  reduce using rule 106 (expr_wo_block)


State 101

   19 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 102

  103 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 103 (expr_wo_block)


State 103

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL
   92 expr_list: expr •
   98 expr_wo_block: LPAREN expr • RPAREN

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    RPAREN   shift, and go to state 140
    DOT      shift, and go to state 130

    RPAREN    [reduce using rule 92 (expr_list)]
    $default  reduce using rule 92 (expr_list)


State 104

   91 expr_list: expr_list • COMMA expr
  108 expr_wo_block: LPAREN expr_list • opt_comma RPAREN

    COMMA  shift, and go to state 141

    $default  reduce using rule 111 (opt_comma)

    opt_comma  go to state 142


State 105

   59 unary_op_expr: AMPERSAND expr •
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 59 (unary_op_expr)]
    $default  reduce using rule 59 (unary_op_expr)


State 106

   60 unary_op_expr: AMPERSAND_MUT expr •
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 60 (unary_op_expr)]
    $default  reduce using rule 60 (unary_op_expr)


State 107

   24 stmt_list: stmt_list error •

    $default  reduce using rule 24 (stmt_list)


State 108

   52 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 52 (block_expr)


State 109

   23 stmt_list: stmt_list stmt •

    $default  reduce using rule 23 (stmt_list)


State 110

   53 block_expr: LBRACE stmt_list expr • RBRACE
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    RBRACE   shift, and go to state 143
    DOT      shift, and go to state 130


State 111

   21 stmt: print_ln SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 112

   73 bin_op_expr: expr EQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 144
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 113

   67 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 145
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 114

   68 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 146
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 115

   69 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 147
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 116

   72 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 148
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 117

   70 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 149
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 118

   71 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 150
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 119

   61 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 151
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 120

   62 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 152
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 121

   63 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 153
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 122

   64 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 154
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 123

   65 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 155
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 124

   66 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 156
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 125

   74 bin_op_expr: expr PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 157
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 126

   75 bin_op_expr: expr MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 158
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 127

   77 bin_op_expr: expr MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 159
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 128

   76 bin_op_expr: expr DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 160
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 129

   54 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 54 (block_expr)


State 130

   88 tuple_index_expr: expr DOT • DEC_LITERAL

    DEC_LITERAL  shift, and go to state 161


State 131

   94 expr_stmt: expr_wo_block SEMICOLON •

    $default  reduce using rule 94 (expr_stmt)


State 132

   37 type_list: type_list COMMA type •

    $default  reduce using rule 37 (type_list)


State 133

   86 call_expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 86 (call_expr)


State 134

   83 call_expr_args: call_expr_args • COMMA expr
   85 call_expr: IDENTIFIER LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 162
    RPAREN  shift, and go to state 163


State 135

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   84 call_expr_args: expr •
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    $default  reduce using rule 84 (call_expr_args)


State 136

   32 let: LET opt_mut IDENTIFIER • type_decl EQ expr SEMICOLON
   33    | LET opt_mut IDENTIFIER • type_decl SEMICOLON

    COLON  shift, and go to state 164

    $default  reduce using rule 29 (type_decl)

    type_decl  go to state 165


State 137

   87 while_expr: WHILE expr block_expr •

    $default  reduce using rule 87 (while_expr)


State 138

   26 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 166


State 139

   34 if_expr: IF expr block_expr •
   35        | IF expr block_expr • ELSE if_expr
   36        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 167

    $default  reduce using rule 34 (if_expr)


State 140

   98 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 98 (expr_wo_block)


State 141

   91 expr_list: expr_list COMMA • expr
  110 opt_comma: COMMA •

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    $default  reduce using rule 110 (opt_comma)

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 168
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 142

  108 expr_wo_block: LPAREN expr_list opt_comma • RPAREN

    RPAREN  shift, and go to state 169


State 143

   53 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 53 (block_expr)


State 144

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   73            | expr EQ expr •
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    DOT       [reduce using rule 73 (bin_op_expr)]
    $default  reduce using rule 73 (bin_op_expr)


State 145

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   67            | expr EQEQ expr •
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 67 (bin_op_expr)]
    $default  reduce using rule 67 (bin_op_expr)


State 146

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   68            | expr NE expr •
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 68 (bin_op_expr)]
    $default  reduce using rule 68 (bin_op_expr)


State 147

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   69            | expr LT expr •
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 69 (bin_op_expr)]
    $default  reduce using rule 69 (bin_op_expr)


State 148

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   72            | expr LE expr •
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 72 (bin_op_expr)]
    $default  reduce using rule 72 (bin_op_expr)


State 149

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   70            | expr GT expr •
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 70 (bin_op_expr)]
    $default  reduce using rule 70 (bin_op_expr)


State 150

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   71            | expr GE expr •
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 71 (bin_op_expr)]
    $default  reduce using rule 71 (bin_op_expr)


State 151

   61 bin_op_expr: expr • PLUS expr
   61            | expr PLUS expr •
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 61 (bin_op_expr)]
    $default  reduce using rule 61 (bin_op_expr)


State 152

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   62            | expr MINUS expr •
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 62 (bin_op_expr)]
    $default  reduce using rule 62 (bin_op_expr)


State 153

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   63            | expr STAR expr •
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 63 (bin_op_expr)]
    $default  reduce using rule 63 (bin_op_expr)


State 154

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   64            | expr SLASH expr •
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    DOT  shift, and go to state 130

    DOT       [reduce using rule 64 (bin_op_expr)]
    $default  reduce using rule 64 (bin_op_expr)


State 155

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   65            | expr L_AND expr •
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ   shift, and go to state 113
    NE     shift, and go to state 114
    LT     shift, and go to state 115
    LE     shift, and go to state 116
    GT     shift, and go to state 117
    GE     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    DOT    shift, and go to state 130

    DOT       [reduce using rule 65 (bin_op_expr)]
    $default  reduce using rule 65 (bin_op_expr)


State 156

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   66            | expr L_OR expr •
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQEQ   shift, and go to state 113
    NE     shift, and go to state 114
    LT     shift, and go to state 115
    LE     shift, and go to state 116
    GT     shift, and go to state 117
    GE     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    STAR   shift, and go to state 121
    SLASH  shift, and go to state 122
    L_AND  shift, and go to state 123
    DOT    shift, and go to state 130

    DOT       [reduce using rule 66 (bin_op_expr)]
    $default  reduce using rule 66 (bin_op_expr)


State 157

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   74            | expr PLUS_EQ expr •
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    DOT       [reduce using rule 74 (bin_op_expr)]
    $default  reduce using rule 74 (bin_op_expr)


State 158

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   75            | expr MIN_EQ expr •
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    DOT       [reduce using rule 75 (bin_op_expr)]
    $default  reduce using rule 75 (bin_op_expr)


State 159

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   77            | expr MUL_EQ expr •
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    DOT       [reduce using rule 77 (bin_op_expr)]
    $default  reduce using rule 77 (bin_op_expr)


State 160

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   76            | expr DIV_EQ expr •
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    DOT       [reduce using rule 76 (bin_op_expr)]
    $default  reduce using rule 76 (bin_op_expr)


State 161

   88 tuple_index_expr: expr DOT DEC_LITERAL •

    $default  reduce using rule 88 (tuple_index_expr)


State 162

   83 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 170
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 163

   85 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN •

    $default  reduce using rule 85 (call_expr)


State 164

   27 type_decl: COLON • type
   28          | COLON • error

    error   shift, and go to state 171
    I8      shift, and go to state 22
    I16     shift, and go to state 23
    I32     shift, and go to state 24
    I64     shift, and go to state 25
    ISIZE   shift, and go to state 26
    U8      shift, and go to state 27
    U16     shift, and go to state 28
    U32     shift, and go to state 29
    U64     shift, and go to state 30
    USIZE   shift, and go to state 31
    BOOL    shift, and go to state 32
    LPAREN  shift, and go to state 33

    type  go to state 172


State 165

   32 let: LET opt_mut IDENTIFIER type_decl • EQ expr SEMICOLON
   33    | LET opt_mut IDENTIFIER type_decl • SEMICOLON

    EQ         shift, and go to state 173
    SEMICOLON  shift, and go to state 174


State 166

   26 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 26 (print_ln)


State 167

   35 if_expr: IF expr block_expr ELSE • if_expr
   36        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 55
    LBRACE  shift, and go to state 35

    if_expr     go to state 175
    block_expr  go to state 176


State 168

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL
   91 expr_list: expr_list COMMA expr •

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    $default  reduce using rule 91 (expr_list)


State 169

  108 expr_wo_block: LPAREN expr_list opt_comma RPAREN •

    $default  reduce using rule 108 (expr_wo_block)


State 170

   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   83 call_expr_args: call_expr_args COMMA expr •
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ       shift, and go to state 112
    EQEQ     shift, and go to state 113
    NE       shift, and go to state 114
    LT       shift, and go to state 115
    LE       shift, and go to state 116
    GT       shift, and go to state 117
    GE       shift, and go to state 118
    PLUS     shift, and go to state 119
    MINUS    shift, and go to state 120
    STAR     shift, and go to state 121
    SLASH    shift, and go to state 122
    L_AND    shift, and go to state 123
    L_OR     shift, and go to state 124
    PLUS_EQ  shift, and go to state 125
    MIN_EQ   shift, and go to state 126
    MUL_EQ   shift, and go to state 127
    DIV_EQ   shift, and go to state 128
    DOT      shift, and go to state 130

    $default  reduce using rule 83 (call_expr_args)


State 171

   28 type_decl: COLON error •

    $default  reduce using rule 28 (type_decl)


State 172

   27 type_decl: COLON type •

    $default  reduce using rule 27 (type_decl)


State 173

   32 let: LET opt_mut IDENTIFIER type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    STR_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    WHILE          shift, and go to state 50
    BANG           shift, and go to state 52
    MINUS          shift, and go to state 53
    STAR           shift, and go to state 54
    IF             shift, and go to state 55
    RETURN         shift, and go to state 86
    BREAK          shift, and go to state 87
    CONTINUE       shift, and go to state 88
    LBRACE         shift, and go to state 35
    LPAREN         shift, and go to state 60
    AMPERSAND      shift, and go to state 62
    AMPERSAND_MUT  shift, and go to state 63

    if_expr           go to state 69
    block_expr        go to state 70
    unary_op_expr     go to state 71
    bin_op_expr       go to state 72
    literal           go to state 73
    call_expr         go to state 74
    while_expr        go to state 75
    tuple_index_expr  go to state 76
    expr              go to state 177
    expr_w_block      go to state 90
    expr_wo_block     go to state 91


State 174

   33 let: LET opt_mut IDENTIFIER type_decl SEMICOLON •

    $default  reduce using rule 33 (let)


State 175

   35 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 35 (if_expr)


State 176

   36 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 36 (if_expr)


State 177

   32 let: LET opt_mut IDENTIFIER type_decl EQ expr • SEMICOLON
   61 bin_op_expr: expr • PLUS expr
   62            | expr • MINUS expr
   63            | expr • STAR expr
   64            | expr • SLASH expr
   65            | expr • L_AND expr
   66            | expr • L_OR expr
   67            | expr • EQEQ expr
   68            | expr • NE expr
   69            | expr • LT expr
   70            | expr • GT expr
   71            | expr • GE expr
   72            | expr • LE expr
   73            | expr • EQ expr
   74            | expr • PLUS_EQ expr
   75            | expr • MIN_EQ expr
   76            | expr • DIV_EQ expr
   77            | expr • MUL_EQ expr
   88 tuple_index_expr: expr • DOT DEC_LITERAL

    EQ         shift, and go to state 112
    EQEQ       shift, and go to state 113
    NE         shift, and go to state 114
    LT         shift, and go to state 115
    LE         shift, and go to state 116
    GT         shift, and go to state 117
    GE         shift, and go to state 118
    PLUS       shift, and go to state 119
    MINUS      shift, and go to state 120
    STAR       shift, and go to state 121
    SLASH      shift, and go to state 122
    L_AND      shift, and go to state 123
    L_OR       shift, and go to state 124
    PLUS_EQ    shift, and go to state 125
    MIN_EQ     shift, and go to state 126
    MUL_EQ     shift, and go to state 127
    DIV_EQ     shift, and go to state 128
    SEMICOLON  shift, and go to state 178
    DOT        shift, and go to state 130


State 178

   32 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON •

    $default  reduce using rule 32 (let)
