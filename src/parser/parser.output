Nonterminals useless in grammar

    ref_add


Terminals unused in grammar

    UNDERSCORE
    OR
    MOD_EQ
    BIT_AND_EQ
    BIT_OR_EQ
    BIT_XOR_EQ
    SHL_EQ
    SHR_EQ
    MOD


State 60 conflicts: 1 shift/reduce
State 81 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: item_list

    2 item_list: item_list item
    3          | item_list error item
    4          | item
    5          | error

    6 item: function_decl

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr

    8 func_ret_type: ARROW type
    9              | ε

   10 func_decl_args: LPAREN func_arg_list RPAREN
   11               | LPAREN RPAREN
   12               | error

   13 func_arg_list: func_arg_list COMMA func_arg
   14              | func_arg

   15 func_arg: opt_mut IDENTIFIER COLON type
   16         | opt_mut IDENTIFIER error

   17 stmt: SEMICOLON
   18     | let
   19     | RETURN SEMICOLON
   20     | BREAK SEMICOLON
   21     | CONTINUE SEMICOLON
   22     | expr_stmt
   23     | print_ln SEMICOLON
   24     | item
   25     | error SEMICOLON

   26 stmt_list: stmt_list stmt
   27          | stmt

   28 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN

   29 type_decl: COLON type
   30          | ε

   31 opt_mut: MUT
   32        | ε

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER type_decl SEMICOLON

   36 if_expr: IF expr block_expr
   37        | IF expr block_expr ELSE if_expr
   38        | IF expr block_expr ELSE block_expr

   39 type: I8
   40     | I16
   41     | I32
   42     | I64
   43     | ISIZE
   44     | U8
   45     | U16
   46     | U32
   47     | U64
   48     | USIZE
   49     | BOOL
   50     | LPAREN RPAREN

   51 block_expr: LBRACE stmt_list RBRACE
   52           | LBRACE stmt_list expr RBRACE
   53           | LBRACE expr RBRACE
   54           | LBRACE RBRACE

   55 assignment: IDENTIFIER EQ expr
   56           | IDENTIFIER PLUS_EQ expr
   57           | IDENTIFIER MIN_EQ expr
   58           | IDENTIFIER DIV_EQ expr
   59           | IDENTIFIER MUL_EQ expr

   60 unary_op_expr: MINUS expr
   61              | STAR expr
   62              | BANG expr
   63              | AMPERSAND expr
   64              | AMPERSAND_MUT expr

   65 bin_op_expr: expr PLUS expr
   66            | expr MINUS expr
   67            | expr STAR expr
   68            | expr SLASH expr
   69            | expr L_AND expr
   70            | expr L_OR expr
   71            | expr EQEQ expr
   72            | expr NE expr
   73            | expr LT expr
   74            | expr GT expr
   75            | expr GE expr
   76            | expr LE expr

   77 literal: DEC_LITERAL
   78        | STR_LITERAL
   79        | FLOAT_LITERAL
   80        | TRUE
   81        | FALSE

   82 call_expr_args: call_expr_args COMMA expr
   83               | expr

   84 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN
   85          | IDENTIFIER LPAREN RPAREN

   86 while_expr: WHILE expr block_expr

   87 expr: expr_w_block
   88     | expr_wo_block

   89 expr_stmt: expr_w_block
   90          | expr_wo_block SEMICOLON

   91 expr_w_block: while_expr
   92             | if_expr
   93             | block_expr

   94 expr_wo_block: assignment
   95              | bin_op_expr
   96              | IDENTIFIER
   97              | unary_op_expr
   98              | LPAREN expr RPAREN
   99              | LPAREN RPAREN
  100              | call_expr
  101              | RETURN expr
  102              | BREAK expr
  103              | CONTINUE
  104              | literal


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3 5 12 16 25 34
    DEC_LITERAL <Token> (258) 77
    FLOAT_LITERAL <Token> (259) 79
    STR_LITERAL <Token> (260) 28 78
    TRUE <Token> (261) 80
    FALSE <Token> (262) 81
    IDENTIFIER <Token> (263) 7 15 16 33 34 35 55 56 57 58 59 84 85 96
    UNDERSCORE <Token> (264)
    I8 <Token> (265) 39
    I16 <Token> (266) 40
    I32 <Token> (267) 41
    I64 <Token> (268) 42
    ISIZE <Token> (269) 43
    U8 <Token> (270) 44
    U16 <Token> (271) 45
    U32 <Token> (272) 46
    U64 <Token> (273) 47
    USIZE <Token> (274) 48
    LET <Token> (275) 33 34 35
    MUT <Token> (276) 31
    BOOL <Token> (277) 49
    FN <Token> (278) 7
    WHILE <Token> (279) 86
    PRINT_LN <Token> (280) 28
    EQ <Token> (281) 33 34 55
    EQEQ <Token> (282) 71
    NE <Token> (283) 72
    BANG <Token> (284) 62
    LT <Token> (285) 73
    LE <Token> (286) 76
    GT <Token> (287) 74
    GE <Token> (288) 75
    PLUS <Token> (289) 65
    MINUS <Token> (290) 60 66
    STAR <Token> (291) 61 67
    SLASH <Token> (292) 68
    COMMA <Token> (293) 13 82
    ARROW <Token> (294) 8
    IF <Token> (295) 36 37 38
    ELSE <Token> (296) 37 38
    RETURN <Token> (297) 19 101
    BREAK <Token> (298) 20 102
    CONTINUE <Token> (299) 21 103
    L_AND <Token> (300) 69
    L_OR <Token> (301) 70
    PLUS_EQ <Token> (302) 56
    MIN_EQ <Token> (303) 57
    MUL_EQ <Token> (304) 59
    DIV_EQ <Token> (305) 58
    LBRACE <Token> (306) 51 52 53 54
    RBRACE <Token> (307) 51 52 53 54
    LPAREN <Token> (308) 10 11 28 50 84 85 98 99
    RPAREN <Token> (309) 10 11 28 50 84 85 98 99
    SEMICOLON <Token> (310) 17 19 20 21 23 25 33 34 35 90
    COLON <Token> (311) 15 29
    AMPERSAND <Token> (312) 63
    OR <Token> (313)
    AMPERSAND_MUT <Token> (314) 64
    MOD_EQ (315)
    BIT_AND_EQ (316)
    BIT_OR_EQ (317)
    BIT_XOR_EQ (318)
    SHL_EQ (319)
    SHR_EQ (320)
    MOD (321)
    UMINUS (322)
    DEREF (323)
    NOT (324)
    REF (325)
    REF_MUT (326)
    CALL_INDEX (327)
    UNARY (328)
    BIN_OP (329)
    CONTROL_FLOW (330)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    program <U<Ast>> (77)
        on left: 1
        on right: 0
    item_list <std::vector<U<Item>>> (78)
        on left: 2 3 4 5
        on right: 1 2 3
    item <U<Item>> (79)
        on left: 6
        on right: 2 3 4 24
    function_decl <U<FunDecl>> (80)
        on left: 7
        on right: 6
    func_ret_type <Type> (81)
        on left: 8 9
        on right: 7
    func_decl_args <std::vector<FunArg>> (82)
        on left: 10 11 12
        on right: 7
    func_arg_list <std::vector<FunArg>> (83)
        on left: 13 14
        on right: 10 13
    func_arg <FunArg> (84)
        on left: 15 16
        on right: 13 14
    stmt <U<Stmt>> (85)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 26 27
    stmt_list <std::vector<U<Stmt>>> (86)
        on left: 26 27
        on right: 26 51 52
    print_ln <U<PrintLn>> (87)
        on left: 28
        on right: 23
    type_decl <std::optional<Type>> (88)
        on left: 29 30
        on right: 33 34 35
    opt_mut <bool> (89)
        on left: 31 32
        on right: 15 16 33 34 35
    let <U<LetStmt>> (90)
        on left: 33 34 35
        on right: 18
    if_expr <U<IfElse>> (91)
        on left: 36 37 38
        on right: 37 92
    type <Type> (92)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 8 15 29
    block_expr <U<BlockExpr>> (93)
        on left: 51 52 53 54
        on right: 7 36 37 38 86 93
    assignment <U<AssignExpr>> (94)
        on left: 55 56 57 58 59
        on right: 94
    unary_op_expr <U<UnaryOpExpr>> (95)
        on left: 60 61 62 63 64
        on right: 97
    bin_op_expr <U<BinOpExpr>> (96)
        on left: 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 95
    literal <U<Literal>> (97)
        on left: 77 78 79 80 81
        on right: 104
    call_expr_args <std::vector<U<Expr>>> (98)
        on left: 82 83
        on right: 82 84
    call_expr <U<CallExpr>> (99)
        on left: 84 85
        on right: 100
    while_expr <U<WhileLoop>> (100)
        on left: 86
        on right: 91
    expr <U<Expr>> (101)
        on left: 87 88
        on right: 33 36 37 38 52 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 82 83 86 98 101 102
    expr_stmt <U<Expr>> (102)
        on left: 89 90
        on right: 22
    expr_w_block <U<Expr>> (103)
        on left: 91 92 93
        on right: 87 89
    expr_wo_block <U<Expr>> (104)
        on left: 94 95 96 97 98 99 100 101 102 103 104
        on right: 88 90


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    FN     shift, and go to state 2

    program        go to state 3
    item_list      go to state 4
    item           go to state 5
    function_decl  go to state 6


State 1

    5 item_list: error •

    $default  reduce using rule 5 (item_list)


State 2

    7 function_decl: FN • IDENTIFIER func_decl_args func_ret_type block_expr

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: item_list •
    2 item_list: item_list • item
    3          | item_list • error item

    error  shift, and go to state 9
    FN     shift, and go to state 2

    $end  reduce using rule 1 (program)

    item           go to state 10
    function_decl  go to state 6


State 5

    4 item_list: item •

    $default  reduce using rule 4 (item_list)


State 6

    6 item: function_decl •

    $default  reduce using rule 6 (item)


State 7

    7 function_decl: FN IDENTIFIER • func_decl_args func_ret_type block_expr

    error   shift, and go to state 11
    LPAREN  shift, and go to state 12

    func_decl_args  go to state 13


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 item_list: item_list error • item

    FN  shift, and go to state 2

    item           go to state 14
    function_decl  go to state 6


State 10

    2 item_list: item_list item •

    $default  reduce using rule 2 (item_list)


State 11

   12 func_decl_args: error •

    $default  reduce using rule 12 (func_decl_args)


State 12

   10 func_decl_args: LPAREN • func_arg_list RPAREN
   11               | LPAREN • RPAREN

    MUT     shift, and go to state 15
    RPAREN  shift, and go to state 16

    $default  reduce using rule 32 (opt_mut)

    func_arg_list  go to state 17
    func_arg       go to state 18
    opt_mut        go to state 19


State 13

    7 function_decl: FN IDENTIFIER func_decl_args • func_ret_type block_expr

    ARROW  shift, and go to state 20

    $default  reduce using rule 9 (func_ret_type)

    func_ret_type  go to state 21


State 14

    3 item_list: item_list error item •

    $default  reduce using rule 3 (item_list)


State 15

   31 opt_mut: MUT •

    $default  reduce using rule 31 (opt_mut)


State 16

   11 func_decl_args: LPAREN RPAREN •

    $default  reduce using rule 11 (func_decl_args)


State 17

   10 func_decl_args: LPAREN func_arg_list • RPAREN
   13 func_arg_list: func_arg_list • COMMA func_arg

    COMMA   shift, and go to state 22
    RPAREN  shift, and go to state 23


State 18

   14 func_arg_list: func_arg •

    $default  reduce using rule 14 (func_arg_list)


State 19

   15 func_arg: opt_mut • IDENTIFIER COLON type
   16         | opt_mut • IDENTIFIER error

    IDENTIFIER  shift, and go to state 24


State 20

    8 func_ret_type: ARROW • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 37


State 21

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type • block_expr

    LBRACE  shift, and go to state 38

    block_expr  go to state 39


State 22

   13 func_arg_list: func_arg_list COMMA • func_arg

    MUT  shift, and go to state 15

    $default  reduce using rule 32 (opt_mut)

    func_arg  go to state 40
    opt_mut   go to state 19


State 23

   10 func_decl_args: LPAREN func_arg_list RPAREN •

    $default  reduce using rule 10 (func_decl_args)


State 24

   15 func_arg: opt_mut IDENTIFIER • COLON type
   16         | opt_mut IDENTIFIER • error

    error  shift, and go to state 41
    COLON  shift, and go to state 42


State 25

   39 type: I8 •

    $default  reduce using rule 39 (type)


State 26

   40 type: I16 •

    $default  reduce using rule 40 (type)


State 27

   41 type: I32 •

    $default  reduce using rule 41 (type)


State 28

   42 type: I64 •

    $default  reduce using rule 42 (type)


State 29

   43 type: ISIZE •

    $default  reduce using rule 43 (type)


State 30

   44 type: U8 •

    $default  reduce using rule 44 (type)


State 31

   45 type: U16 •

    $default  reduce using rule 45 (type)


State 32

   46 type: U32 •

    $default  reduce using rule 46 (type)


State 33

   47 type: U64 •

    $default  reduce using rule 47 (type)


State 34

   48 type: USIZE •

    $default  reduce using rule 48 (type)


State 35

   49 type: BOOL •

    $default  reduce using rule 49 (type)


State 36

   50 type: LPAREN • RPAREN

    RPAREN  shift, and go to state 43


State 37

    8 func_ret_type: ARROW type •

    $default  reduce using rule 8 (func_ret_type)


State 38

   51 block_expr: LBRACE • stmt_list RBRACE
   52           | LBRACE • stmt_list expr RBRACE
   53           | LBRACE • expr RBRACE
   54           | LBRACE • RBRACE

    error          shift, and go to state 44
    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    LET            shift, and go to state 51
    FN             shift, and go to state 2
    WHILE          shift, and go to state 52
    PRINT_LN       shift, and go to state 53
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    LBRACE         shift, and go to state 38
    RBRACE         shift, and go to state 61
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 63
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    item           go to state 66
    function_decl  go to state 6
    stmt           go to state 67
    stmt_list      go to state 68
    print_ln       go to state 69
    let            go to state 70
    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 79
    expr_stmt      go to state 80
    expr_w_block   go to state 81
    expr_wo_block  go to state 82


State 39

    7 function_decl: FN IDENTIFIER func_decl_args func_ret_type block_expr •

    $default  reduce using rule 7 (function_decl)


State 40

   13 func_arg_list: func_arg_list COMMA func_arg •

    $default  reduce using rule 13 (func_arg_list)


State 41

   16 func_arg: opt_mut IDENTIFIER error •

    $default  reduce using rule 16 (func_arg)


State 42

   15 func_arg: opt_mut IDENTIFIER COLON • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 83


State 43

   50 type: LPAREN RPAREN •

    $default  reduce using rule 50 (type)


State 44

   25 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 84


State 45

   77 literal: DEC_LITERAL •

    $default  reduce using rule 77 (literal)


State 46

   79 literal: FLOAT_LITERAL •

    $default  reduce using rule 79 (literal)


State 47

   78 literal: STR_LITERAL •

    $default  reduce using rule 78 (literal)


State 48

   80 literal: TRUE •

    $default  reduce using rule 80 (literal)


State 49

   81 literal: FALSE •

    $default  reduce using rule 81 (literal)


State 50

   55 assignment: IDENTIFIER • EQ expr
   56           | IDENTIFIER • PLUS_EQ expr
   57           | IDENTIFIER • MIN_EQ expr
   58           | IDENTIFIER • DIV_EQ expr
   59           | IDENTIFIER • MUL_EQ expr
   84 call_expr: IDENTIFIER • LPAREN call_expr_args RPAREN
   85          | IDENTIFIER • LPAREN RPAREN
   96 expr_wo_block: IDENTIFIER •

    EQ       shift, and go to state 85
    PLUS_EQ  shift, and go to state 86
    MIN_EQ   shift, and go to state 87
    MUL_EQ   shift, and go to state 88
    DIV_EQ   shift, and go to state 89
    LPAREN   shift, and go to state 90

    $default  reduce using rule 96 (expr_wo_block)


State 51

   33 let: LET • opt_mut IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET • opt_mut IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET • opt_mut IDENTIFIER type_decl SEMICOLON

    MUT  shift, and go to state 15

    $default  reduce using rule 32 (opt_mut)

    opt_mut  go to state 91


State 52

   86 while_expr: WHILE • expr block_expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 95
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 53

   28 print_ln: PRINT_LN • LPAREN STR_LITERAL RPAREN

    LPAREN  shift, and go to state 98


State 54

   62 unary_op_expr: BANG • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 99
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 55

   60 unary_op_expr: MINUS • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 100
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 56

   61 unary_op_expr: STAR • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 101
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 57

   36 if_expr: IF • expr block_expr
   37        | IF • expr block_expr ELSE if_expr
   38        | IF • expr block_expr ELSE block_expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 102
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 58

   19 stmt: RETURN • SEMICOLON
  101 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 103
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 104
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 59

   20 stmt: BREAK • SEMICOLON
  102 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 105
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 106
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 60

   21 stmt: CONTINUE • SEMICOLON
  103 expr_wo_block: CONTINUE •

    SEMICOLON  shift, and go to state 107

    SEMICOLON  [reduce using rule 103 (expr_wo_block)]
    $default   reduce using rule 103 (expr_wo_block)


State 61

   54 block_expr: LBRACE RBRACE •

    $default  reduce using rule 54 (block_expr)


State 62

   98 expr_wo_block: LPAREN • expr RPAREN
   99              | LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    RPAREN         shift, and go to state 108
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 109
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 63

   17 stmt: SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 64

   63 unary_op_expr: AMPERSAND • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 110
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 65

   64 unary_op_expr: AMPERSAND_MUT • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 111
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 66

   24 stmt: item •

    $default  reduce using rule 24 (stmt)


State 67

   27 stmt_list: stmt •

    $default  reduce using rule 27 (stmt_list)


State 68

   26 stmt_list: stmt_list • stmt
   51 block_expr: LBRACE stmt_list • RBRACE
   52           | LBRACE stmt_list • expr RBRACE

    error          shift, and go to state 44
    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    LET            shift, and go to state 51
    FN             shift, and go to state 2
    WHILE          shift, and go to state 52
    PRINT_LN       shift, and go to state 53
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    LBRACE         shift, and go to state 38
    RBRACE         shift, and go to state 112
    LPAREN         shift, and go to state 62
    SEMICOLON      shift, and go to state 63
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    item           go to state 66
    function_decl  go to state 6
    stmt           go to state 113
    print_ln       go to state 69
    let            go to state 70
    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 114
    expr_stmt      go to state 80
    expr_w_block   go to state 81
    expr_wo_block  go to state 82


State 69

   23 stmt: print_ln • SEMICOLON

    SEMICOLON  shift, and go to state 115


State 70

   18 stmt: let •

    $default  reduce using rule 18 (stmt)


State 71

   92 expr_w_block: if_expr •

    $default  reduce using rule 92 (expr_w_block)


State 72

   93 expr_w_block: block_expr •

    $default  reduce using rule 93 (expr_w_block)


State 73

   94 expr_wo_block: assignment •

    $default  reduce using rule 94 (expr_wo_block)


State 74

   97 expr_wo_block: unary_op_expr •

    $default  reduce using rule 97 (expr_wo_block)


State 75

   95 expr_wo_block: bin_op_expr •

    $default  reduce using rule 95 (expr_wo_block)


State 76

  104 expr_wo_block: literal •

    $default  reduce using rule 104 (expr_wo_block)


State 77

  100 expr_wo_block: call_expr •

    $default  reduce using rule 100 (expr_wo_block)


State 78

   91 expr_w_block: while_expr •

    $default  reduce using rule 91 (expr_w_block)


State 79

   53 block_expr: LBRACE expr • RBRACE
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ    shift, and go to state 116
    NE      shift, and go to state 117
    LT      shift, and go to state 118
    LE      shift, and go to state 119
    GT      shift, and go to state 120
    GE      shift, and go to state 121
    PLUS    shift, and go to state 122
    MINUS   shift, and go to state 123
    STAR    shift, and go to state 124
    SLASH   shift, and go to state 125
    L_AND   shift, and go to state 126
    L_OR    shift, and go to state 127
    RBRACE  shift, and go to state 128


State 80

   22 stmt: expr_stmt •

    $default  reduce using rule 22 (stmt)


State 81

   87 expr: expr_w_block •
   89 expr_stmt: expr_w_block •

    EQEQ      reduce using rule 87 (expr)
    NE        reduce using rule 87 (expr)
    LT        reduce using rule 87 (expr)
    LE        reduce using rule 87 (expr)
    GT        reduce using rule 87 (expr)
    GE        reduce using rule 87 (expr)
    PLUS      reduce using rule 87 (expr)
    MINUS     reduce using rule 87 (expr)
    MINUS     [reduce using rule 89 (expr_stmt)]
    STAR      reduce using rule 87 (expr)
    STAR      [reduce using rule 89 (expr_stmt)]
    SLASH     reduce using rule 87 (expr)
    L_AND     reduce using rule 87 (expr)
    L_OR      reduce using rule 87 (expr)
    RBRACE    reduce using rule 87 (expr)
    RBRACE    [reduce using rule 89 (expr_stmt)]
    $default  reduce using rule 89 (expr_stmt)


State 82

   88 expr: expr_wo_block •
   90 expr_stmt: expr_wo_block • SEMICOLON

    SEMICOLON  shift, and go to state 129

    $default  reduce using rule 88 (expr)


State 83

   15 func_arg: opt_mut IDENTIFIER COLON type •

    $default  reduce using rule 15 (func_arg)


State 84

   25 stmt: error SEMICOLON •

    $default  reduce using rule 25 (stmt)


State 85

   55 assignment: IDENTIFIER EQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 130
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 86

   56 assignment: IDENTIFIER PLUS_EQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 131
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 87

   57 assignment: IDENTIFIER MIN_EQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 132
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 88

   59 assignment: IDENTIFIER MUL_EQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 133
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 89

   58 assignment: IDENTIFIER DIV_EQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 134
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 90

   84 call_expr: IDENTIFIER LPAREN • call_expr_args RPAREN
   85          | IDENTIFIER LPAREN • RPAREN

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    RPAREN         shift, and go to state 135
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr         go to state 71
    block_expr      go to state 72
    assignment      go to state 73
    unary_op_expr   go to state 74
    bin_op_expr     go to state 75
    literal         go to state 76
    call_expr_args  go to state 136
    call_expr       go to state 77
    while_expr      go to state 78
    expr            go to state 137
    expr_w_block    go to state 96
    expr_wo_block   go to state 97


State 91

   33 let: LET opt_mut • IDENTIFIER type_decl EQ expr SEMICOLON
   34    | LET opt_mut • IDENTIFIER type_decl error EQ SEMICOLON
   35    | LET opt_mut • IDENTIFIER type_decl SEMICOLON

    IDENTIFIER  shift, and go to state 138


State 92

  101 expr_wo_block: RETURN • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 104
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 93

  102 expr_wo_block: BREAK • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 106
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 94

  103 expr_wo_block: CONTINUE •

    $default  reduce using rule 103 (expr_wo_block)


State 95

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   86 while_expr: WHILE expr • block_expr

    EQEQ    shift, and go to state 116
    NE      shift, and go to state 117
    LT      shift, and go to state 118
    LE      shift, and go to state 119
    GT      shift, and go to state 120
    GE      shift, and go to state 121
    PLUS    shift, and go to state 122
    MINUS   shift, and go to state 123
    STAR    shift, and go to state 124
    SLASH   shift, and go to state 125
    L_AND   shift, and go to state 126
    L_OR    shift, and go to state 127
    LBRACE  shift, and go to state 38

    block_expr  go to state 139


State 96

   87 expr: expr_w_block •

    $default  reduce using rule 87 (expr)


State 97

   88 expr: expr_wo_block •

    $default  reduce using rule 88 (expr)


State 98

   28 print_ln: PRINT_LN LPAREN • STR_LITERAL RPAREN

    STR_LITERAL  shift, and go to state 140


State 99

   62 unary_op_expr: BANG expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 62 (unary_op_expr)


State 100

   60 unary_op_expr: MINUS expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 60 (unary_op_expr)


State 101

   61 unary_op_expr: STAR expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 61 (unary_op_expr)


State 102

   36 if_expr: IF expr • block_expr
   37        | IF expr • block_expr ELSE if_expr
   38        | IF expr • block_expr ELSE block_expr
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ    shift, and go to state 116
    NE      shift, and go to state 117
    LT      shift, and go to state 118
    LE      shift, and go to state 119
    GT      shift, and go to state 120
    GE      shift, and go to state 121
    PLUS    shift, and go to state 122
    MINUS   shift, and go to state 123
    STAR    shift, and go to state 124
    SLASH   shift, and go to state 125
    L_AND   shift, and go to state 126
    L_OR    shift, and go to state 127
    LBRACE  shift, and go to state 38

    block_expr  go to state 141


State 103

   19 stmt: RETURN SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 104

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
  101 expr_wo_block: RETURN expr •

    $default  reduce using rule 101 (expr_wo_block)


State 105

   20 stmt: BREAK SEMICOLON •

    $default  reduce using rule 20 (stmt)


State 106

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
  102 expr_wo_block: BREAK expr •

    $default  reduce using rule 102 (expr_wo_block)


State 107

   21 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 108

   99 expr_wo_block: LPAREN RPAREN •

    $default  reduce using rule 99 (expr_wo_block)


State 109

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   98 expr_wo_block: LPAREN expr • RPAREN

    EQEQ    shift, and go to state 116
    NE      shift, and go to state 117
    LT      shift, and go to state 118
    LE      shift, and go to state 119
    GT      shift, and go to state 120
    GE      shift, and go to state 121
    PLUS    shift, and go to state 122
    MINUS   shift, and go to state 123
    STAR    shift, and go to state 124
    SLASH   shift, and go to state 125
    L_AND   shift, and go to state 126
    L_OR    shift, and go to state 127
    RPAREN  shift, and go to state 142


State 110

   63 unary_op_expr: AMPERSAND expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 63 (unary_op_expr)


State 111

   64 unary_op_expr: AMPERSAND_MUT expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 64 (unary_op_expr)


State 112

   51 block_expr: LBRACE stmt_list RBRACE •

    $default  reduce using rule 51 (block_expr)


State 113

   26 stmt_list: stmt_list stmt •

    $default  reduce using rule 26 (stmt_list)


State 114

   52 block_expr: LBRACE stmt_list expr • RBRACE
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ    shift, and go to state 116
    NE      shift, and go to state 117
    LT      shift, and go to state 118
    LE      shift, and go to state 119
    GT      shift, and go to state 120
    GE      shift, and go to state 121
    PLUS    shift, and go to state 122
    MINUS   shift, and go to state 123
    STAR    shift, and go to state 124
    SLASH   shift, and go to state 125
    L_AND   shift, and go to state 126
    L_OR    shift, and go to state 127
    RBRACE  shift, and go to state 143


State 115

   23 stmt: print_ln SEMICOLON •

    $default  reduce using rule 23 (stmt)


State 116

   71 bin_op_expr: expr EQEQ • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 144
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 117

   72 bin_op_expr: expr NE • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 145
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 118

   73 bin_op_expr: expr LT • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 146
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 119

   76 bin_op_expr: expr LE • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 147
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 120

   74 bin_op_expr: expr GT • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 148
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 121

   75 bin_op_expr: expr GE • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 149
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 122

   65 bin_op_expr: expr PLUS • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 150
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 123

   66 bin_op_expr: expr MINUS • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 151
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 124

   67 bin_op_expr: expr STAR • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 152
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 125

   68 bin_op_expr: expr SLASH • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 153
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 126

   69 bin_op_expr: expr L_AND • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 154
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 127

   70 bin_op_expr: expr L_OR • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 155
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 128

   53 block_expr: LBRACE expr RBRACE •

    $default  reduce using rule 53 (block_expr)


State 129

   90 expr_stmt: expr_wo_block SEMICOLON •

    $default  reduce using rule 90 (expr_stmt)


State 130

   55 assignment: IDENTIFIER EQ expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 55 (assignment)


State 131

   56 assignment: IDENTIFIER PLUS_EQ expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 56 (assignment)


State 132

   57 assignment: IDENTIFIER MIN_EQ expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 57 (assignment)


State 133

   59 assignment: IDENTIFIER MUL_EQ expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 59 (assignment)


State 134

   58 assignment: IDENTIFIER DIV_EQ expr •
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 58 (assignment)


State 135

   85 call_expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 85 (call_expr)


State 136

   82 call_expr_args: call_expr_args • COMMA expr
   84 call_expr: IDENTIFIER LPAREN call_expr_args • RPAREN

    COMMA   shift, and go to state 156
    RPAREN  shift, and go to state 157


State 137

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   83 call_expr_args: expr •

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 83 (call_expr_args)


State 138

   33 let: LET opt_mut IDENTIFIER • type_decl EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER • type_decl error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER • type_decl SEMICOLON

    COLON  shift, and go to state 158

    $default  reduce using rule 30 (type_decl)

    type_decl  go to state 159


State 139

   86 while_expr: WHILE expr block_expr •

    $default  reduce using rule 86 (while_expr)


State 140

   28 print_ln: PRINT_LN LPAREN STR_LITERAL • RPAREN

    RPAREN  shift, and go to state 160


State 141

   36 if_expr: IF expr block_expr •
   37        | IF expr block_expr • ELSE if_expr
   38        | IF expr block_expr • ELSE block_expr

    ELSE  shift, and go to state 161

    $default  reduce using rule 36 (if_expr)


State 142

   98 expr_wo_block: LPAREN expr RPAREN •

    $default  reduce using rule 98 (expr_wo_block)


State 143

   52 block_expr: LBRACE stmt_list expr RBRACE •

    $default  reduce using rule 52 (block_expr)


State 144

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   71            | expr EQEQ expr •
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 71 (bin_op_expr)


State 145

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   72            | expr NE expr •
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 72 (bin_op_expr)


State 146

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   73            | expr LT expr •
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 73 (bin_op_expr)


State 147

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   76            | expr LE expr •

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 76 (bin_op_expr)


State 148

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   74            | expr GT expr •
   75            | expr • GE expr
   76            | expr • LE expr

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 74 (bin_op_expr)


State 149

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   75            | expr GE expr •
   76            | expr • LE expr

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 75 (bin_op_expr)


State 150

   65 bin_op_expr: expr • PLUS expr
   65            | expr PLUS expr •
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 65 (bin_op_expr)


State 151

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   66            | expr MINUS expr •
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 66 (bin_op_expr)


State 152

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   67            | expr STAR expr •
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 67 (bin_op_expr)


State 153

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   68            | expr SLASH expr •
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    $default  reduce using rule 68 (bin_op_expr)


State 154

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   69            | expr L_AND expr •
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125

    $default  reduce using rule 69 (bin_op_expr)


State 155

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   70            | expr L_OR expr •
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126

    $default  reduce using rule 70 (bin_op_expr)


State 156

   82 call_expr_args: call_expr_args COMMA • expr

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 162
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 157

   84 call_expr: IDENTIFIER LPAREN call_expr_args RPAREN •

    $default  reduce using rule 84 (call_expr)


State 158

   29 type_decl: COLON • type

    I8      shift, and go to state 25
    I16     shift, and go to state 26
    I32     shift, and go to state 27
    I64     shift, and go to state 28
    ISIZE   shift, and go to state 29
    U8      shift, and go to state 30
    U16     shift, and go to state 31
    U32     shift, and go to state 32
    U64     shift, and go to state 33
    USIZE   shift, and go to state 34
    BOOL    shift, and go to state 35
    LPAREN  shift, and go to state 36

    type  go to state 163


State 159

   33 let: LET opt_mut IDENTIFIER type_decl • EQ expr SEMICOLON
   34    | LET opt_mut IDENTIFIER type_decl • error EQ SEMICOLON
   35    | LET opt_mut IDENTIFIER type_decl • SEMICOLON

    error      shift, and go to state 164
    EQ         shift, and go to state 165
    SEMICOLON  shift, and go to state 166


State 160

   28 print_ln: PRINT_LN LPAREN STR_LITERAL RPAREN •

    $default  reduce using rule 28 (print_ln)


State 161

   37 if_expr: IF expr block_expr ELSE • if_expr
   38        | IF expr block_expr ELSE • block_expr

    IF      shift, and go to state 57
    LBRACE  shift, and go to state 38

    if_expr     go to state 167
    block_expr  go to state 168


State 162

   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr
   82 call_expr_args: call_expr_args COMMA expr •

    EQEQ   shift, and go to state 116
    NE     shift, and go to state 117
    LT     shift, and go to state 118
    LE     shift, and go to state 119
    GT     shift, and go to state 120
    GE     shift, and go to state 121
    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    STAR   shift, and go to state 124
    SLASH  shift, and go to state 125
    L_AND  shift, and go to state 126
    L_OR   shift, and go to state 127

    $default  reduce using rule 82 (call_expr_args)


State 163

   29 type_decl: COLON type •

    $default  reduce using rule 29 (type_decl)


State 164

   34 let: LET opt_mut IDENTIFIER type_decl error • EQ SEMICOLON

    EQ  shift, and go to state 169


State 165

   33 let: LET opt_mut IDENTIFIER type_decl EQ • expr SEMICOLON

    DEC_LITERAL    shift, and go to state 45
    FLOAT_LITERAL  shift, and go to state 46
    STR_LITERAL    shift, and go to state 47
    TRUE           shift, and go to state 48
    FALSE          shift, and go to state 49
    IDENTIFIER     shift, and go to state 50
    WHILE          shift, and go to state 52
    BANG           shift, and go to state 54
    MINUS          shift, and go to state 55
    STAR           shift, and go to state 56
    IF             shift, and go to state 57
    RETURN         shift, and go to state 92
    BREAK          shift, and go to state 93
    CONTINUE       shift, and go to state 94
    LBRACE         shift, and go to state 38
    LPAREN         shift, and go to state 62
    AMPERSAND      shift, and go to state 64
    AMPERSAND_MUT  shift, and go to state 65

    if_expr        go to state 71
    block_expr     go to state 72
    assignment     go to state 73
    unary_op_expr  go to state 74
    bin_op_expr    go to state 75
    literal        go to state 76
    call_expr      go to state 77
    while_expr     go to state 78
    expr           go to state 170
    expr_w_block   go to state 96
    expr_wo_block  go to state 97


State 166

   35 let: LET opt_mut IDENTIFIER type_decl SEMICOLON •

    $default  reduce using rule 35 (let)


State 167

   37 if_expr: IF expr block_expr ELSE if_expr •

    $default  reduce using rule 37 (if_expr)


State 168

   38 if_expr: IF expr block_expr ELSE block_expr •

    $default  reduce using rule 38 (if_expr)


State 169

   34 let: LET opt_mut IDENTIFIER type_decl error EQ • SEMICOLON

    SEMICOLON  shift, and go to state 171


State 170

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr • SEMICOLON
   65 bin_op_expr: expr • PLUS expr
   66            | expr • MINUS expr
   67            | expr • STAR expr
   68            | expr • SLASH expr
   69            | expr • L_AND expr
   70            | expr • L_OR expr
   71            | expr • EQEQ expr
   72            | expr • NE expr
   73            | expr • LT expr
   74            | expr • GT expr
   75            | expr • GE expr
   76            | expr • LE expr

    EQEQ       shift, and go to state 116
    NE         shift, and go to state 117
    LT         shift, and go to state 118
    LE         shift, and go to state 119
    GT         shift, and go to state 120
    GE         shift, and go to state 121
    PLUS       shift, and go to state 122
    MINUS      shift, and go to state 123
    STAR       shift, and go to state 124
    SLASH      shift, and go to state 125
    L_AND      shift, and go to state 126
    L_OR       shift, and go to state 127
    SEMICOLON  shift, and go to state 172


State 171

   34 let: LET opt_mut IDENTIFIER type_decl error EQ SEMICOLON •

    $default  reduce using rule 34 (let)


State 172

   33 let: LET opt_mut IDENTIFIER type_decl EQ expr SEMICOLON •

    $default  reduce using rule 33 (let)
